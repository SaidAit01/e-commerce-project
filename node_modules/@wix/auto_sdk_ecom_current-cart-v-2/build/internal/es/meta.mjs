// src/ecom-v2-cart-current-cart-v-2.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixEcomCartV2CurrentCartServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/cart-v2",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "apps._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v2/carts",
        destPath: "/v2/carts"
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_current-cart-v-2";
function createCurrentCart(payload) {
  function __createCurrentCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cart.createdDate" },
          { path: "cart.updatedDate" },
          {
            path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "cart.lineItems.attributes.image.urlExpirationDate" },
          {
            path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "cart.lineItems.attributes.serviceProperties.scheduledDate" },
          {
            path: "catalogItems.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "customItems.attributes.image.urlExpirationDate" },
          {
            path: "customItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "customItems.attributes.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cart.lineItems.attributes.physicalProperties.weight" },
          { path: "cart.deliveryInfo.address.geocode.latitude" },
          { path: "cart.deliveryInfo.address.geocode.longitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.longitude" },
          {
            path: "catalogItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "customItems.attributes.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.CreateCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createCurrentCart;
}
function getCurrentCart(payload) {
  function __getCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "GET",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.GetCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCurrentCart;
}
function updateCurrentCart(payload) {
  function __updateCurrentCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cart.createdDate" },
          { path: "cart.updatedDate" },
          {
            path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "cart.lineItems.attributes.image.urlExpirationDate" },
          {
            path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "cart.lineItems.attributes.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cart.lineItems.attributes.physicalProperties.weight" },
          { path: "cart.deliveryInfo.address.geocode.latitude" },
          { path: "cart.deliveryInfo.address.geocode.longitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "PATCH",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.UpdateCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCurrentCart;
}
function deleteCurrentCart(payload) {
  function __deleteCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "DELETE",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.DeleteCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteCurrentCart;
}
function refreshCurrentCart(payload) {
  function __refreshCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.RefreshCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/refresh",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __refreshCurrentCart;
}
function calculateCurrentCart(payload) {
  function __calculateCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.CalculateCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/calculate",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __calculateCurrentCart;
}
function addLineItemsToCurrentCart(payload) {
  function __addLineItemsToCurrentCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "catalogItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "customItems.attributes.physicalProperties.weight" }
        ]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          {
            path: "catalogItems.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "customItems.attributes.image.urlExpirationDate" },
          {
            path: "customItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "customItems.attributes.serviceProperties.scheduledDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.AddLineItemsToCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/add-line-items",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addLineItemsToCurrentCart;
}
function removeLineItemsFromCurrentCart(payload) {
  function __removeLineItemsFromCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.RemoveLineItemsFromCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/remove-line-items",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeLineItemsFromCurrentCart;
}
function updateLineItemsInCurrentCart(payload) {
  function __updateLineItemsInCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.UpdateLineItemsInCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/update-line-items",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateLineItemsInCurrentCart;
}
function addDiscountToCurrentCart(payload) {
  function __addDiscountToCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.AddDiscountToCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/add-discount",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addDiscountToCurrentCart;
}
function removeDiscountFromCurrentCart(payload) {
  function __removeDiscountFromCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.RemoveDiscountFromCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/remove-discount",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeDiscountFromCurrentCart;
}
function addGiftCardToCurrentCart(payload) {
  function __addGiftCardToCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.AddGiftCardToCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/add-gift-card",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addGiftCardToCurrentCart;
}
function removeGiftCardFromCurrentCart(payload) {
  function __removeGiftCardFromCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CurrentCartService.RemoveGiftCardFromCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CurrentCartServiceUrl({
        protoPath: "/v2/carts/current/remove-gift-card",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeGiftCardFromCurrentCart;
}

// src/ecom-v2-cart-current-cart-v-2.meta.ts
function createCurrentCart2() {
  const payload = {};
  const getRequestOptions = createCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCurrentCart2() {
  const payload = {};
  const getRequestOptions = getCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCurrentCart2() {
  const payload = {};
  const getRequestOptions = updateCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v2/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteCurrentCart2() {
  const payload = {};
  const getRequestOptions = deleteCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v2/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function refreshCurrentCart2() {
  const payload = {};
  const getRequestOptions = refreshCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/refresh",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function calculateCurrentCart2() {
  const payload = {};
  const getRequestOptions = calculateCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/calculate",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addLineItemsToCurrentCart2() {
  const payload = {};
  const getRequestOptions = addLineItemsToCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/add-line-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeLineItemsFromCurrentCart2() {
  const payload = {};
  const getRequestOptions = removeLineItemsFromCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/remove-line-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateLineItemsInCurrentCart2() {
  const payload = {};
  const getRequestOptions = updateLineItemsInCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/update-line-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addDiscountToCurrentCart2() {
  const payload = {};
  const getRequestOptions = addDiscountToCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/add-discount",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeDiscountFromCurrentCart2() {
  const payload = {};
  const getRequestOptions = removeDiscountFromCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/remove-discount",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addGiftCardToCurrentCart2() {
  const payload = {};
  const getRequestOptions = addGiftCardToCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/add-gift-card",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeGiftCardFromCurrentCart2() {
  const payload = {};
  const getRequestOptions = removeGiftCardFromCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/current/remove-gift-card",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  addDiscountToCurrentCart2 as addDiscountToCurrentCart,
  addGiftCardToCurrentCart2 as addGiftCardToCurrentCart,
  addLineItemsToCurrentCart2 as addLineItemsToCurrentCart,
  calculateCurrentCart2 as calculateCurrentCart,
  createCurrentCart2 as createCurrentCart,
  deleteCurrentCart2 as deleteCurrentCart,
  getCurrentCart2 as getCurrentCart,
  refreshCurrentCart2 as refreshCurrentCart,
  removeDiscountFromCurrentCart2 as removeDiscountFromCurrentCart,
  removeGiftCardFromCurrentCart2 as removeGiftCardFromCurrentCart,
  removeLineItemsFromCurrentCart2 as removeLineItemsFromCurrentCart,
  updateCurrentCart2 as updateCurrentCart,
  updateLineItemsInCurrentCart2 as updateLineItemsInCurrentCart
};
//# sourceMappingURL=meta.mjs.map