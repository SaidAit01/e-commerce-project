"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.typings.ts
var index_typings_exports = {};
__export(index_typings_exports, {
  AlreadyRedeemedWixError: () => AlreadyRedeemedWixError,
  AlreadyVoidedWixError: () => AlreadyVoidedWixError,
  CurrencyNotSupportedWixError: () => CurrencyNotSupportedWixError,
  GiftCardDisabledWixError: () => GiftCardDisabledWixError,
  GiftCardExpiredWixError: () => GiftCardExpiredWixError,
  GiftCardNotFoundWixError: () => GiftCardNotFoundWixError,
  IdentityType: () => IdentityType,
  InsufficientFundsWixError: () => InsufficientFundsWixError,
  TransactionNotFoundWixError: () => TransactionNotFoundWixError
});
module.exports = __toCommonJS(index_typings_exports);

// src/service-plugins-error-classes.ts
var GiftCardNotFoundWixError = class extends Error {
  constructor() {
    super("GiftCardNotFound");
    this.httpCode = 404;
    this.statusCode = "NOT_FOUND";
    this.applicationCode = "GIFT_CARD_NOT_FOUND";
    this.name = "GiftCardNotFound";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "GiftCardNotFound",
      applicationCode: "GIFT_CARD_NOT_FOUND"
    };
  }
};
/** @hidden */
GiftCardNotFoundWixError.__type = "wix_spi_error";
var GiftCardDisabledWixError = class extends Error {
  constructor() {
    super("GiftCardDisabled");
    this.httpCode = 428;
    this.statusCode = "FAILED_PRECONDITION";
    this.applicationCode = "GIFT_CARD_DISABLED";
    this.name = "GiftCardDisabled";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "GiftCardDisabled",
      applicationCode: "GIFT_CARD_DISABLED"
    };
  }
};
/** @hidden */
GiftCardDisabledWixError.__type = "wix_spi_error";
var GiftCardExpiredWixError = class extends Error {
  constructor() {
    super("GiftCardExpired");
    this.httpCode = 428;
    this.statusCode = "FAILED_PRECONDITION";
    this.applicationCode = "GIFT_CARD_EXPIRED";
    this.name = "GiftCardExpired";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "GiftCardExpired",
      applicationCode: "GIFT_CARD_EXPIRED"
    };
  }
};
/** @hidden */
GiftCardExpiredWixError.__type = "wix_spi_error";
var InsufficientFundsWixError = class extends Error {
  constructor() {
    super("InsufficientFunds");
    this.httpCode = 428;
    this.statusCode = "FAILED_PRECONDITION";
    this.applicationCode = "INSUFFICIENT_FUNDS";
    this.name = "InsufficientFunds";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "InsufficientFunds",
      applicationCode: "INSUFFICIENT_FUNDS"
    };
  }
};
/** @hidden */
InsufficientFundsWixError.__type = "wix_spi_error";
var AlreadyRedeemedWixError = class extends Error {
  constructor() {
    super("AlreadyRedeemed");
    this.httpCode = 409;
    this.statusCode = "ALREADY_EXISTS";
    this.applicationCode = "ALREADY_REDEEMED";
    this.name = "AlreadyRedeemed";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "AlreadyRedeemed",
      applicationCode: "ALREADY_REDEEMED"
    };
  }
};
/** @hidden */
AlreadyRedeemedWixError.__type = "wix_spi_error";
var CurrencyNotSupportedWixError = class extends Error {
  constructor() {
    super("CurrencyNotSupported");
    this.httpCode = 400;
    this.statusCode = "INVALID_ARGUMENT";
    this.applicationCode = "CURRENCY_NOT_SUPPORTED";
    this.name = "CurrencyNotSupported";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "CurrencyNotSupported",
      applicationCode: "CURRENCY_NOT_SUPPORTED"
    };
  }
};
/** @hidden */
CurrencyNotSupportedWixError.__type = "wix_spi_error";
var TransactionNotFoundWixError = class extends Error {
  constructor() {
    super("TransactionNotFound");
    this.httpCode = 404;
    this.statusCode = "NOT_FOUND";
    this.applicationCode = "TRANSACTION_NOT_FOUND";
    this.name = "TransactionNotFound";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "TransactionNotFound",
      applicationCode: "TRANSACTION_NOT_FOUND"
    };
  }
};
/** @hidden */
TransactionNotFoundWixError.__type = "wix_spi_error";
var AlreadyVoidedWixError = class extends Error {
  constructor() {
    super("AlreadyVoided");
    this.httpCode = 409;
    this.statusCode = "ALREADY_EXISTS";
    this.applicationCode = "ALREADY_VOIDED";
    this.name = "AlreadyVoided";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "AlreadyVoided",
      applicationCode: "ALREADY_VOIDED"
    };
  }
};
/** @hidden */
AlreadyVoidedWixError.__type = "wix_spi_error";

// src/service-plugins-types.ts
var IdentityType = /* @__PURE__ */ ((IdentityType2) => {
  IdentityType2["UNKNOWN"] = "UNKNOWN";
  IdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  IdentityType2["MEMBER"] = "MEMBER";
  IdentityType2["WIX_USER"] = "WIX_USER";
  IdentityType2["APP"] = "APP";
  return IdentityType2;
})(IdentityType || {});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AlreadyRedeemedWixError,
  AlreadyVoidedWixError,
  CurrencyNotSupportedWixError,
  GiftCardDisabledWixError,
  GiftCardExpiredWixError,
  GiftCardNotFoundWixError,
  IdentityType,
  InsufficientFundsWixError,
  TransactionNotFoundWixError
});
//# sourceMappingURL=index.typings.js.map