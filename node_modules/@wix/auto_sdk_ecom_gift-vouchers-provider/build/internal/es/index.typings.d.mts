import { n as GetBalanceEnvelope, b as GetBalanceResponse, o as RedeemEnvelope, c as RedeemResponse, _ as _voidEnvelope, d as VoidResponse } from './service-plugins-error-classes-DTYhpjD_.mjs';
export { A as AlreadyRedeemedWixError, m as AlreadyVoidedWixError, C as Context, l as CurrencyNotSupportedWixError, a as GetBalanceRequest, i as GiftCardDisabledWixError, j as GiftCardExpiredWixError, h as GiftCardNotFoundWixError, e as GiftCardProviderConfig, G as GiftCardProviderEntity, f as IdentificationData, g as IdentificationDataIdOneOf, I as IdentityType, k as InsufficientFundsWixError, R as RedeemRequest, T as TransactionNotFoundWixError, V as VoidRequest } from './service-plugins-error-classes-DTYhpjD_.mjs';
import '@wix/sdk-types';

/**
 * This method retrieves gift card data from your app.
 * Wix calls this method when a customer applies a gift card as a payment method at checkout.
 * @throws GiftCardNotFoundWixError
 * @throws GiftCardDisabledWixError
 * @throws GiftCardExpiredWixError
 */
declare function getBalance(payload: GetBalanceEnvelope): GetBalanceResponse | Promise<GetBalanceResponse>;
/**
 * This method requests that a transaction be created by your app.
 * Wix calls this method when a customer completes a purchase that includes a gift card as a payment method at checkout.
 * @throws GiftCardNotFoundWixError
 * @throws GiftCardDisabledWixError
 * @throws GiftCardExpiredWixError
 * @throws InsufficientFundsWixError
 * @throws AlreadyRedeemedWixError
 * @throws CurrencyNotSupportedWixError
 */
declare function redeem(payload: RedeemEnvelope): RedeemResponse | Promise<RedeemResponse>;
/**
 * This method requests that a gift card transaction be voided by your app.
 * Wix calls this method when a purchase fails after gift card redemption.
 */
declare function _void(payload: _voidEnvelope): VoidResponse | Promise<VoidResponse>;

export { GetBalanceEnvelope, GetBalanceResponse, RedeemEnvelope, RedeemResponse, VoidResponse, _void, _voidEnvelope, getBalance, redeem };
