{"version":3,"sources":["../../src/service-plugins-types.ts","../../src/interfaces-ecom-v1-gift-card-provider-entity.public.ts","../../src/interfaces-ecom-v1-gift-card-provider-entity.context.ts","../../src/service-plugins-error-classes.ts"],"sourcesContent":["export interface GiftCardProviderEntity {\n  /**\n   * Dummy id for docs generation.\n   * @format GUID\n   */\n  _id?: string | null;\n}\n\nexport interface GetBalanceRequest {\n  /**\n   * Gift card code.\n   * @minLength 8\n   * @maxLength 20\n   */\n  code?: string;\n  /**\n   * App ID of the Gift Card provider. Deprecated.\n   * @format GUID\n   * @deprecated App ID of the Gift Card provider. Deprecated.\n   * @targetRemovalDate 2025-07-01\n   */\n  appInstanceId?: string;\n  /**\n   * The physical location ID. Can be based on the Locations API or an external provider.\n   * @maxLength 50\n   */\n  locationId?: string | null;\n  /**\n   * Gift card PIN.\n   * @maxLength 50\n   */\n  pin?: string | null;\n}\n\nexport interface GetBalanceResponse {\n  /**\n   * Current balance.\n   * @max 999999999.99\n   */\n  balance?: number;\n  /**\n   * Currency code.\n   * @format CURRENCY\n   */\n  currencyCode?: string;\n  /**\n   * External ID in the gift card provider's system.\n   * Used for integration and tracking across different platforms.\n   * @minLength 1\n   * @maxLength 50\n   */\n  externalId?: string | null;\n}\n\nexport interface RedeemRequest {\n  /**\n   * Gift card code.\n   * @minLength 8\n   * @maxLength 20\n   */\n  code?: string;\n  /**\n   * App ID of the Gift Card provider. Deprecated.\n   * @format GUID\n   * @deprecated App ID of the Gift Card provider. Deprecated.\n   * @targetRemovalDate 2025-07-01\n   */\n  appInstanceId?: string;\n  /**\n   * Amount to redeem from the gift card.\n   * @max 999999999.99\n   */\n  amount?: number;\n  /**\n   * Order ID the gift card transaction is applied to. Order details can be collected from eCommerce Search Orders.\n   * @format GUID\n   */\n  orderId?: string;\n  /**\n   * Currency code.\n   * @format CURRENCY\n   */\n  currencyCode?: string;\n  /**\n   * Physical location ID. Can be based on the Locations API or an external provider.\n   * @maxLength 50\n   */\n  locationId?: string | null;\n  /**\n   * Gift card PIN.\n   * @maxLength 50\n   */\n  pin?: string | null;\n}\n\nexport interface RedeemResponse {\n  /**\n   * Remaining balance on the Gift Card after the redemption.\n   * @max 999999999.99\n   */\n  remainingBalance?: number;\n  /**\n   * Currency code.\n   * @format CURRENCY\n   */\n  currencyCode?: string;\n  /**\n   * Transaction ID.\n   * @minLength 1\n   * @maxLength 100\n   */\n  transactionId?: string;\n}\n\nexport interface VoidRequest {\n  /**\n   * App ID of the Gift Card provider. Deprecated.\n   * @format GUID\n   * @deprecated App ID of the Gift Card provider. Deprecated.\n   * @targetRemovalDate 2025-07-01\n   */\n  appInstanceId?: string;\n  /**\n   * Transaction ID to void.\n   * @minLength 1\n   * @maxLength 100\n   */\n  transactionId?: string;\n  /**\n   * Physical location ID. Can be based on the Locations API or an external provider.\n   * @maxLength 50\n   */\n  locationId?: string | null;\n}\n\nexport interface VoidResponse {\n  /**\n   * Remaining balance on the Gift Card after voiding the transaction.\n   * @max 999999999.99\n   */\n  remainingBalance?: number;\n  /**\n   * Currency code.\n   * @format CURRENCY\n   */\n  currencyCode?: string;\n}\n\nexport interface GiftCardProviderConfig {\n  /** Base URI where the endpoints are called. Wix eCommerce appends the endpoint path to the base URI. For example, to call the Get Balance endpoint at `https://my-gift-cards.com/v1/balance`, the base URI you provide here is `https://my-gift-cards.com/`. */\n  deploymentUri?: string;\n}\n\n/**\n * this message is not directly used by any service,\n * it exists to describe the expected parameters that SHOULD be provided to invoked Velo methods as part of open-platform.\n * e.g. SPIs, event-handlers, etc..\n * NOTE: this context object MUST be provided as the last argument in each Velo method signature.\n *\n * Example:\n * ```typescript\n * export function wixStores_onOrderCanceled({ event, metadata }: OrderCanceledEvent) {\n * ...\n * }\n * ```\n */\nexport interface Context {\n  /** A unique identifier of the request. You may print this ID to your logs to help with future debugging and easier correlation with Wix's logs. */\n  requestId?: string | null;\n  /**\n   * [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-letter currency code.\n   * @format CURRENCY\n   */\n  currency?: string | null;\n  /** An object that describes the identity that triggered this request. */\n  identity?: IdentificationData;\n  /** A string representing a language and region in the format of `\"xx-XX\"`. First 2 letters represent the language code according to ISO 639-1. This is followed by a dash \"-\", and then a by 2 capital letters representing the region according to ISO 3166-2. For example, `\"en-US\"`. */\n  languages?: string[];\n  /**\n   * The service provider app's instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n}\n\nexport enum IdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: IdentityType;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n","import { ServicePluginDefinition } from '@wix/sdk-types';\nimport {\n  Context,\n  GetBalanceRequest,\n  GetBalanceResponse,\n  RedeemRequest,\n  RedeemResponse,\n  VoidRequest,\n  VoidResponse,\n} from './service-plugins-types.js';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\n\nexport interface GetBalanceEnvelope {\n  request: GetBalanceRequest;\n  metadata: Context;\n}\n\nexport interface RedeemEnvelope {\n  request: RedeemRequest;\n  metadata: Context;\n}\n\nexport interface _voidEnvelope {\n  request: VoidRequest;\n  metadata: Context;\n}\n\nexport const provideHandlers = ServicePluginDefinition<{\n  /**\n   *\n   * This method retrieves gift card data from your app.\n   * Wix calls this method when a customer applies a gift card as a payment method at checkout. */\n  getBalance(\n    payload: GetBalanceEnvelope\n  ): GetBalanceResponse | Promise<GetBalanceResponse>;\n\n  /**\n   *\n   * This method requests that a transaction be created by your app.\n   * Wix calls this method when a customer completes a purchase that includes a gift card as a payment method at checkout. */\n  redeem(payload: RedeemEnvelope): RedeemResponse | Promise<RedeemResponse>;\n\n  /**\n   *\n   * This method requests that a gift card transaction be voided by your app.\n   * Wix calls this method when a purchase fails after gift card redemption. */\n  _void(payload: _voidEnvelope): VoidResponse | Promise<VoidResponse>;\n}>('GIFT_CARDS_PROVIDER', [\n  {\n    name: 'getBalance',\n    primaryHttpMappingPath: '/v1/balance',\n    transformations: {\n      toREST: (payload: any) => {\n        const toRestResponse = transformPaths(payload, [\n          {\n            transformFn: transformSDKFloatToRESTFloat,\n            paths: [{ path: 'balance' }],\n          },\n        ]);\n\n        return renameKeysFromSDKRequestToRESTRequest(toRestResponse);\n      },\n      fromREST: (payload: any) => {\n        const fromRestRequest = payload;\n\n        return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);\n      },\n    },\n  },\n\n  {\n    name: 'redeem',\n    primaryHttpMappingPath: '/v1/redeem',\n    transformations: {\n      toREST: (payload: any) => {\n        const toRestResponse = transformPaths(payload, [\n          {\n            transformFn: transformSDKFloatToRESTFloat,\n            paths: [{ path: 'remainingBalance' }],\n          },\n        ]);\n\n        return renameKeysFromSDKRequestToRESTRequest(toRestResponse);\n      },\n      fromREST: (payload: any) => {\n        const fromRestRequest = transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'request.amount' }],\n          },\n        ]);\n\n        return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);\n      },\n    },\n  },\n\n  {\n    name: '_void',\n    primaryHttpMappingPath: '/v1/void',\n    transformations: {\n      toREST: (payload: any) => {\n        const toRestResponse = transformPaths(payload, [\n          {\n            transformFn: transformSDKFloatToRESTFloat,\n            paths: [{ path: 'remainingBalance' }],\n          },\n        ]);\n\n        return renameKeysFromSDKRequestToRESTRequest(toRestResponse);\n      },\n      fromREST: (payload: any) => {\n        const fromRestRequest = payload;\n\n        return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);\n      },\n    },\n  },\n]);\n","import './interfaces-ecom-v1-gift-card-provider-entity.public.js';\nimport { createServicePluginModule } from '@wix/sdk-runtime/service-plugin-modules';\nimport { BuildServicePluginDefinition } from '@wix/sdk-types';\nimport { provideHandlers as publicProvideHandlers } from './interfaces-ecom-v1-gift-card-provider-entity.public.js';\n\nexport { publicProvideHandlers };\n\nexport const provideHandlers: BuildServicePluginDefinition<\n  typeof publicProvideHandlers\n> &\n  typeof publicProvideHandlers = createServicePluginModule(\n  publicProvideHandlers\n);\n","/**\n * Gift card not found\n */\nexport class GiftCardNotFoundWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('GiftCardNotFound');\n\n    this.httpCode = 404;\n    this.statusCode = 'NOT_FOUND';\n    this.applicationCode = 'GIFT_CARD_NOT_FOUND';\n    this.name = 'GiftCardNotFound';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'GiftCardNotFound',\n      applicationCode: 'GIFT_CARD_NOT_FOUND',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Gift card is disabled\n */\nexport class GiftCardDisabledWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('GiftCardDisabled');\n\n    this.httpCode = 428;\n    this.statusCode = 'FAILED_PRECONDITION';\n    this.applicationCode = 'GIFT_CARD_DISABLED';\n    this.name = 'GiftCardDisabled';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'GiftCardDisabled',\n      applicationCode: 'GIFT_CARD_DISABLED',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Gift card was expired\n */\nexport class GiftCardExpiredWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('GiftCardExpired');\n\n    this.httpCode = 428;\n    this.statusCode = 'FAILED_PRECONDITION';\n    this.applicationCode = 'GIFT_CARD_EXPIRED';\n    this.name = 'GiftCardExpired';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'GiftCardExpired',\n      applicationCode: 'GIFT_CARD_EXPIRED',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Insufficient funds for redeem\n */\nexport class InsufficientFundsWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('InsufficientFunds');\n\n    this.httpCode = 428;\n    this.statusCode = 'FAILED_PRECONDITION';\n    this.applicationCode = 'INSUFFICIENT_FUNDS';\n    this.name = 'InsufficientFunds';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'InsufficientFunds',\n      applicationCode: 'INSUFFICIENT_FUNDS',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Gift card already redeemed for the given order\n */\nexport class AlreadyRedeemedWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('AlreadyRedeemed');\n\n    this.httpCode = 409;\n    this.statusCode = 'ALREADY_EXISTS';\n    this.applicationCode = 'ALREADY_REDEEMED';\n    this.name = 'AlreadyRedeemed';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'AlreadyRedeemed',\n      applicationCode: 'ALREADY_REDEEMED',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Currency code not supported\n */\nexport class CurrencyNotSupportedWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('CurrencyNotSupported');\n\n    this.httpCode = 400;\n    this.statusCode = 'INVALID_ARGUMENT';\n    this.applicationCode = 'CURRENCY_NOT_SUPPORTED';\n    this.name = 'CurrencyNotSupported';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'CurrencyNotSupported',\n      applicationCode: 'CURRENCY_NOT_SUPPORTED',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Transaction not found.\n */\nexport class TransactionNotFoundWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('TransactionNotFound');\n\n    this.httpCode = 404;\n    this.statusCode = 'NOT_FOUND';\n    this.applicationCode = 'TRANSACTION_NOT_FOUND';\n    this.name = 'TransactionNotFound';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'TransactionNotFound',\n      applicationCode: 'TRANSACTION_NOT_FOUND',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n\n/**\n * Transaction already voided\n */\nexport class AlreadyVoidedWixError extends Error {\n  /** @hidden */\n  httpCode: number;\n  /** @hidden */\n  statusCode: string;\n  /** @hidden */\n  applicationCode: string;\n  /** @hidden */\n  name: string;\n  /** @hidden */\n  errorType: string;\n  /** @hidden */\n  spiErrorData: object;\n\n  constructor() {\n    super('AlreadyVoided');\n\n    this.httpCode = 409;\n    this.statusCode = 'ALREADY_EXISTS';\n    this.applicationCode = 'ALREADY_VOIDED';\n    this.name = 'AlreadyVoided';\n    this.errorType = 'SPI';\n    this.spiErrorData = {\n      name: 'AlreadyVoided',\n      applicationCode: 'ALREADY_VOIDED',\n    };\n  }\n\n  /** @hidden */\n  static readonly __type = 'wix_spi_error';\n}\n"],"mappings":"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","names":["IdentityType","provideHandlers"]}