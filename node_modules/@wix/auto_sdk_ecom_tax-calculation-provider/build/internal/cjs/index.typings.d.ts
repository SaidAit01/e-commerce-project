import { l as CalculateTaxEnvelope, c as CalculateTaxResponse } from './interfaces-billing-v1-tax-calculation-provider.public-HocYrWGA.js';
export { A as Address, a as AddressIndex, b as AddressIndexAddressIndexOptionsOneOf, h as AlternativeUri, C as CalculateTaxRequest, i as Context, j as IdentificationData, k as IdentificationDataIdOneOf, I as IdentityType, J as JurisdictionType, L as LineItem, d as LineItemTaxDetails, f as LineItemTaxSummary, M as MultipleAddresses, S as SpiBaseUri, e as TaxBreakdown, g as TaxCalculationConfig, T as TaxSummary } from './interfaces-billing-v1-tax-calculation-provider.public-HocYrWGA.js';
import '@wix/sdk-types';

/**
 * Calculates tax for the provided line items.
 *
 * Tax is calculated for each line item based on the tax region
 * in `lineItems.taxRegionId` and the tax group in `lineItems.taxGroupId`.
 *
 * The breakdown of calculated tax returned, includes:
 * + `taxSummary`: The overall total tax calculated.
 * + `lineItemTaxDetails.taxBreakdown`: The tax calculated for each line item in each jurisdiction.
 * + `lineItemTaxDetails.taxSummary`: The total tax calculated for each line item.
 */
declare function calculateTax(payload: CalculateTaxEnvelope): CalculateTaxResponse | Promise<CalculateTaxResponse>;

export { CalculateTaxEnvelope, CalculateTaxResponse, calculateTax };
