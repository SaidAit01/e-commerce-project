import React from "react";
import { type V3Product } from "@wix/auto_sdk_stores_products-v-3";
/**
 * Props for List headless component
 */
export interface ListProps {
    /** Render prop function that receives list data */
    children: (props: ListRenderProps) => React.ReactNode;
}
/**
 * Render props for List component
 */
export interface ListRenderProps {
    /** Array of related products */
    products: V3Product[];
    /** Whether products are loading */
    isLoading: boolean;
    /** Error message if any */
    error: string | null;
    /** Whether there are products available */
    hasProducts: boolean;
    /** Function to refresh products */
    refresh: () => Promise<void>;
}
/**
 * Headless component for displaying related products list
 *
 * @component
 * @example
 * ```tsx
 * import { RelatedProducts } from '@wix/stores/components';
 *
 * function RecommendedProducts() {
 *   return (
 *     <RelatedProducts.List>
 *       {({ products, isLoading, error, hasProducts, refresh }) => (
 *         <div>
 *           <h3>You might also like</h3>
 *           {isLoading && <div>Loading related products...</div>}
 *           {error && <div>Error: {error}</div>}
 *           {hasProducts && (
 *             <div className="products-grid">
 *               {products.map(product => (
 *                 <div key={product.id}>
 *                   <h4>{product.name}</h4>
 *                   <p>{product.price?.price} {product.price?.currency}</p>
 *                 </div>
 *               ))}
 *             </div>
 *           )}
 *           <button onClick={refresh}>Refresh Recommendations</button>
 *         </div>
 *       )}
 *     </RelatedProducts.List>
 *   );
 * }
 * ```
 */
export declare const List: (props: ListProps) => React.ReactNode;
/**
 * Props for Item headless component
 */
export interface ItemProps {
    /** Product data */
    product: V3Product;
    /** Render prop function that receives item data */
    children: (props: ItemRenderProps) => React.ReactNode;
}
/**
 * Render props for Item component
 */
export interface ItemRenderProps {
    /** Product title */
    title: string;
    /** Product image URL */
    image: string | null;
    /** Formatted price */
    price: string;
    /** Whether product is available */
    available: boolean;
    /** Product description */
    description: string;
    /** Function to add product to cart quickly */
    onQuickAdd: () => void;
}
/**
 * Headless component for individual related product item
 *
 * @component
 * @example
 * ```tsx
 * import { RelatedProducts } from '@wix/stores/components';
 *
 * function RelatedProductCard({ product }) {
 *   return (
 *     <RelatedProducts.Item product={product}>
 *       {({ title, image, price, available, description, onQuickAdd }) => (
 *         <div className={`related-product ${!available ? 'unavailable' : ''}`}>
 *           {image && <img src={image} alt={title} />}
 *           <h4>{title}</h4>
 *           {description && <p>{description}</p>}
 *           <div className="price">{price}</div>
 *           {!available && <div className="badge">Out of Stock</div>}
 *           <div className="actions">
 *             <button onClick={onQuickAdd} disabled={!available}>
 *               Quick Add
 *             </button>
 *             <a href={`/product/${product.slug}`}>View Details</a>
 *           </div>
 *         </div>
 *       )}
 *     </RelatedProducts.Item>
 *   );
 * }
 * ```
 */
export declare const Item: (props: ItemProps) => React.ReactNode;
