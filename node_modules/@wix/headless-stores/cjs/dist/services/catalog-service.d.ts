import { type Signal } from "@wix/services-definitions/core-services/signals";
export interface ProductOption {
    id: string;
    name: string;
    choices: ProductChoice[];
    optionRenderType?: string;
}
export interface ProductChoice {
    id: string;
    name: string;
    colorCode?: string;
}
export interface CatalogPriceRange {
    minPrice: number;
    maxPrice: number;
}
export interface CatalogServiceAPI {
    catalogOptions: Signal<ProductOption[] | null>;
    catalogPriceRange: Signal<CatalogPriceRange | null>;
    isLoading: Signal<boolean>;
    error: Signal<string | null>;
    loadCatalogData: (categoryId?: string) => Promise<void>;
}
export declare const CatalogServiceDefinition: string & {
    __api: CatalogServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & CatalogServiceAPI;
export interface CatalogServiceConfig {
}
export declare const CatalogService: import("@wix/services-definitions").ServiceFactory<string & {
    __api: CatalogServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & CatalogServiceAPI, CatalogServiceConfig>;
export declare function loadCatalogServiceConfig(): Promise<CatalogServiceConfig>;
