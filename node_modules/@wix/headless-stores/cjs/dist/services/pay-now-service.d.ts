import { type Signal } from "@wix/services-definitions/core-services/signals";
export declare const PayNowServiceDefinition: string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
};
export interface PayNowServiceConfig {
    customCheckoutAction?: () => Promise<{
        data: string | undefined;
        error: unknown;
    }>;
}
export declare const PayNowServiceImplementation: import("@wix/services-definitions").ServiceFactory<string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
}, PayNowServiceConfig>;
export declare const loadPayNowServiceInitialData: () => Promise<{
    [PayNowServiceDefinition]: {};
}>;
export declare const payNowServiceBinding: <T extends {
    [key: string]: Awaited<ReturnType<typeof loadPayNowServiceInitialData>>[typeof PayNowServiceDefinition];
}>(servicesConfigs: T, additionalConfig?: Partial<PayNowServiceConfig>) => readonly [string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
}, import("@wix/services-definitions").ServiceFactory<string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
}, PayNowServiceConfig>, {
    customCheckoutAction?: () => Promise<{
        data: string | undefined;
        error: unknown;
    }>;
}];
