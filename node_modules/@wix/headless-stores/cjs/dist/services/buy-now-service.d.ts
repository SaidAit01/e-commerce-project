import { type Signal } from "@wix/services-definitions/core-services/signals";
export declare const BuyNowServiceDefinition: string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
        inStockSignal: Signal<boolean>;
        preOrderAvailableSignal: Signal<boolean>;
        productName: string;
        price: string;
        currency: string;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
    inStockSignal: Signal<boolean>;
    preOrderAvailableSignal: Signal<boolean>;
    productName: string;
    price: string;
    currency: string;
};
export interface BuyNowServiceConfig {
    productId: string;
    variantId?: string;
    productName: string;
    price: string;
    currency: string;
    inStock: boolean;
    preOrderAvailable: boolean;
}
export declare const BuyNowServiceImplementation: import("@wix/services-definitions").ServiceFactory<string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
        inStockSignal: Signal<boolean>;
        preOrderAvailableSignal: Signal<boolean>;
        productName: string;
        price: string;
        currency: string;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
    inStockSignal: Signal<boolean>;
    preOrderAvailableSignal: Signal<boolean>;
    productName: string;
    price: string;
    currency: string;
}, {
    productId: string;
    variantId?: string;
    productName: string;
    price: string;
    currency: string;
    inStock: boolean;
    preOrderAvailable: boolean;
}>;
export declare const loadBuyNowServiceInitialData: (productSlug: string, variantId?: string) => Promise<{
    [BuyNowServiceDefinition]: {
        productId: string;
        productName: string;
        price: string;
        currency: string;
        variantId: string | null | undefined;
        inStock: boolean | undefined;
        preOrderAvailable: boolean | undefined;
    };
}>;
export declare const buyNowServiceBinding: <T extends {
    [key: string]: Awaited<ReturnType<typeof loadBuyNowServiceInitialData>>[typeof BuyNowServiceDefinition];
}>(servicesConfigs: T, additionalConfig?: Partial<BuyNowServiceConfig>) => readonly [string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
        inStockSignal: Signal<boolean>;
        preOrderAvailableSignal: Signal<boolean>;
        productName: string;
        price: string;
        currency: string;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
    inStockSignal: Signal<boolean>;
    preOrderAvailableSignal: Signal<boolean>;
    productName: string;
    price: string;
    currency: string;
}, import("@wix/services-definitions").ServiceFactory<string & {
    __api: {
        redirectToCheckout: () => Promise<void>;
        loadingSignal: Signal<boolean>;
        errorSignal: Signal<string | null>;
        inStockSignal: Signal<boolean>;
        preOrderAvailableSignal: Signal<boolean>;
        productName: string;
        price: string;
        currency: string;
    };
    __config: {};
    isServiceDefinition?: boolean;
} & {
    redirectToCheckout: () => Promise<void>;
    loadingSignal: Signal<boolean>;
    errorSignal: Signal<string | null>;
    inStockSignal: Signal<boolean>;
    preOrderAvailableSignal: Signal<boolean>;
    productName: string;
    price: string;
    currency: string;
}, {
    productId: string;
    variantId?: string;
    productName: string;
    price: string;
    currency: string;
    inStock: boolean;
    preOrderAvailable: boolean;
}>, {
    productId: string;
    variantId?: string;
    productName: string;
    price: string;
    currency: string;
    inStock: boolean;
    preOrderAvailable: boolean;
}];
