import type { Signal, ReadOnlySignal } from "@wix/services-definitions/core-services/signals";
import { type ProductOption } from "./catalog-service.js";
export interface PriceRange {
    min: number;
    max: number;
}
export interface AvailableOptions {
    productOptions: ProductOption[];
    priceRange: PriceRange;
}
export type FilterSelectedOptions = Record<string, string[]>;
export interface Filter {
    priceRange: PriceRange;
    selectedOptions: FilterSelectedOptions;
}
export interface FilterServiceAPI {
    currentFilters: Signal<Filter>;
    applyFilters: (filters: Filter) => Promise<void>;
    clearFilters: () => Promise<void>;
    availableOptions: ReadOnlySignal<AvailableOptions>;
    isFullyLoaded: ReadOnlySignal<boolean>;
}
export declare const FilterServiceDefinition: string & {
    __api: FilterServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & FilterServiceAPI;
export declare const defaultFilter: Filter;
export declare const FilterService: import("@wix/services-definitions").ServiceFactory<string & {
    __api: FilterServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & FilterServiceAPI, {
    initialFilters?: Filter;
}>;
