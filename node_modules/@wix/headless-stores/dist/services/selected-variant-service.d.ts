import { type Signal, type ReadOnlySignal } from "@wix/services-definitions/core-services/signals";
import * as productsV3 from "@wix/auto_sdk_stores_products-v-3";
export interface SelectedVariantServiceAPI {
    selectedQuantity: Signal<number>;
    selectedChoices: Signal<Record<string, string>>;
    selectedVariantId: ReadOnlySignal<string | null>;
    currentVariant: ReadOnlySignal<productsV3.Variant | null>;
    currentPrice: ReadOnlySignal<string>;
    currentCompareAtPrice: ReadOnlySignal<string | null>;
    isInStock: ReadOnlySignal<boolean>;
    isPreOrderEnabled: ReadOnlySignal<boolean>;
    preOrderMessage: ReadOnlySignal<string | null>;
    isLoading: Signal<boolean>;
    error: Signal<string | null>;
    variants: Signal<productsV3.Variant[]>;
    options: Signal<Record<string, string[]>>;
    basePrice: Signal<number>;
    discountPrice: Signal<number | null>;
    isOnSale: Signal<boolean | null>;
    quantityAvailable: Signal<number | null>;
    trackQuantity: Signal<boolean>;
    productId: Signal<string>;
    ribbonLabel: Signal<string | null>;
    product: ReadOnlySignal<productsV3.V3Product | null>;
    productOptions: ReadOnlySignal<productsV3.ConnectedOption[]>;
    currency: ReadOnlySignal<string>;
    selectedVariant: () => productsV3.Variant | null;
    finalPrice: () => number;
    isLowStock: () => boolean;
    setSelectedChoices: (choices: Record<string, string>) => void;
    addToCart: (quantity?: number, modifiers?: Record<string, any>) => Promise<void>;
    setOption: (group: string, value: string) => void;
    setSelectedQuantity: (quantity: number) => void;
    incrementQuantity: () => void;
    decrementQuantity: () => void;
    selectVariantById: (id: string) => void;
    resetSelections: () => void;
    getAvailableChoicesForOption: (optionName: string) => string[];
    getChoiceInfo: (optionName: string, choiceValue: string) => {
        isAvailable: boolean;
        isInStock: boolean;
        isPreOrderEnabled: boolean;
    };
    isChoiceAvailable: (optionName: string, choiceValue: string) => boolean;
    isChoiceInStock: (optionName: string, choiceValue: string) => boolean;
    isChoicePreOrderEnabled: (optionName: string, choiceValue: string) => boolean;
    hasAnySelections: () => boolean;
    IsAllVariantsAreOutOfStock: () => boolean;
}
export interface SelectedVariantServiceConfig {
    fetchInventoryData?: boolean;
}
export declare const SelectedVariantServiceDefinition: string & {
    __api: SelectedVariantServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & SelectedVariantServiceAPI;
export declare const SelectedVariantService: import("@wix/services-definitions").ServiceFactory<string & {
    __api: SelectedVariantServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & SelectedVariantServiceAPI, SelectedVariantServiceConfig>;
