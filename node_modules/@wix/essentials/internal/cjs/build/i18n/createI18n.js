import i18n from 'i18next';
import ICU from 'i18next-icu';
export function createI18n(host, asyncMessagesLoader) {
    const i18nInstance = i18n
        .createInstance({
        lng: host.essentials?.locale || 'en',
        fallbackLng: 'en',
        keySeparator: false,
    })
        .use(ICU);
    if (asyncMessagesLoader) {
        i18nInstance.use(customBackend(asyncMessagesLoader));
    }
    return i18nInstance;
}
function customBackend(asyncMessagesLoader) {
    return {
        type: 'backend',
        init: () => { },
        read: async (language, _namespace, callback) => {
            try {
                const translation = await asyncMessagesLoader(language);
                return callback(null, translation);
            }
            catch (err) {
                return callback(err, null);
            }
        },
    };
}
