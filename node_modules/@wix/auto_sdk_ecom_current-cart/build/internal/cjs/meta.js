"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  addToCurrentCart: () => addToCurrentCart2,
  createCheckoutFromCurrentCart: () => createCheckoutFromCurrentCart2,
  deleteCurrentCart: () => deleteCurrentCart2,
  estimateCurrentCartTotals: () => estimateCurrentCartTotals2,
  getCurrentCart: () => getCurrentCart,
  removeCouponFromCurrentCart: () => removeCouponFromCurrentCart2,
  removeLineItemsFromCurrentCart: () => removeLineItemsFromCurrentCart2,
  updateCurrentCart: () => updateCurrentCart2,
  updateCurrentCartLineItemQuantity: () => updateCurrentCartLineItemQuantity2
});
module.exports = __toCommonJS(meta_exports);

// src/ecom-v1-cart-current-cart.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixEcomCartApiV1CurrentCartServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/cart",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "www.wixgateway.com": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    _: [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      },
      {
        srcPath: "/_api/cart",
        destPath: ""
      },
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "apps._base_domain_": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_current-cart";
function currentCartGetCurrentCart(payload) {
  function __currentCartGetCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "GET",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.GetCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __currentCartGetCurrentCart;
}
function updateCurrentCart(payload) {
  function __updateCurrentCart({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "cartFieldmask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cartInfo.createdDate" },
          { path: "cartInfo.updatedDate" },
          { path: "cartInfo.lineItems.image.urlExpirationDate" },
          {
            path: "cartInfo.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "cartInfo.lineItems.serviceProperties.scheduledDate" },
          { path: "lineItems.image.urlExpirationDate" },
          {
            path: "lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "lineItems.serviceProperties.scheduledDate" },
          {
            path: "customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "customLineItems.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "cartInfo.lineItems.image.focalPoint.x" },
          { path: "cartInfo.lineItems.image.focalPoint.y" },
          { path: "lineItems.image.focalPoint.x" },
          { path: "lineItems.image.focalPoint.y" },
          { path: "cartInfo.lineItems.physicalProperties.weight" },
          {
            path: "cartInfo.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cartInfo.contactInfo.address.geocode.latitude" },
          { path: "cartInfo.contactInfo.address.geocode.longitude" },
          { path: "lineItems.physicalProperties.weight" },
          { path: "lineItems.catalogOverrideFields.physicalProperties.weight" },
          { path: "customLineItems.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "PATCH",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.UpdateCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCurrentCart;
}
function addToCurrentCart(payload) {
  function __addToCurrentCart({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "lineItems.image.urlExpirationDate" },
          {
            path: "lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "lineItems.serviceProperties.scheduledDate" },
          {
            path: "customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "customLineItems.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "lineItems.image.focalPoint.x" },
          { path: "lineItems.image.focalPoint.y" },
          { path: "lineItems.physicalProperties.weight" },
          { path: "lineItems.catalogOverrideFields.physicalProperties.weight" },
          { path: "customLineItems.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.AddToCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current/add-to-cart",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addToCurrentCart;
}
function removeLineItemsFromCurrentCart(payload) {
  function __removeLineItemsFromCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.RemoveLineItemsFromCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current/remove-line-items",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeLineItemsFromCurrentCart;
}
function createCheckoutFromCurrentCart(payload) {
  function __createCheckoutFromCurrentCart({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "shippingAddress.geocode.latitude" },
          { path: "shippingAddress.geocode.longitude" },
          { path: "billingAddress.geocode.latitude" },
          { path: "billingAddress.geocode.longitude" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.CreateCheckoutFromCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current/create-checkout",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __createCheckoutFromCurrentCart;
}
function removeCouponFromCurrentCart(payload) {
  function __removeCouponFromCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.RemoveCouponFromCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current/remove-coupon",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeCouponFromCurrentCart;
}
function updateCurrentCartLineItemQuantity(payload) {
  function __updateCurrentCartLineItemQuantity({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.UpdateCurrentCartLineItemQuantity",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current/update-line-items-quantity",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCurrentCartLineItemQuantity;
}
function estimateCurrentCartTotals(payload) {
  function __estimateCurrentCartTotals({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "shippingAddress.geocode.latitude" },
          { path: "shippingAddress.geocode.longitude" },
          { path: "billingAddress.geocode.latitude" },
          { path: "billingAddress.geocode.longitude" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.EstimateCurrentCartTotals",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current/estimate-totals",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.from"
            },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.to"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.from"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.to"
            },
            { path: "membershipOptions.eligibleMemberships.expirationDate" },
            {
              path: "membershipOptions.invalidMemberships.membership.expirationDate"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.latitude"
            },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.longitude"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.latitude"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.longitude"
            },
            { path: "appliedDiscounts.merchantDiscount.percentage" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __estimateCurrentCartTotals;
}
function deleteCurrentCart(payload) {
  function __deleteCurrentCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "DELETE",
      methodFqn: "com.wix.ecom.cart.api.v1.CurrentCartService.DeleteCurrentCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CurrentCartServiceUrl({
        protoPath: "/v1/carts/current",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteCurrentCart;
}

// src/ecom-v1-cart-current-cart.meta.ts
function getCurrentCart() {
  const payload = {};
  const getRequestOptions = currentCartGetCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCurrentCart2() {
  const payload = {};
  const getRequestOptions = updateCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addToCurrentCart2() {
  const payload = {};
  const getRequestOptions = addToCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/current/add-to-cart",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeLineItemsFromCurrentCart2() {
  const payload = {};
  const getRequestOptions = removeLineItemsFromCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/current/remove-line-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function createCheckoutFromCurrentCart2() {
  const payload = {};
  const getRequestOptions = createCheckoutFromCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/current/create-checkout",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeCouponFromCurrentCart2() {
  const payload = {};
  const getRequestOptions = removeCouponFromCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/current/remove-coupon",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCurrentCartLineItemQuantity2() {
  const payload = {};
  const getRequestOptions = updateCurrentCartLineItemQuantity(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/current/update-line-items-quantity",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function estimateCurrentCartTotals2() {
  const payload = {};
  const getRequestOptions = estimateCurrentCartTotals(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/current/estimate-totals",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteCurrentCart2() {
  const payload = {};
  const getRequestOptions = deleteCurrentCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/carts/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addToCurrentCart,
  createCheckoutFromCurrentCart,
  deleteCurrentCart,
  estimateCurrentCartTotals,
  getCurrentCart,
  removeCouponFromCurrentCart,
  removeLineItemsFromCurrentCart,
  updateCurrentCart,
  updateCurrentCartLineItemQuantity
});
//# sourceMappingURL=meta.js.map