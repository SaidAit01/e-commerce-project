import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { DeliverableItem, GetDeliverySolutionsOptions, GetDeliverySolutionsResponse, GetDeliverySolutionsApplicationErrors } from './index.typings.js';
export { AdditionalCharge, AdditionalCost, Address, AddressLocation, AddressStreetOneOf, ApplicableLineItems, ApplicationError, Carrier, CatalogReference, ChargeType, ChargeTypeWithLiterals, DeliveryAllocation, DeliveryCarrierError, DeliveryCost, DeliveryLogistics, DeliveryRatesGateway, DeliverySolution, DeliveryTimeSlot, Details, DetailsKindOneOf, ExternalReference, FieldViolation, FullAddressContactDetails, GetDeliverySolutionsRequest, IdentificationData, IdentificationDataIdOneOf, MessageEnvelope, MissingDefaultDeliveryProfileEvent, MultiCurrencyPrice, PhysicalProperties, PickupDetails, PickupMethod, PickupMethodWithLiterals, Region, RuleType, RuleTypeWithLiterals, StreetAddress, Subdivision, SubdivisionType, SubdivisionTypeWithLiterals, SubscriptionFrequency, SubscriptionFrequencyWithLiterals, SubscriptionSettings, SystemError, UserPreference, ValidationError, VatId, VatType, VatTypeWithLiterals, WebhookIdentityType, WebhookIdentityTypeWithLiterals, WeightUnit, WeightUnitWithLiterals } from './index.typings.js';

declare function getDeliverySolutions$1(httpClient: HttpClient): GetDeliverySolutionsSignature;
interface GetDeliverySolutionsSignature {
    /**
     * Get Delivery Solutions for the given line items from all relevant delivery carriers
     * @param - list of items to delivery that each of them points to delivery profile and delivery rule.
     * @returns Each delivery option has a list of items that can be delivered by it - the chosen one
     * on Errors throw a business error from TC to catch and trigger destination completion
     */
    (lineItems: DeliverableItem[], options?: NonNullablePaths<GetDeliverySolutionsOptions, `currency` | `destination` | `destination.country`, 3>): Promise<NonNullablePaths<GetDeliverySolutionsResponse, `deliverySolutions` | `deliverySolutions.${number}.code` | `deliverySolutions.${number}.title` | `deliverySolutions.${number}.logistics.pickupDetails.pickupMethod` | `deliverySolutions.${number}.cost.price` | `deliverySolutions.${number}.cost.currency` | `deliverySolutions.${number}.cost.deliveryPrice.amount` | `deliverySolutions.${number}.cost.deliveryPrice.convertedAmount` | `deliverySolutions.${number}.cost.deliveryPrice.formattedAmount` | `deliverySolutions.${number}.cost.deliveryPrice.formattedConvertedAmount` | `errors` | `errors.${number}.errorDetails.applicationError.code` | `errors.${number}.errorDetails.applicationError.description`, 6> & {
        __applicationErrorsType?: GetDeliverySolutionsApplicationErrors;
    }>;
}

declare const getDeliverySolutions: MaybeContext<BuildRESTFunction<typeof getDeliverySolutions$1> & typeof getDeliverySolutions$1>;

export { DeliverableItem, GetDeliverySolutionsApplicationErrors, GetDeliverySolutionsOptions, GetDeliverySolutionsResponse, getDeliverySolutions };
