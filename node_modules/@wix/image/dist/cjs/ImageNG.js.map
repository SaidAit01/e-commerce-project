{"version":3,"names":["React","_interopRequireWildcard","require","_imageKit","_utils","_utils2","_imageNGModule","_interopRequireDefault","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","STATIC_MEDIA_URL","MEDIA_ROOT_URL","getURL","image","targetSize","height","width","inverseAspectRatio","pixelAspectRatio","devicePixelRatio","src","fromEntries","filter","key","map","crop","cropX","x","cropY","y","cropW","Math","min","cropH","id","uri","target","alignment","htmlTag","options","quality","hasAnimation","animated","getData","getMediaUrlByContext","ImageNG","props","alt","sources","priority","decorative","role","dataset","length","sourcesAttributes","media","sizes","targetSizes","_image$crop","_image$crop2","_image$crop3","_image$crop4","s","getMediaSizeQueryString","size","value","type","join","srcset","defaultSource","fullSizeSrc","dataAttrs","entries","val","camelToKebab","createElement","_extends2","className","styles","__self","__source","fileName","lineNumber","columnNumber","srcSet","reverse","fetchpriority","loading","exports"],"sources":["../../src/ImageNG.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type {\n  ImageTransformSource,\n  ImageTransformTarget,\n} from '@wix/image-kit';\nimport { getData } from '@wix/image-kit';\nimport {\n  getMediaUrlByContext,\n  getMediaSizeQueryString,\n} from './custom-element/utils';\nimport { camelToKebab } from './utils';\nimport styles from './imageNG.module.scss';\n\nimport type { ImageMedia, ImageNGProps } from './types';\n\n// TODO(ameerabuf) - in original comp these prefixes could be overriden by EnvConsts\nconst STATIC_MEDIA_URL = 'https://static.wixstatic.com/media/';\nconst MEDIA_ROOT_URL = 'https://static.wixstatic.com/';\n\nfunction getURL(image: ImageMedia, targetSize: number) {\n  if (!image.height || !image.width) {\n    return '';\n  }\n  let inverseAspectRatio = image.height / image.width;\n  // TODO(ameerabuf) - are those the same? seemed to be used as the same in other places..\n  const pixelAspectRatio = 1;\n  const devicePixelRatio = 1;\n\n  const src = Object.fromEntries(\n    (['width', 'height', 'name'] as (keyof ImageMedia)[])\n      .filter((key) => image[key])\n      .map((key) => [key, image[key]]),\n  ) as unknown as ImageTransformSource;\n\n  if (image.crop) {\n    const cropX = image.crop.x || 0;\n    const cropY = image.crop.y || 0;\n    const cropW = Math.min(\n      image.crop.width || image.width,\n      image.width - cropX,\n    );\n    const cropH = Math.min(\n      image.crop.height || image.height,\n      image.height - cropY,\n    );\n    inverseAspectRatio = cropH / cropW;\n\n    src.crop = {\n      x: cropX,\n      y: cropY,\n      width: cropW,\n      height: cropH,\n    };\n  }\n\n  src.id = image.uri;\n\n  const target: ImageTransformTarget = {\n    width: targetSize,\n    height: targetSize * inverseAspectRatio,\n    pixelAspectRatio,\n    alignment: 'center',\n    htmlTag: 'img',\n  };\n\n  const options = {\n    // TODO(ameerabuf) - implement filter and upscale?\n    // filters?: ImageTransformFiltersOption;\n    // upscaleMethod?: UpscaleMethod;\n    quality: image.quality,\n    hasAnimation: !!image.animated,\n    devicePixelRatio,\n  };\n\n  const { uri } = getData('fill', src, target, options);\n  return uri && getMediaUrlByContext(uri, STATIC_MEDIA_URL, MEDIA_ROOT_URL);\n}\n\nconst ImageNG: React.FC<ImageNGProps> = (props) => {\n  const { id, alt, sources, priority, decorative, role, dataset } = props;\n\n  if (!sources.length) {\n    return null;\n  }\n\n  const sourcesAttributes = sources.map(\n    ({ image, media, sizes, targetSizes }) => ({\n      sizes: sizes\n        .map(\n          (s) =>\n            `${s.media ? getMediaSizeQueryString(s.media) + ' ' : ''}${\n              s.size.value\n            }${s.size.type}`,\n        )\n        .join(', '),\n      srcset: targetSizes.map((s) => `${getURL(image, s)} ${s}w`).join(', '),\n      ...(media && { media: getMediaSizeQueryString(media) }),\n      width: Math.min(\n        image.crop?.width || image.width,\n        image.width - (image.crop?.x || 0),\n      ),\n      height: Math.min(\n        image.crop?.height || image.height,\n        image.height - (image.crop?.y || 0),\n      ),\n    }),\n  );\n\n  const defaultSource = sources[sources.length - 1];\n  const { image } = defaultSource!;\n  const fullSizeSrc = getURL(image, image.width);\n\n  const dataAttrs = dataset\n    ? Object.fromEntries(\n        Object.entries(dataset).map(([key, val]) => [\n          `data-${camelToKebab(key)}`,\n          val,\n        ]),\n      )\n    : {};\n\n  return (\n    <picture id={id} className={`${styles.image}`} {...dataAttrs}>\n      {sourcesAttributes.map(({ sizes, srcset, media, width, height }) => (\n        <source\n          key={`${id}-${media}`}\n          sizes={sizes}\n          srcSet={srcset}\n          media={media}\n          width={width}\n          height={height}\n        />\n      ))}\n      <style>\n        {[...sourcesAttributes]\n          .reverse()\n          .map(\n            ({\n              media,\n              width,\n              height,\n            }: {\n              media?: string;\n              width: number;\n              height: number;\n            }) =>\n              `${media ? `@media ${media} {` : ''}#${id}{--aspect-ratio: ${\n                width / height\n              };}${media ? '}' : ''}`,\n          )\n          .join(' ')}\n      </style>\n      <img\n        {...(priority === 'high'\n          ? { fetchpriority: 'high' }\n          : { loading: 'lazy' })}\n        {...(decorative && { 'aria-hidden': true })}\n        src={fullSizeSrc}\n        alt={decorative ? '' : alt}\n        role={role}\n        width={image.width}\n        height={image.height}\n      />\n    </picture>\n  );\n};\n\nexport { ImageNG };\n"],"mappings":"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","ignoreList":[]}