async function getAllImageSrcs() {
  const imgs = await page.$$('img');
  const srcs = await Promise.all(imgs.map(async img => {
    const srcProperty = await img.getProperty('src');
    return srcProperty == null ? void 0 : srcProperty.jsonValue();
  }));
  return srcs;
}
async function getImageSrc(imgIndex) {
  return (await getAllImageSrcs())[imgIndex];
}
async function scrollToImg(imgIndex, scrollY) {
  await page.evaluate(
  // eslint-disable-next-line @typescript-eslint/no-shadow
  (imgIndex, scrollY) => {
    var _getBoundingClientRec;
    const imgs = document.querySelectorAll('img');
    const element = imgs[imgIndex];
    const elementTop = ((_getBoundingClientRec = element.getBoundingClientRect()) == null ? void 0 : _getBoundingClientRec.top) + window.scrollY;
    const marginOffset = window.innerHeight * scrollY;
    window.scrollTo({
      top: elementTop - marginOffset,
      behavior: 'instant' // @see https://github.com/Microsoft/TypeScript/issues/28755
    });
  }, imgIndex, scrollY);
  await page.waitForTimeout(100);
}
async function checkImageScroll({
  expectedSrc,
  imageIndex
}) {
  await scrollToImg(imageIndex, 2.7);
  const src = await getImageSrc(imageIndex);
  expect(src).toContain(expectedSrc);
  expect(src).toContain('blur');
  await scrollToImg(imageIndex, 2.5);
  const newSrc = await getImageSrc(imageIndex);
  expect(newSrc).not.toContain('blur');
}
describe('Image', () => {
  describe('Lazy load', () => {
    beforeEach(async () => {
      await page.goto('http://localhost:3000/iframe.html?path=/story/image--lazy-load-image');
    });
    test('Should img src', async () => {
      const [firstImgSrc, secondImgSrc, thirdImgSrc] = await getAllImageSrcs();
      expect(firstImgSrc).toContain('11062b_9c53b59db1dc4bd4ad7a47340f0594b4~mv2.jpg');
      expect(firstImgSrc).not.toContain('blur');
      expect(secondImgSrc).toContain('11062b_a1495416958849dd8682868426dd876b~mv2.jpg');
      expect(secondImgSrc).toContain('blur');
      expect(thirdImgSrc).toContain('11062b_bdbc8112d5bd4e3988b694612ca6cfd3~mv2.jpg');
      expect(thirdImgSrc).toContain('blur');
      await checkImageScroll({
        expectedSrc: '11062b_a1495416958849dd8682868426dd876b~mv2.jpg',
        imageIndex: 1
      });
      await checkImageScroll({
        expectedSrc: '11062b_bdbc8112d5bd4e3988b694612ca6cfd3~mv2.jpg',
        imageIndex: 2
      });
    });
  });
  describe('SSR src hydration', () => {
    it('should not remove data-has-ssr-src and add data-ssr-src-done attributes', async () => {
      await page.goto('http://localhost:3000/iframe.html?path=/story/image--ssr-image');
      await page.waitForFunction(`document.querySelector("wow-image img")?.getAttribute("data-ssr-src-done") == "true"`);
      const hasSsrSrcAttribute = await page.$eval('wow-image', element => element.getAttribute('data-has-ssr-src'));
      const ssrSrcDone = await page.$eval('wow-image img', element => element.getAttribute('data-ssr-src-done'));
      expect(hasSsrSrcAttribute).toBe('true');
      expect(ssrSrcDone).toBe('true');
    });
  });
});
//# sourceMappingURL=Image.e2e.js.map