{"version":3,"names":["_WowImage","_interopRequireDefault","require","_fastdom","init","contextWindow","services","elementName","window","customElements","get","undefined","resizeObserver","ResizeObserver","entries","map","entry","target","reLayout","intersectionObserver","IntersectionObserver","isIntersecting","wowImage","unobserveIntersect","observeResize","rootMargin","env","WowImage","wowImageFactory","resizeService","intersectionService","mutationService","fastdom","define"],"sources":["../../../src/custom-element/registry.ts"],"sourcesContent":["import wowImageFactory from './WowImage';\nimport fastdom from 'fastdom';\nimport type {\n  WixImageExternalServices,\n  WixImageServices,\n  WowImage,\n  EnvConsts,\n} from '../types';\n\nexport default function init(\n  contextWindow: (Window & typeof globalThis) | null,\n  services: WixImageExternalServices,\n) {\n  const elementName = 'wow-image';\n  contextWindow = contextWindow || window;\n\n  if (contextWindow.customElements.get(elementName) === undefined) {\n    let resizeObserver: ResizeObserver;\n\n    if (contextWindow.ResizeObserver) {\n      resizeObserver = new contextWindow.ResizeObserver(\n        (entries: ResizeObserverEntry[]) =>\n          entries.map((entry) => (entry.target as WowImage).reLayout()),\n      );\n    }\n\n    let intersectionObserver: IntersectionObserver;\n\n    if (contextWindow.IntersectionObserver) {\n      intersectionObserver = new IntersectionObserver(\n        (entries: IntersectionObserverEntry[]) =>\n          entries.map((entry) => {\n            if (entry.isIntersecting) {\n              const wowImage = entry.target as WowImage;\n              wowImage.unobserveIntersect();\n              // resize Observe will invoke relayout imidiatly.\n              // \"Observation will fire when observation starts if Element is being rendered, and Elementâ€™s size is not 0,0,\"\n              // https://drafts.csswg.org/resize-observer/#dom-resizeobserver-observe\n              wowImage.observeResize();\n            }\n            return entry;\n          }),\n        {\n          /**\n           * old: 50% from 1080 (desktop) is 540px, 800 (mobile) 400px\n           * new: 150% from 1080 (desktop) is 1620, 800 (mobile) 1200\n           * chrome [loading=lazy]: 4g - 1250px, lower then 3g - 2500px\n           * @see https://web.dev/articles/browser-level-image-lazy-loading#improved-thresholds\n           */\n          rootMargin: '150% 100%',\n        },\n      );\n    }\n\n    return function (env: EnvConsts) {\n      const WowImage = wowImageFactory(\n        {\n          resizeService: resizeObserver,\n          intersectionService: intersectionObserver,\n          mutationService: fastdom,\n          ...services,\n        } as WixImageServices,\n        env,\n        contextWindow!,\n      );\n      contextWindow!.customElements.define(elementName, WowImage);\n    };\n  }\n\n  return;\n}\n"],"mappings":";;;;;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,sBAAA,CAAAC,OAAA;AAQe,SAASE,IAAIA,CAC1BC,aAAkD,EAClDC,QAAkC,EAClC;EACA,MAAMC,WAAW,GAAG,WAAW;EAC/BF,aAAa,GAAGA,aAAa,IAAIG,MAAM;EAEvC,IAAIH,aAAa,CAACI,cAAc,CAACC,GAAG,CAACH,WAAW,CAAC,KAAKI,SAAS,EAAE;IAC/D,IAAIC,cAA8B;IAElC,IAAIP,aAAa,CAACQ,cAAc,EAAE;MAChCD,cAAc,GAAG,IAAIP,aAAa,CAACQ,cAAc,CAC9CC,OAA8B,IAC7BA,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAMA,KAAK,CAACC,MAAM,CAAcC,QAAQ,CAAC,CAAC,CAChE,CAAC;IACH;IAEA,IAAIC,oBAA0C;IAE9C,IAAId,aAAa,CAACe,oBAAoB,EAAE;MACtCD,oBAAoB,GAAG,IAAIC,oBAAoB,CAC5CN,OAAoC,IACnCA,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;QACrB,IAAIA,KAAK,CAACK,cAAc,EAAE;UACxB,MAAMC,QAAQ,GAAGN,KAAK,CAACC,MAAkB;UACzCK,QAAQ,CAACC,kBAAkB,CAAC,CAAC;UAC7B;UACA;UACA;UACAD,QAAQ,CAACE,aAAa,CAAC,CAAC;QAC1B;QACA,OAAOR,KAAK;MACd,CAAC,CAAC,EACJ;QACE;AACV;AACA;AACA;AACA;AACA;QACUS,UAAU,EAAE;MACd,CACF,CAAC;IACH;IAEA,OAAO,UAAUC,GAAc,EAAE;MAC/B,MAAMC,QAAQ,GAAG,IAAAC,iBAAe,EAC9B;QACEC,aAAa,EAAEjB,cAAc;QAC7BkB,mBAAmB,EAAEX,oBAAoB;QACzCY,eAAe,EAAEC,gBAAO;QACxB,GAAG1B;MACL,CAAC,EACDoB,GAAG,EACHrB,aACF,CAAC;MACDA,aAAa,CAAEI,cAAc,CAACwB,MAAM,CAAC1B,WAAW,EAAEoB,QAAQ,CAAC;IAC7D,CAAC;EACH;EAEA;AACF","ignoreList":[]}