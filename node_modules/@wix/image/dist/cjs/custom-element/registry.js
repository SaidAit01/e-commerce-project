"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = init;
var _WowImage = _interopRequireDefault(require("./WowImage"));
var _fastdom = _interopRequireDefault(require("fastdom"));
function init(contextWindow, services) {
  const elementName = 'wow-image';
  contextWindow = contextWindow || window;
  if (contextWindow.customElements.get(elementName) === undefined) {
    let resizeObserver;
    if (contextWindow.ResizeObserver) {
      resizeObserver = new contextWindow.ResizeObserver(entries => entries.map(entry => entry.target.reLayout()));
    }
    let intersectionObserver;
    if (contextWindow.IntersectionObserver) {
      intersectionObserver = new IntersectionObserver(entries => entries.map(entry => {
        if (entry.isIntersecting) {
          const wowImage = entry.target;
          wowImage.unobserveIntersect();
          // resize Observe will invoke relayout imidiatly.
          // "Observation will fire when observation starts if Element is being rendered, and Elementâ€™s size is not 0,0,"
          // https://drafts.csswg.org/resize-observer/#dom-resizeobserver-observe
          wowImage.observeResize();
        }
        return entry;
      }), {
        /**
         * old: 50% from 1080 (desktop) is 540px, 800 (mobile) 400px
         * new: 150% from 1080 (desktop) is 1620, 800 (mobile) 1200
         * chrome [loading=lazy]: 4g - 1250px, lower then 3g - 2500px
         * @see https://web.dev/articles/browser-level-image-lazy-loading#improved-thresholds
         */
        rootMargin: '150% 100%'
      });
    }
    return function (env) {
      const WowImage = (0, _WowImage.default)({
        resizeService: resizeObserver,
        intersectionService: intersectionObserver,
        mutationService: _fastdom.default,
        ...services
      }, env, contextWindow);
      contextWindow.customElements.define(elementName, WowImage);
    };
  }
  return;
}
//# sourceMappingURL=registry.js.map