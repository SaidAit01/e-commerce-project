import React from 'react';
import { Image as Component, initCustomElement } from './index';
import { Container } from './storybook/Container';
import { argTypes } from './storybook/args';
// add here default open experiments
const openExperiments = [];
const urlParams = new URLSearchParams(window.location.search);
const experimentsParam = urlParams.get('experiments');
(experimentsParam?.split(',') || []).forEach((experiment) => {
    openExperiments.push(experiment);
});
initCustomElement({
    isExperimentOpen: (experimentName) => openExperiments.includes(experimentName),
});
export default {
    title: 'Image',
    component: Component,
    argTypes,
};
export const CSRImage = (args) => {
    const alt = 'Paints and Brush';
    const displayMode = 'fill';
    const containerId = 'container1';
    const { name, containerHeight, containerWidth, isSEOBot, isInFirstFold, placeholderTransition, shouldUseLQIP, } = args;
    const key = `${isSEOBot}-${isInFirstFold}-${placeholderTransition}-${shouldUseLQIP}`;
    const imagePresets = {
        'Paints and Brush - 5000 * 2753': {
            uri: '11062b_9c53b59db1dc4bd4ad7a47340f0594b4~mv2.jpg',
            width: 5000,
            height: 2763,
        },
        'Yellow Flower - 3333 * 5000': {
            uri: '11062b_a1495416958849dd8682868426dd876b~mv2.jpg',
            width: 3333,
            height: 5000,
        },
        'Popsicles - 4912 * 7360': {
            uri: '11062b_bdbc8112d5bd4e3988b694612ca6cfd3~mv2.jpg',
            width: 4912,
            height: 7360,
        },
        'Pattern - 300 * 300': {
            uri: 'e17121a8be8c470ea2e2175c8e27f2ca.png',
            width: 300,
            height: 300,
        },
    };
    const { uri, width, height } = imagePresets[name] || {};
    return (React.createElement(Container, { id: containerId, width: containerWidth, height: containerHeight },
        React.createElement(Component, { key: key, id: "image0", containerId: containerId, alt: alt, name: name, displayMode: displayMode, uri: uri, width: width, height: height, ...args })));
};
export const SEOImage = () => {
    const uri = '11062b_9c53b59db1dc4bd4ad7a47340f0594b4~mv2.jpg';
    const alt = 'Paints and Brush';
    const name = 'Paints and Brush';
    const width = 5000;
    const height = 2763;
    const displayMode = 'fill';
    const containerId = 'container1';
    return (React.createElement("div", { id: containerId, style: { width: 900, height: 600 } },
        React.createElement(Component, { id: "image1", containerId: containerId, uri: uri, alt: alt, name: name, width: width, height: height, displayMode: displayMode, isSEOBot: true, shouldUseLQIP: true })));
};
export const LazyLoadImage = () => {
    const uris = [
        '11062b_9c53b59db1dc4bd4ad7a47340f0594b4~mv2.jpg',
        '11062b_a1495416958849dd8682868426dd876b~mv2.jpg',
        '11062b_bdbc8112d5bd4e3988b694612ca6cfd3~mv2.jpg',
    ];
    const containerId = 'lazyContainer';
    const sharedProps = {
        containerId,
        alt: '',
        width: 5000,
        height: 2763,
        displayMode: 'fill',
        shouldUseLQIP: true,
    };
    return (React.createElement("div", { style: { height: '2000px', padding: '50px' } },
        React.createElement(Container, { width: 900, height: 600, id: "firstFold" },
            React.createElement(Component, { ...sharedProps, id: "lazyImage", uri: uris[0] || '', height: 600, containerId: "firstFold", isInFirstFold: true })),
        React.createElement("div", { style: { height: '1500px' } },
            React.createElement("p", null, "Scroll down to load the image...")),
        React.createElement(Container, { id: containerId, width: 900, height: 600 },
            React.createElement(React.Fragment, null,
                React.createElement(Component, { ...sharedProps, id: "lazyImage2", uri: uris[1] || '' }),
                React.createElement("div", { style: { height: '500px' } }),
                React.createElement(Component, { ...sharedProps, id: "lazyImage3", uri: uris[2] || '' })))));
};
export const SSRImage = () => {
    return (React.createElement("div", { style: { height: '2000px', padding: '50px' } },
        React.createElement(Container, { width: 900, height: 600, id: "firstFold" },
            React.createElement(Component, { alt: "", width: 5000, height: 2763, displayMode: "fill", shouldUseLQIP: true, getPlaceholder: (data) => {
                    return {
                        css: {
                            img: {
                                backgroundImage: `url(${data.placeholderImageUrl})`,
                                backgroundSize: 'cover',
                                backgroundPosition: 'center center',
                            },
                        },
                        transformed: true,
                        attr: {
                            img: {
                                src: data.placeholderImageUrl,
                                'data-src': data.src,
                            },
                            container: {
                                src: data.src,
                            },
                        },
                    };
                }, id: "lazyImage", uri: "11062b_9c53b59db1dc4bd4ad7a47340f0594b4~mv2.jpg", containerId: "firstFold" }))));
};
//# sourceMappingURL=Image.stories.js.map