import React from 'react';
import { getMediaSizeQueryString } from './custom-element/utils';
import { CONTENT_OPTIONS, argTypesNG } from './storybook/args';
import { ImageNG as Component } from './index';
// add here default open experiments
const openExperiments = [];
const urlParams = new URLSearchParams(window.location.search);
const experimentsParam = urlParams.get('experiments');
(experimentsParam?.split(',') || []).forEach((experiment) => {
    openExperiments.push(experiment);
});
export default {
    title: 'Image',
    component: Component,
    argTypes: argTypesNG,
};
export const ImageNG = (args) => {
    const { id, alt, priority, decorative, role, image, breakpoints, crop, objectFit, focalPoint, quality, resolutions, } = args;
    const sources = breakpoints
        .toSorted((a, b) => a - b)
        .concat('default')
        .map((bp, index) => {
        const cropIndex = bp === 'default' ? 0 : Math.min(index + 1, crop.length - 1);
        return {
            image: {
                ...(CONTENT_OPTIONS[image] || {}),
                ...(crop.length && { crop: crop[cropIndex] }),
                quality,
                // TODO(ameerabuf) - unsharpMask?
            },
            ...(bp !== 'default' ? { media: { maxWidth: bp } } : {}),
            sizes: [{ size: { value: 60, type: 'vw' } }],
            targetSizes: resolutions,
        };
    });
    const props = {
        id,
        alt,
        priority,
        decorative,
        role,
        sources,
    };
    return (
    // TODO(ameerabuf) - allow layout change in storybook? it can demonstrate 'sizes' attribute behavior
    React.createElement("div", { style: {
            margin: 'auto',
            width: '60vw',
            height: '500px',
            background: '#ff0000aa',
        } },
        React.createElement("style", null, [...sources]
            .reverse()
            .map(({ media }, index) => {
            const objectFitIndex = Math.min(index, objectFit.length - 1);
            const focalPointIndex = Math.min(index, focalPoint.length - 1);
            return `${media ? `@media ${getMediaSizeQueryString(media)} {` : ''}#${id}{--object-fit: ${objectFit[objectFitIndex] || 'cover'}; --focal-x: ${focalPoint[focalPointIndex].x ?? 50};  --focal-y: ${focalPoint[focalPointIndex].y ?? 50};}${media ? '}' : ''}`;
        })
            .join(' ')),
        React.createElement(Component, { ...props })));
};
//# sourceMappingURL=ImageNG.stories.js.map