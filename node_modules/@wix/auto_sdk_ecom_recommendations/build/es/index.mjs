// src/ecom-recommendations-v1-recommendation-recommendations.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/ecom-recommendations-v1-recommendation-recommendations.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixEcomRecommendationsV1RecommendationsServiceUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/v1/recommendations",
        destPath: "/v1/recommendations"
      },
      {
        srcPath: "/ecom/v1/recommendations",
        destPath: "/v1/recommendations"
      }
    ],
    _: [
      {
        srcPath: "/v1/recommendations",
        destPath: "/v1/recommendations"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/v1/recommendations",
        destPath: "/v1/recommendations"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_recommendations";
function listAvailableAlgorithms(payload) {
  function __listAvailableAlgorithms({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.recommendations.v1.recommendation",
      method: "GET",
      methodFqn: "com.wix.ecom.recommendations.v1.RecommendationsService.ListAvailableAlgorithms",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomRecommendationsV1RecommendationsServiceUrl({
        protoPath: "/v1/recommendations/algorithms",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listAvailableAlgorithms;
}
function getRecommendation(payload) {
  function __getRecommendation({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.recommendations.v1.recommendation",
      method: "POST",
      methodFqn: "com.wix.ecom.recommendations.v1.RecommendationsService.GetRecommendation",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomRecommendationsV1RecommendationsServiceUrl({
        protoPath: "/v1/recommendations/get",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __getRecommendation;
}

// src/ecom-recommendations-v1-recommendation-recommendations.universal.ts
var AlgorithmType = /* @__PURE__ */ ((AlgorithmType2) => {
  AlgorithmType2["UNSPECIFIED"] = "UNSPECIFIED";
  AlgorithmType2["RELATED_ITEMS"] = "RELATED_ITEMS";
  AlgorithmType2["GLOBAL"] = "GLOBAL";
  return AlgorithmType2;
})(AlgorithmType || {});
async function listAvailableAlgorithms2() {
  const { httpClient, sideEffects } = arguments[0];
  const payload = renameKeysFromSDKRequestToRESTRequest({});
  const reqOpts = listAvailableAlgorithms(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {},
        singleArgumentUnchanged: false
      },
      []
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function getRecommendation2(algorithms, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    algorithms,
    items: options?.items,
    minimumRecommendedItems: options?.minimumRecommendedItems
  });
  const reqOpts = getRecommendation(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          algorithms: "$[0]",
          items: "$[1].items",
          minimumRecommendedItems: "$[1].minimumRecommendedItems"
        },
        singleArgumentUnchanged: false
      },
      ["algorithms", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/ecom-recommendations-v1-recommendation-recommendations.public.ts
function listAvailableAlgorithms3(httpClient) {
  return () => listAvailableAlgorithms2(
    // @ts-ignore
    { httpClient }
  );
}
function getRecommendation3(httpClient) {
  return (algorithms, options) => getRecommendation2(
    algorithms,
    options,
    // @ts-ignore
    { httpClient }
  );
}

// src/ecom-recommendations-v1-recommendation-recommendations.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
var listAvailableAlgorithms4 = /* @__PURE__ */ createRESTModule(listAvailableAlgorithms3);
var getRecommendation4 = /* @__PURE__ */ createRESTModule(getRecommendation3);
export {
  AlgorithmType,
  getRecommendation4 as getRecommendation,
  listAvailableAlgorithms4 as listAvailableAlgorithms
};
//# sourceMappingURL=index.mjs.map