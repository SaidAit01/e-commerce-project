// src/ecom-v1-checkout-template-checkout-templates.public.ts
import { renameKeysFromRESTResponseToSDKResponse as renameKeysFromRESTResponseToSDKResponse2 } from "@wix/sdk-runtime/rename-all-nested-keys";
import { transformRESTAddressToSDKAddress } from "@wix/sdk-runtime/transformations/address";
import { transformRESTFloatToSDKFloat as transformRESTFloatToSDKFloat2 } from "@wix/sdk-runtime/transformations/float";
import { transformRESTImageToSDKImage as transformRESTImageToSDKImage2 } from "@wix/sdk-runtime/transformations/image";
import { transformRESTPageURLV2ToSDKPageURLV2 as transformRESTPageURLV2ToSDKPageURLV22 } from "@wix/sdk-runtime/transformations/page-url-v2";
import { transformRESTTimestampToSDKTimestamp as transformRESTTimestampToSDKTimestamp2 } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths as transformPaths3 } from "@wix/sdk-runtime/transformations/transform-paths";
import { EventDefinition } from "@wix/sdk-types";

// src/ecom-v1-checkout-template-checkout-templates.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import { queryBuilder } from "@wix/sdk-runtime/query-builder";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/ecom-v1-checkout-template-checkout-templates.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTBytesToSDKBytes } from "@wix/sdk-runtime/transformations/bytes";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl(opts) {
  const domainToMappings = {
    "www._base_domain_": [
      {
        srcPath: "/ecom/v1/checkout-templates",
        destPath: "/v1/checkout-templates"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/checkout-templates",
        destPath: "/v1/checkout-templates"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/ecom/v1/checkout-templates",
        destPath: "/v1/checkout-templates"
      }
    ],
    _: [
      {
        srcPath: "/ecom/v1/checkout-templates",
        destPath: "/v1/checkout-templates"
      }
    ],
    "api._api_base_domain_": [
      {
        srcPath: "/checkout-template",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_checkout-templates";
function createCheckoutTemplate(payload) {
  function __createCheckoutTemplate({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          {
            path: "checkoutTemplate.customLineItems.physicalProperties.weight"
          }
        ]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          {
            path: "checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          {
            path: "checkoutTemplate.customLineItems.serviceProperties.scheduledDate"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "POST",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.CreateCheckoutTemplate",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            {
              path: "checkoutTemplate.customLineItems.physicalProperties.weight"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            {
              path: "checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "checkoutTemplate.customLineItems.serviceProperties.scheduledDate"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createCheckoutTemplate;
}
function getCheckoutTemplate(payload) {
  function __getCheckoutTemplate({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "GET",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.GetCheckoutTemplate",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates/{checkoutTemplateId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            {
              path: "checkoutTemplate.customLineItems.physicalProperties.weight"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            {
              path: "checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "checkoutTemplate.customLineItems.serviceProperties.scheduledDate"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCheckoutTemplate;
}
function updateCheckoutTemplate(payload) {
  function __updateCheckoutTemplate({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          {
            path: "checkoutTemplate.customLineItems.physicalProperties.weight"
          }
        ]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          {
            path: "checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          {
            path: "checkoutTemplate.customLineItems.serviceProperties.scheduledDate"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "PATCH",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.UpdateCheckoutTemplate",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates/{checkoutTemplate.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            {
              path: "checkoutTemplate.customLineItems.physicalProperties.weight"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            {
              path: "checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "checkoutTemplate.customLineItems.serviceProperties.scheduledDate"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCheckoutTemplate;
}
function deleteCheckoutTemplate(payload) {
  function __deleteCheckoutTemplate({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "DELETE",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.DeleteCheckoutTemplate",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates/{checkoutTemplateId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteCheckoutTemplate;
}
function queryCheckoutTemplates(payload) {
  function __queryCheckoutTemplates({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "POST",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.QueryCheckoutTemplates",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "checkoutTemplates.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            {
              path: "checkoutTemplates.customLineItems.physicalProperties.weight"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            {
              path: "checkoutTemplates.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "checkoutTemplates.customLineItems.serviceProperties.scheduledDate"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryCheckoutTemplates;
}
function createCheckoutFromTemplate(payload) {
  function __createCheckoutFromTemplate({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "POST",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.CreateCheckoutFromTemplate",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates/{checkoutTemplateId}/create-checkout-from-template",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __createCheckoutFromTemplate;
}
function createAndRedirectToCheckout(payload) {
  function __createAndRedirectToCheckout({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.checkout_template",
      method: "GET",
      methodFqn: "wix.ecom.checkout_template.api.v1.CheckoutTemplateService.CreateAndRedirectToCheckout",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCheckoutTemplateApiV1CheckoutTemplateServiceUrl({
        protoPath: "/v1/checkout-templates/{checkoutTemplateId}/create-and-redirect-to-checkout",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [{ path: "body" }]
        }
      ])
    };
    return metadata;
  }
  return __createAndRedirectToCheckout;
}

// src/ecom-v1-checkout-template-checkout-templates.universal.ts
import { transformSDKImageToRESTImage } from "@wix/sdk-runtime/transformations/image";
import { transformRESTImageToSDKImage } from "@wix/sdk-runtime/transformations/image";
import { transformSDKPageURLV2ToRESTPageURLV2 } from "@wix/sdk-runtime/transformations/page-url-v2";
import { transformRESTPageURLV2ToSDKPageURLV2 } from "@wix/sdk-runtime/transformations/page-url-v2";
import { transformPaths as transformPaths2 } from "@wix/sdk-runtime/transformations/transform-paths";
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["UNKNOWN_STATUS"] = "UNKNOWN_STATUS";
  Status2["ACTIVE"] = "ACTIVE";
  Status2["INACTIVE"] = "INACTIVE";
  return Status2;
})(Status || {});
var DescriptionLineType = /* @__PURE__ */ ((DescriptionLineType2) => {
  DescriptionLineType2["UNRECOGNISED"] = "UNRECOGNISED";
  DescriptionLineType2["PLAIN_TEXT"] = "PLAIN_TEXT";
  DescriptionLineType2["COLOR"] = "COLOR";
  return DescriptionLineType2;
})(DescriptionLineType || {});
var PaymentOptionType = /* @__PURE__ */ ((PaymentOptionType2) => {
  PaymentOptionType2["FULL_PAYMENT_ONLINE"] = "FULL_PAYMENT_ONLINE";
  PaymentOptionType2["FULL_PAYMENT_OFFLINE"] = "FULL_PAYMENT_OFFLINE";
  PaymentOptionType2["MEMBERSHIP"] = "MEMBERSHIP";
  PaymentOptionType2["DEPOSIT_ONLINE"] = "DEPOSIT_ONLINE";
  PaymentOptionType2["MEMBERSHIP_OFFLINE"] = "MEMBERSHIP_OFFLINE";
  PaymentOptionType2["MEMBERSHIP_ONLINE_WITH_OFFLINE_REMAINDER"] = "MEMBERSHIP_ONLINE_WITH_OFFLINE_REMAINDER";
  return PaymentOptionType2;
})(PaymentOptionType || {});
var ItemTypeItemType = /* @__PURE__ */ ((ItemTypeItemType2) => {
  ItemTypeItemType2["UNRECOGNISED"] = "UNRECOGNISED";
  ItemTypeItemType2["PHYSICAL"] = "PHYSICAL";
  ItemTypeItemType2["DIGITAL"] = "DIGITAL";
  ItemTypeItemType2["GIFT_CARD"] = "GIFT_CARD";
  ItemTypeItemType2["SERVICE"] = "SERVICE";
  return ItemTypeItemType2;
})(ItemTypeItemType || {});
var SubscriptionFrequency = /* @__PURE__ */ ((SubscriptionFrequency2) => {
  SubscriptionFrequency2["UNDEFINED"] = "UNDEFINED";
  SubscriptionFrequency2["DAY"] = "DAY";
  SubscriptionFrequency2["WEEK"] = "WEEK";
  SubscriptionFrequency2["MONTH"] = "MONTH";
  SubscriptionFrequency2["YEAR"] = "YEAR";
  return SubscriptionFrequency2;
})(SubscriptionFrequency || {});
var FileType = /* @__PURE__ */ ((FileType2) => {
  FileType2["UNSPECIFIED"] = "UNSPECIFIED";
  FileType2["SECURE_PICTURE"] = "SECURE_PICTURE";
  FileType2["SECURE_VIDEO"] = "SECURE_VIDEO";
  FileType2["SECURE_DOCUMENT"] = "SECURE_DOCUMENT";
  FileType2["SECURE_MUSIC"] = "SECURE_MUSIC";
  FileType2["SECURE_ARCHIVE"] = "SECURE_ARCHIVE";
  return FileType2;
})(FileType || {});
var TaxableAddressType = /* @__PURE__ */ ((TaxableAddressType2) => {
  TaxableAddressType2["UNKNOWN_TAXABLE_ADDRESS"] = "UNKNOWN_TAXABLE_ADDRESS";
  TaxableAddressType2["BUSINESS"] = "BUSINESS";
  TaxableAddressType2["BILLING"] = "BILLING";
  TaxableAddressType2["SHIPPING"] = "SHIPPING";
  return TaxableAddressType2;
})(TaxableAddressType || {});
var JurisdictionType = /* @__PURE__ */ ((JurisdictionType2) => {
  JurisdictionType2["UNDEFINED"] = "UNDEFINED";
  JurisdictionType2["COUNTRY"] = "COUNTRY";
  JurisdictionType2["STATE"] = "STATE";
  JurisdictionType2["COUNTY"] = "COUNTY";
  JurisdictionType2["CITY"] = "CITY";
  JurisdictionType2["SPECIAL"] = "SPECIAL";
  return JurisdictionType2;
})(JurisdictionType || {});
var ItemAvailabilityStatus = /* @__PURE__ */ ((ItemAvailabilityStatus2) => {
  ItemAvailabilityStatus2["AVAILABLE"] = "AVAILABLE";
  ItemAvailabilityStatus2["NOT_FOUND"] = "NOT_FOUND";
  ItemAvailabilityStatus2["NOT_AVAILABLE"] = "NOT_AVAILABLE";
  ItemAvailabilityStatus2["PARTIALLY_AVAILABLE"] = "PARTIALLY_AVAILABLE";
  return ItemAvailabilityStatus2;
})(ItemAvailabilityStatus || {});
var VatType = /* @__PURE__ */ ((VatType2) => {
  VatType2["UNSPECIFIED"] = "UNSPECIFIED";
  VatType2["CPF"] = "CPF";
  VatType2["CNPJ"] = "CNPJ";
  return VatType2;
})(VatType || {});
var PickupMethod = /* @__PURE__ */ ((PickupMethod2) => {
  PickupMethod2["UNKNOWN_METHOD"] = "UNKNOWN_METHOD";
  PickupMethod2["STORE_PICKUP"] = "STORE_PICKUP";
  PickupMethod2["PICKUP_POINT"] = "PICKUP_POINT";
  return PickupMethod2;
})(PickupMethod || {});
var ChargeType = /* @__PURE__ */ ((ChargeType2) => {
  ChargeType2["HANDLING_FEE"] = "HANDLING_FEE";
  ChargeType2["INSURANCE"] = "INSURANCE";
  return ChargeType2;
})(ChargeType || {});
var RuleType = /* @__PURE__ */ ((RuleType2) => {
  RuleType2["VALIDATION"] = "VALIDATION";
  RuleType2["OTHER"] = "OTHER";
  RuleType2["MAX"] = "MAX";
  RuleType2["MIN"] = "MIN";
  RuleType2["MAX_LENGTH"] = "MAX_LENGTH";
  RuleType2["MIN_LENGTH"] = "MIN_LENGTH";
  RuleType2["MAX_SIZE"] = "MAX_SIZE";
  RuleType2["MIN_SIZE"] = "MIN_SIZE";
  RuleType2["FORMAT"] = "FORMAT";
  RuleType2["DECIMAL_LTE"] = "DECIMAL_LTE";
  RuleType2["DECIMAL_GTE"] = "DECIMAL_GTE";
  RuleType2["DECIMAL_LT"] = "DECIMAL_LT";
  RuleType2["DECIMAL_GT"] = "DECIMAL_GT";
  RuleType2["DECIMAL_MAX_SCALE"] = "DECIMAL_MAX_SCALE";
  RuleType2["INVALID_ENUM_VALUE"] = "INVALID_ENUM_VALUE";
  RuleType2["REQUIRED_FIELD"] = "REQUIRED_FIELD";
  RuleType2["FIELD_NOT_ALLOWED"] = "FIELD_NOT_ALLOWED";
  RuleType2["ONE_OF_ALIGNMENT"] = "ONE_OF_ALIGNMENT";
  RuleType2["EXACT_LENGTH"] = "EXACT_LENGTH";
  RuleType2["EXACT_SIZE"] = "EXACT_SIZE";
  RuleType2["REQUIRED_ONE_OF_FIELD"] = "REQUIRED_ONE_OF_FIELD";
  return RuleType2;
})(RuleType || {});
var DiscountType = /* @__PURE__ */ ((DiscountType2) => {
  DiscountType2["GLOBAL"] = "GLOBAL";
  DiscountType2["SPECIFIC_ITEMS"] = "SPECIFIC_ITEMS";
  DiscountType2["SHIPPING"] = "SHIPPING";
  return DiscountType2;
})(DiscountType || {});
var WeightUnit = /* @__PURE__ */ ((WeightUnit2) => {
  WeightUnit2["UNSPECIFIED_WEIGHT_UNIT"] = "UNSPECIFIED_WEIGHT_UNIT";
  WeightUnit2["KG"] = "KG";
  WeightUnit2["LB"] = "LB";
  return WeightUnit2;
})(WeightUnit || {});
var RateType = /* @__PURE__ */ ((RateType2) => {
  RateType2["NO_TAX_COLLECTED"] = "NO_TAX_COLLECTED";
  RateType2["MANUAL_RATE"] = "MANUAL_RATE";
  RateType2["AUTO_RATE"] = "AUTO_RATE";
  RateType2["FALLBACK_RATE"] = "FALLBACK_RATE";
  return RateType2;
})(RateType || {});
var ManualCalculationReason = /* @__PURE__ */ ((ManualCalculationReason2) => {
  ManualCalculationReason2["GLOBAL_SETTING_TO_MANUAL"] = "GLOBAL_SETTING_TO_MANUAL";
  ManualCalculationReason2["REGION_SETTING_TO_MANUAL"] = "REGION_SETTING_TO_MANUAL";
  return ManualCalculationReason2;
})(ManualCalculationReason || {});
var FallbackReason = /* @__PURE__ */ ((FallbackReason2) => {
  FallbackReason2["AUTO_TAX_FAILED"] = "AUTO_TAX_FAILED";
  FallbackReason2["AUTO_TAX_DEACTIVATED"] = "AUTO_TAX_DEACTIVATED";
  return FallbackReason2;
})(FallbackReason || {});
var ChannelType = /* @__PURE__ */ ((ChannelType2) => {
  ChannelType2["UNSPECIFIED"] = "UNSPECIFIED";
  ChannelType2["WEB"] = "WEB";
  ChannelType2["POS"] = "POS";
  ChannelType2["EBAY"] = "EBAY";
  ChannelType2["AMAZON"] = "AMAZON";
  ChannelType2["OTHER_PLATFORM"] = "OTHER_PLATFORM";
  ChannelType2["WIX_APP_STORE"] = "WIX_APP_STORE";
  ChannelType2["WIX_INVOICES"] = "WIX_INVOICES";
  ChannelType2["BACKOFFICE_MERCHANT"] = "BACKOFFICE_MERCHANT";
  ChannelType2["WISH"] = "WISH";
  ChannelType2["CLASS_PASS"] = "CLASS_PASS";
  ChannelType2["GLOBAL_E"] = "GLOBAL_E";
  ChannelType2["FACEBOOK"] = "FACEBOOK";
  ChannelType2["ETSY"] = "ETSY";
  ChannelType2["TIKTOK"] = "TIKTOK";
  ChannelType2["FAIRE_COM"] = "FAIRE_COM";
  ChannelType2["PAYPAL_AGENTIC_CHECKOUT"] = "PAYPAL_AGENTIC_CHECKOUT";
  return ChannelType2;
})(ChannelType || {});
var AdditionalFeeSource = /* @__PURE__ */ ((AdditionalFeeSource2) => {
  AdditionalFeeSource2["UNKNOWN_ADDITIONAL_FEE_SOURCE"] = "UNKNOWN_ADDITIONAL_FEE_SOURCE";
  AdditionalFeeSource2["SERVICE_PLUGIN"] = "SERVICE_PLUGIN";
  AdditionalFeeSource2["ITEM"] = "ITEM";
  AdditionalFeeSource2["MANUAL"] = "MANUAL";
  AdditionalFeeSource2["SHIPPING"] = "SHIPPING";
  return AdditionalFeeSource2;
})(AdditionalFeeSource || {});
var Severity = /* @__PURE__ */ ((Severity2) => {
  Severity2["WARNING"] = "WARNING";
  Severity2["ERROR"] = "ERROR";
  return Severity2;
})(Severity || {});
var NameInOther = /* @__PURE__ */ ((NameInOther2) => {
  NameInOther2["OTHER_DEFAULT"] = "OTHER_DEFAULT";
  return NameInOther2;
})(NameInOther || {});
var NameInLineItem = /* @__PURE__ */ ((NameInLineItem2) => {
  NameInLineItem2["LINE_ITEM_DEFAULT"] = "LINE_ITEM_DEFAULT";
  return NameInLineItem2;
})(NameInLineItem || {});
var SuggestedFix = /* @__PURE__ */ ((SuggestedFix2) => {
  SuggestedFix2["UNKNOWN_SUGGESTED_FIX"] = "UNKNOWN_SUGGESTED_FIX";
  SuggestedFix2["REMOVE_LINE_ITEM"] = "REMOVE_LINE_ITEM";
  return SuggestedFix2;
})(SuggestedFix || {});
var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "ASC";
  SortOrder2["DESC"] = "DESC";
  return SortOrder2;
})(SortOrder || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function createCheckoutTemplate2(checkoutTemplate) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = transformPaths2(
    renameKeysFromSDKRequestToRESTRequest({
      checkoutTemplate
    }),
    [
      {
        transformFn: transformSDKImageToRESTImage,
        paths: [
          { path: "checkoutTemplate.lineItems.catalogOverrideFields.image" },
          { path: "checkoutTemplate.customLineItems.media" }
        ]
      },
      {
        transformFn: transformSDKPageURLV2ToRESTPageURLV2,
        paths: [{ path: "checkoutTemplate.customLineItems.url" }]
      }
    ]
  );
  const reqOpts = createCheckoutTemplate(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(
      transformPaths2(result.data, [
        {
          transformFn: transformRESTImageToSDKImage,
          paths: [
            { path: "checkoutTemplate.lineItems.catalogOverrideFields.image" },
            { path: "checkoutTemplate.customLineItems.media" }
          ]
        },
        {
          transformFn: transformRESTPageURLV2ToSDKPageURLV2,
          paths: [{ path: "checkoutTemplate.customLineItems.url" }]
        }
      ])
    )?.checkoutTemplate;
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { checkoutTemplate: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["checkoutTemplate"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function getCheckoutTemplate2(checkoutTemplateId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    checkoutTemplateId
  });
  const reqOpts = getCheckoutTemplate(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(
      transformPaths2(result.data, [
        {
          transformFn: transformRESTImageToSDKImage,
          paths: [
            { path: "checkoutTemplate.lineItems.catalogOverrideFields.image" },
            { path: "checkoutTemplate.customLineItems.media" }
          ]
        },
        {
          transformFn: transformRESTPageURLV2ToSDKPageURLV2,
          paths: [{ path: "checkoutTemplate.customLineItems.url" }]
        }
      ])
    )?.checkoutTemplate;
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { checkoutTemplateId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["checkoutTemplateId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function updateCheckoutTemplate2(_id, checkoutTemplate) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = transformPaths2(
    renameKeysFromSDKRequestToRESTRequest({
      checkoutTemplate: { ...checkoutTemplate, id: _id }
    }),
    [
      {
        transformFn: transformSDKImageToRESTImage,
        paths: [
          { path: "checkoutTemplate.lineItems.catalogOverrideFields.image" },
          { path: "checkoutTemplate.customLineItems.media" }
        ]
      },
      {
        transformFn: transformSDKPageURLV2ToRESTPageURLV2,
        paths: [{ path: "checkoutTemplate.customLineItems.url" }]
      }
    ]
  );
  const reqOpts = updateCheckoutTemplate(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(
      transformPaths2(result.data, [
        {
          transformFn: transformRESTImageToSDKImage,
          paths: [
            { path: "checkoutTemplate.lineItems.catalogOverrideFields.image" },
            { path: "checkoutTemplate.customLineItems.media" }
          ]
        },
        {
          transformFn: transformRESTPageURLV2ToSDKPageURLV2,
          paths: [{ path: "checkoutTemplate.customLineItems.url" }]
        }
      ])
    )?.checkoutTemplate;
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: { checkoutTemplate: "$[1]" },
        explicitPathsToArguments: { "checkoutTemplate.id": "$[0]" },
        singleArgumentUnchanged: false
      },
      ["_id", "checkoutTemplate"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteCheckoutTemplate2(checkoutTemplateId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    checkoutTemplateId
  });
  const reqOpts = deleteCheckoutTemplate(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { checkoutTemplateId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["checkoutTemplateId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
function queryCheckoutTemplates2() {
  const { httpClient, sideEffects } = arguments[0];
  return queryBuilder({
    func: async (payload) => {
      const reqOpts = queryCheckoutTemplates(payload);
      sideEffects?.onSiteCall?.();
      try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return result;
      } catch (err) {
        sideEffects?.onError?.(err);
        throw err;
      }
    },
    requestTransformer: (query) => {
      const args = [query, {}];
      return renameKeysFromSDKRequestToRESTRequest({
        ...args?.[1],
        query: args?.[0]
      });
    },
    responseTransformer: ({
      data
    }) => {
      const transformedData = renameKeysFromRESTResponseToSDKResponse(
        transformPaths2(data, [
          {
            transformFn: transformRESTImageToSDKImage,
            paths: [
              {
                path: "checkoutTemplates.lineItems.catalogOverrideFields.image"
              },
              { path: "checkoutTemplates.customLineItems.media" }
            ]
          },
          {
            transformFn: transformRESTPageURLV2ToSDKPageURLV2,
            paths: [{ path: "checkoutTemplates.customLineItems.url" }]
          }
        ])
      );
      return {
        items: transformedData?.checkoutTemplates,
        pagingMetadata: transformedData?.pagingMetadata
      };
    },
    errorTransformer: (err) => {
      const transformedError = sdkTransformError(err, {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { query: "$[0]" },
        singleArgumentUnchanged: false
      });
      throw transformedError;
    },
    pagingMethod: "CURSOR",
    transformationPaths: {}
  });
}
async function createCheckoutFromTemplate2(checkoutTemplateId, siteId) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    checkoutTemplateId,
    siteId
  });
  const reqOpts = createCheckoutFromTemplate(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          checkoutTemplateId: "$[0]",
          siteId: "$[1]"
        },
        singleArgumentUnchanged: false
      },
      ["checkoutTemplateId", "siteId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function createAndRedirectToCheckout2(checkoutTemplateId, siteId) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    checkoutTemplateId,
    siteId
  });
  const reqOpts = createAndRedirectToCheckout(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          checkoutTemplateId: "$[0]",
          siteId: "$[1]"
        },
        singleArgumentUnchanged: false
      },
      ["checkoutTemplateId", "siteId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/ecom-v1-checkout-template-checkout-templates.public.ts
function createCheckoutTemplate3(httpClient) {
  return (checkoutTemplate) => createCheckoutTemplate2(
    checkoutTemplate,
    // @ts-ignore
    { httpClient }
  );
}
function getCheckoutTemplate3(httpClient) {
  return (checkoutTemplateId) => getCheckoutTemplate2(
    checkoutTemplateId,
    // @ts-ignore
    { httpClient }
  );
}
function updateCheckoutTemplate3(httpClient) {
  return (_id, checkoutTemplate) => updateCheckoutTemplate2(
    _id,
    checkoutTemplate,
    // @ts-ignore
    { httpClient }
  );
}
function deleteCheckoutTemplate3(httpClient) {
  return (checkoutTemplateId) => deleteCheckoutTemplate2(
    checkoutTemplateId,
    // @ts-ignore
    { httpClient }
  );
}
function queryCheckoutTemplates3(httpClient) {
  return () => queryCheckoutTemplates2(
    // @ts-ignore
    { httpClient }
  );
}
function createCheckoutFromTemplate3(httpClient) {
  return (checkoutTemplateId, siteId) => createCheckoutFromTemplate2(
    checkoutTemplateId,
    siteId,
    // @ts-ignore
    { httpClient }
  );
}
function createAndRedirectToCheckout3(httpClient) {
  return (checkoutTemplateId, siteId) => createAndRedirectToCheckout2(
    checkoutTemplateId,
    siteId,
    // @ts-ignore
    { httpClient }
  );
}
var onCheckoutTemplateCreated = EventDefinition(
  "wix.ecom.v1.checkout_template_created",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTImageToSDKImage2,
        paths: [
          { path: "entity.lineItems.catalogOverrideFields.image" },
          { path: "entity.customLineItems.media" }
        ]
      },
      {
        transformFn: transformRESTFloatToSDKFloat2,
        paths: [
          {
            path: "entity.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "entity.customLineItems.physicalProperties.weight" }
        ]
      },
      {
        transformFn: transformRESTPageURLV2ToSDKPageURLV22,
        paths: [{ path: "entity.customLineItems.url" }]
      },
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          {
            path: "entity.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "entity.customLineItems.serviceProperties.scheduledDate" },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();
var onCheckoutTemplateDeleted = EventDefinition(
  "wix.ecom.v1.checkout_template_deleted",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTImageToSDKImage2,
        paths: [
          { path: "undefined.lineItems.catalogOverrideFields.image" },
          { path: "undefined.customLineItems.media" }
        ]
      },
      {
        transformFn: transformRESTFloatToSDKFloat2,
        paths: [
          {
            path: "undefined.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "undefined.customLineItems.physicalProperties.weight" }
        ]
      },
      {
        transformFn: transformRESTPageURLV2ToSDKPageURLV22,
        paths: [{ path: "undefined.customLineItems.url" }]
      },
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          {
            path: "undefined.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          {
            path: "undefined.customLineItems.serviceProperties.scheduledDate"
          },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();
var onCheckoutTemplateUpdated = EventDefinition(
  "wix.ecom.v1.checkout_template_updated",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTImageToSDKImage2,
        paths: [
          { path: "entity.lineItems.catalogOverrideFields.image" },
          { path: "entity.customLineItems.media" }
        ]
      },
      {
        transformFn: transformRESTFloatToSDKFloat2,
        paths: [
          {
            path: "entity.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "entity.customLineItems.physicalProperties.weight" }
        ]
      },
      {
        transformFn: transformRESTPageURLV2ToSDKPageURLV22,
        paths: [{ path: "entity.customLineItems.url" }]
      },
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          {
            path: "entity.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "entity.customLineItems.serviceProperties.scheduledDate" },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();
var onCheckoutTemplateUsed = EventDefinition(
  "wix.ecom.v1.checkout_template_used",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTImageToSDKImage2,
        paths: [
          {
            path: "data.checkoutTemplate.lineItems.catalogOverrideFields.image"
          },
          { path: "data.checkoutTemplate.customLineItems.media" },
          { path: "data.checkout.lineItems.media" },
          { path: "data.checkout.lineItems.catalogOverrideFields.image" }
        ]
      },
      {
        transformFn: transformRESTFloatToSDKFloat2,
        paths: [
          {
            path: "data.checkoutTemplate.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          {
            path: "data.checkoutTemplate.customLineItems.physicalProperties.weight"
          },
          { path: "data.checkout.lineItems.physicalProperties.weight" },
          {
            path: "data.checkout.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          {
            path: "data.checkout.appliedDiscounts.merchantDiscount.percentage"
          }
        ]
      },
      {
        transformFn: transformRESTPageURLV2ToSDKPageURLV22,
        paths: [
          { path: "data.checkoutTemplate.customLineItems.url" },
          { path: "data.checkout.lineItems.url" }
        ]
      },
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          {
            path: "data.checkoutTemplate.customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          {
            path: "data.checkoutTemplate.customLineItems.serviceProperties.scheduledDate"
          },
          { path: "data.checkout.createdDate" },
          { path: "data.checkout.updatedDate" },
          {
            path: "data.checkout.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "data.checkout.lineItems.serviceProperties.scheduledDate" },
          {
            path: "data.checkout.shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.from"
          },
          {
            path: "data.checkout.shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.to"
          },
          {
            path: "data.checkout.shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.from"
          },
          {
            path: "data.checkout.shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.to"
          },
          {
            path: "data.checkout.membershipOptions.eligibleMemberships.expirationDate"
          },
          {
            path: "data.checkout.membershipOptions.invalidMemberships.membership.expirationDate"
          },
          {
            path: "data.checkout.subscriptionCharges.charges.cycleBillingDate"
          },
          { path: "metadata.eventTime" }
        ]
      },
      {
        transformFn: transformRESTAddressToSDKAddress,
        paths: [
          { path: "data.checkout.billingInfo.address" },
          { path: "data.checkout.shippingInfo.shippingDestination.address" },
          {
            path: "data.checkout.shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address"
          },
          {
            path: "data.checkout.shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address"
          }
        ]
      }
    ])
  )
)();

// src/ecom-v1-checkout-template-checkout-templates.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
import { createEventModule } from "@wix/sdk-runtime/event-definition-modules";
var createCheckoutTemplate4 = /* @__PURE__ */ createRESTModule(createCheckoutTemplate3);
var getCheckoutTemplate4 = /* @__PURE__ */ createRESTModule(getCheckoutTemplate3);
var updateCheckoutTemplate4 = /* @__PURE__ */ createRESTModule(updateCheckoutTemplate3);
var deleteCheckoutTemplate4 = /* @__PURE__ */ createRESTModule(deleteCheckoutTemplate3);
var queryCheckoutTemplates4 = /* @__PURE__ */ createRESTModule(queryCheckoutTemplates3);
var createCheckoutFromTemplate4 = /* @__PURE__ */ createRESTModule(createCheckoutFromTemplate3);
var createAndRedirectToCheckout4 = /* @__PURE__ */ createRESTModule(createAndRedirectToCheckout3);
var onCheckoutTemplateCreated2 = createEventModule(
  onCheckoutTemplateCreated
);
var onCheckoutTemplateDeleted2 = createEventModule(
  onCheckoutTemplateDeleted
);
var onCheckoutTemplateUpdated2 = createEventModule(
  onCheckoutTemplateUpdated
);
var onCheckoutTemplateUsed2 = createEventModule(
  onCheckoutTemplateUsed
);
export {
  AdditionalFeeSource,
  ChannelType,
  ChargeType,
  DescriptionLineType,
  DiscountType,
  FallbackReason,
  FileType,
  ItemAvailabilityStatus,
  ItemTypeItemType,
  JurisdictionType,
  ManualCalculationReason,
  NameInLineItem,
  NameInOther,
  PaymentOptionType,
  PickupMethod,
  RateType,
  RuleType,
  Severity,
  SortOrder,
  Status,
  SubscriptionFrequency,
  SuggestedFix,
  TaxableAddressType,
  VatType,
  WebhookIdentityType,
  WeightUnit,
  createAndRedirectToCheckout4 as createAndRedirectToCheckout,
  createCheckoutFromTemplate4 as createCheckoutFromTemplate,
  createCheckoutTemplate4 as createCheckoutTemplate,
  deleteCheckoutTemplate4 as deleteCheckoutTemplate,
  getCheckoutTemplate4 as getCheckoutTemplate,
  onCheckoutTemplateCreated2 as onCheckoutTemplateCreated,
  onCheckoutTemplateDeleted2 as onCheckoutTemplateDeleted,
  onCheckoutTemplateUpdated2 as onCheckoutTemplateUpdated,
  onCheckoutTemplateUsed2 as onCheckoutTemplateUsed,
  queryCheckoutTemplates4 as queryCheckoutTemplates,
  updateCheckoutTemplate4 as updateCheckoutTemplate
};
//# sourceMappingURL=index.mjs.map