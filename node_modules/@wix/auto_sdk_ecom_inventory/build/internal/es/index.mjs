// src/service-plugins-types.ts
var Reason = /* @__PURE__ */ ((Reason2) => {
  Reason2["UNKNOWN_REASON"] = "UNKNOWN_REASON";
  Reason2["ORDER_PLACED"] = "ORDER_PLACED";
  Reason2["ORDER_PAID"] = "ORDER_PAID";
  Reason2["ORDER_CANCELED"] = "ORDER_CANCELED";
  Reason2["ORDER_REFUNDED"] = "ORDER_REFUNDED";
  Reason2["ORDER_EDITED"] = "ORDER_EDITED";
  Reason2["ORDER_REJECTED"] = "ORDER_REJECTED";
  return Reason2;
})(Reason || {});
var IdentityType = /* @__PURE__ */ ((IdentityType2) => {
  IdentityType2["UNKNOWN"] = "UNKNOWN";
  IdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  IdentityType2["MEMBER"] = "MEMBER";
  IdentityType2["WIX_USER"] = "WIX_USER";
  IdentityType2["APP"] = "APP";
  return IdentityType2;
})(IdentityType || {});

// src/interfaces-ecommerce-v1-inventory-provider.public.ts
import { ServicePluginDefinition } from "@wix/sdk-types";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";
var provideHandlers = ServicePluginDefinition("ECOM_INVENTORY", [
  {
    name: "decrementAvailability",
    primaryHttpMappingPath: "/v1/decrement",
    transformations: {
      toREST: (payload) => {
        const toRestResponse = payload;
        return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
      },
      fromREST: (payload) => {
        const fromRestRequest = payload;
        return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
      }
    }
  },
  {
    name: "incrementAvailability",
    primaryHttpMappingPath: "/v1/increment",
    transformations: {
      toREST: (payload) => {
        const toRestResponse = payload;
        return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
      },
      fromREST: (payload) => {
        const fromRestRequest = payload;
        return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
      }
    }
  }
]);

// src/interfaces-ecommerce-v1-inventory-provider.context.ts
import { createServicePluginModule } from "@wix/sdk-runtime/service-plugin-modules";
var provideHandlers2 = createServicePluginModule(
  provideHandlers
);

// src/service-plugins-error-classes.ts
var DecrementNotPossibleWixError = class extends Error {
  constructor() {
    super("DecrementNotPossible");
    this.httpCode = 428;
    this.statusCode = "FAILED_PRECONDITION";
    this.applicationCode = "DECREMENT_NOT_POSSIBLE";
    this.name = "DecrementNotPossible";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "DecrementNotPossible",
      applicationCode: "DECREMENT_NOT_POSSIBLE"
    };
  }
};
/** @hidden */
DecrementNotPossibleWixError.__type = "wix_spi_error";
var IncrementNotPossibleWixError = class extends Error {
  constructor() {
    super("IncrementNotPossible");
    this.httpCode = 428;
    this.statusCode = "FAILED_PRECONDITION";
    this.applicationCode = "INCREMENT_NOT_POSSIBLE";
    this.name = "IncrementNotPossible";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "IncrementNotPossible",
      applicationCode: "INCREMENT_NOT_POSSIBLE"
    };
  }
};
/** @hidden */
IncrementNotPossibleWixError.__type = "wix_spi_error";
export {
  DecrementNotPossibleWixError,
  IdentityType,
  IncrementNotPossibleWixError,
  Reason,
  provideHandlers2 as provideHandlers,
  provideHandlers as publicProvideHandlers
};
//# sourceMappingURL=index.mjs.map