import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { StartCollectingRequestsResponse, StartCollectingRequestsApplicationErrors, StopCollectingRequestsResponse, GetSettingsResponse } from './index.typings.mjs';
export { BackInStockCollectionState, BackInStockSettings, GetSettingsRequest, StartCollectingRequestsRequest, StopCollectingRequestsRequest } from './index.typings.mjs';

declare function startCollectingRequests$1(httpClient: HttpClient): StartCollectingRequestsSignature;
interface StartCollectingRequestsSignature {
    /**
     * Sets `settings.collectionStates.collectingRequests` to `true` for given `appId`.
     *
     * When the collection state is set to `true`, collecting requests is enabled and customers may request
     * notifications for out of stock products. While collecting is enabled, customers see a "Notify When Available"
     * button on out-of-stock items. Customers can click the button to enter their email address, which creates the
     * notification request.
     * @param - ID of the app to start accepting notification requests for.
     *
     * Back in stock notifications only work for [Wix Stores](https://support.wix.com/en/article/wix-stores-about-wix-stores).
     * The `appId` for Wix Stores is `"215238eb-22a5-4c36-9e7b-e7c08025e04e"`.
     */
    (appId: string): Promise<NonNullablePaths<StartCollectingRequestsResponse, `settings.collectionStates` | `settings.collectionStates.${number}.appId` | `settings.collectionStates.${number}.collectingRequests`, 5> & {
        __applicationErrorsType?: StartCollectingRequestsApplicationErrors;
    }>;
}
declare function stopCollectingRequests$1(httpClient: HttpClient): StopCollectingRequestsSignature;
interface StopCollectingRequestsSignature {
    /**
     * Sets `settings.collectionStates.collectingRequests` to `false` for given `appId`.
     *
     * When the collection state is set to `false`, collecting notification requests is disabled.
     * @param - ID of the app to stop accepting notification requests for.
     *
     * Back in stock notifications only work for [Wix Stores](https://support.wix.com/en/article/wix-stores-about-wix-stores).
     * The `appId` for Wix Stores is `"215238eb-22a5-4c36-9e7b-e7c08025e04e"`.
     */
    (appId: string): Promise<NonNullablePaths<StopCollectingRequestsResponse, `settings.collectionStates` | `settings.collectionStates.${number}.appId` | `settings.collectionStates.${number}.collectingRequests`, 5>>;
}
declare function getSettings$1(httpClient: HttpClient): GetSettingsSignature;
interface GetSettingsSignature {
    /**
     * Retrieves back in stock notification request settings.
     */
    (): Promise<NonNullablePaths<GetSettingsResponse, `settings.collectionStates` | `settings.collectionStates.${number}.appId` | `settings.collectionStates.${number}.collectingRequests`, 5>>;
}

declare const startCollectingRequests: MaybeContext<BuildRESTFunction<typeof startCollectingRequests$1> & typeof startCollectingRequests$1>;
declare const stopCollectingRequests: MaybeContext<BuildRESTFunction<typeof stopCollectingRequests$1> & typeof stopCollectingRequests$1>;
declare const getSettings: MaybeContext<BuildRESTFunction<typeof getSettings$1> & typeof getSettings$1>;

export { GetSettingsResponse, StartCollectingRequestsApplicationErrors, StartCollectingRequestsResponse, StopCollectingRequestsResponse, getSettings, startCollectingRequests, stopCollectingRequests };
