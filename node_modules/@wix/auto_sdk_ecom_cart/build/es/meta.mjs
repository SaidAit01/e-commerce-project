// src/ecom-v1-cart-cart.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixEcomCartApiV1CartServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/cart",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "www.wixgateway.com": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    _: [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      },
      {
        srcPath: "/_api/cart",
        destPath: ""
      },
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/ecom-cart",
        destPath: ""
      }
    ],
    "apps._base_domain_": [
      {
        srcPath: "/ecom/v1/carts",
        destPath: "/v1/carts"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_cart";
function createCart(payload) {
  function __createCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cartInfo.createdDate" },
          { path: "cartInfo.updatedDate" },
          { path: "cartInfo.lineItems.image.urlExpirationDate" },
          {
            path: "cartInfo.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "cartInfo.lineItems.serviceProperties.scheduledDate" },
          { path: "lineItems.image.urlExpirationDate" },
          {
            path: "lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "lineItems.serviceProperties.scheduledDate" },
          {
            path: "customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "customLineItems.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          { path: "cartInfo.lineItems.image.focalPoint.x" },
          { path: "cartInfo.lineItems.image.focalPoint.y" },
          { path: "lineItems.image.focalPoint.x" },
          { path: "lineItems.image.focalPoint.y" },
          { path: "cartInfo.lineItems.physicalProperties.weight" },
          {
            path: "cartInfo.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cartInfo.contactInfo.address.geocode.latitude" },
          { path: "cartInfo.contactInfo.address.geocode.longitude" },
          { path: "lineItems.physicalProperties.weight" },
          { path: "lineItems.catalogOverrideFields.physicalProperties.weight" },
          { path: "customLineItems.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.CreateCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createCart;
}
function updateCart(payload) {
  function __updateCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "cartFieldmask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cartInfo.createdDate" },
          { path: "cartInfo.updatedDate" },
          { path: "cartInfo.lineItems.image.urlExpirationDate" },
          {
            path: "cartInfo.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "cartInfo.lineItems.serviceProperties.scheduledDate" },
          { path: "lineItems.image.urlExpirationDate" },
          {
            path: "lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "lineItems.serviceProperties.scheduledDate" },
          {
            path: "customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "customLineItems.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          { path: "cartInfo.lineItems.image.focalPoint.x" },
          { path: "cartInfo.lineItems.image.focalPoint.y" },
          { path: "lineItems.image.focalPoint.x" },
          { path: "lineItems.image.focalPoint.y" },
          { path: "cartInfo.lineItems.physicalProperties.weight" },
          {
            path: "cartInfo.lineItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cartInfo.contactInfo.address.geocode.latitude" },
          { path: "cartInfo.contactInfo.address.geocode.longitude" },
          { path: "lineItems.physicalProperties.weight" },
          { path: "lineItems.catalogOverrideFields.physicalProperties.weight" },
          { path: "customLineItems.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "PATCH",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.UpdateCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{cartInfo.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCart;
}
function getCart(payload) {
  function __getCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "GET",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.GetCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCart;
}
function getCartByCheckoutId(payload) {
  function __getCartByCheckoutId({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "GET",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.GetCartByCheckoutId",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/by-checkout-id/{id}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCartByCheckoutId;
}
function addToCart(payload) {
  function __addToCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "lineItems.image.urlExpirationDate" },
          {
            path: "lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "lineItems.serviceProperties.scheduledDate" },
          {
            path: "customLineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
          },
          { path: "customLineItems.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          { path: "lineItems.image.focalPoint.x" },
          { path: "lineItems.image.focalPoint.y" },
          { path: "lineItems.physicalProperties.weight" },
          { path: "lineItems.catalogOverrideFields.physicalProperties.weight" },
          { path: "customLineItems.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.AddToCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/add-to-cart",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addToCart;
}
function removeLineItems(payload) {
  function __removeLineItems({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.RemoveLineItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/remove-line-items",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeLineItems;
}
function createCheckout(payload) {
  function __createCheckout({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          { path: "shippingAddress.geocode.latitude" },
          { path: "shippingAddress.geocode.longitude" },
          { path: "billingAddress.geocode.latitude" },
          { path: "billingAddress.geocode.longitude" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.CreateCheckout",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/create-checkout",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __createCheckout;
}
function removeCoupon(payload) {
  function __removeCoupon({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.RemoveCoupon",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/remove-coupon",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeCoupon;
}
function updateLineItemsQuantity(payload) {
  function __updateLineItemsQuantity({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.UpdateLineItemsQuantity",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/update-line-items-quantity",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateLineItemsQuantity;
}
function estimateTotals(payload) {
  function __estimateTotals({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          { path: "shippingAddress.geocode.latitude" },
          { path: "shippingAddress.geocode.longitude" },
          { path: "billingAddress.geocode.latitude" },
          { path: "billingAddress.geocode.longitude" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.EstimateTotals",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/estimate-totals",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.from"
            },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.deliveryTimeSlot.to"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.from"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.deliveryTimeSlot.to"
            },
            { path: "membershipOptions.eligibleMemberships.expirationDate" },
            {
              path: "membershipOptions.invalidMemberships.membership.expirationDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.latitude"
            },
            {
              path: "shippingInfo.selectedCarrierServiceOption.logistics.pickupDetails.address.geocode.longitude"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.latitude"
            },
            {
              path: "shippingInfo.carrierServiceOptions.shippingOptions.logistics.pickupDetails.address.geocode.longitude"
            },
            { path: "appliedDiscounts.merchantDiscount.percentage" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __estimateTotals;
}
function deleteCart(payload) {
  function __deleteCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "DELETE",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.DeleteCart",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteCart;
}
function removeBusinessLocation(payload) {
  function __removeBusinessLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.cart",
      method: "POST",
      methodFqn: "com.wix.ecom.cart.api.v1.CartService.RemoveBusinessLocation",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCartApiV1CartServiceUrl({
        protoPath: "/v1/carts/{id}/remove-business-location",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            { path: "cart.lineItems.image.urlExpirationDate" },
            {
              path: "cart.lineItems.subscriptionOptionInfo.subscriptionSettings.startDate"
            },
            { path: "cart.lineItems.serviceProperties.scheduledDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "cart.lineItems.image.focalPoint.x" },
            { path: "cart.lineItems.image.focalPoint.y" },
            { path: "cart.lineItems.physicalProperties.weight" },
            {
              path: "cart.lineItems.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.contactInfo.address.geocode.latitude" },
            { path: "cart.contactInfo.address.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeBusinessLocation;
}

// src/ecom-v1-cart-cart.meta.ts
function createCart2() {
  const payload = {};
  const getRequestOptions = createCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCart2() {
  const payload = { cartInfo: { id: ":cartInfoId" } };
  const getRequestOptions = updateCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/carts/{cartInfo.id}",
    pathParams: { cartInfoId: "cartInfoId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCart2() {
  const payload = { id: ":id" };
  const getRequestOptions = getCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/carts/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCartByCheckoutId2() {
  const payload = { id: ":id" };
  const getRequestOptions = getCartByCheckoutId(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/carts/by-checkout-id/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addToCart2() {
  const payload = { id: ":id" };
  const getRequestOptions = addToCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/add-to-cart",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeLineItems2() {
  const payload = { id: ":id" };
  const getRequestOptions = removeLineItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/remove-line-items",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function createCheckout2() {
  const payload = { id: ":id" };
  const getRequestOptions = createCheckout(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/create-checkout",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeCoupon2() {
  const payload = { id: ":id" };
  const getRequestOptions = removeCoupon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/remove-coupon",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateLineItemsQuantity2() {
  const payload = { id: ":id" };
  const getRequestOptions = updateLineItemsQuantity(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/update-line-items-quantity",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function estimateTotals2() {
  const payload = { id: ":id" };
  const getRequestOptions = estimateTotals(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/estimate-totals",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteCart2() {
  const payload = { id: ":id" };
  const getRequestOptions = deleteCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/carts/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeBusinessLocation2() {
  const payload = { id: ":id" };
  const getRequestOptions = removeBusinessLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/carts/{id}/remove-business-location",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  addToCart2 as addToCart,
  createCart2 as createCart,
  createCheckout2 as createCheckout,
  deleteCart2 as deleteCart,
  estimateTotals2 as estimateTotals,
  getCart2 as getCart,
  getCartByCheckoutId2 as getCartByCheckoutId,
  removeBusinessLocation2 as removeBusinessLocation,
  removeCoupon2 as removeCoupon,
  removeLineItems2 as removeLineItems,
  updateCart2 as updateCart,
  updateLineItemsQuantity2 as updateLineItemsQuantity
};
//# sourceMappingURL=meta.mjs.map