"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  createOrderPaymentRequest: () => createOrderPaymentRequest2,
  deleteOrderPaymentRequest: () => deleteOrderPaymentRequest2,
  getOrderPaymentRequest: () => getOrderPaymentRequest2,
  getOrderPaymentRequestUrl: () => getOrderPaymentRequestUrl2,
  queryOrderPaymentRequests: () => queryOrderPaymentRequests2,
  updateExtendedFields: () => updateExtendedFields2,
  updateOrderPaymentRequest: () => updateOrderPaymentRequest2,
  voidOrderPaymentRequest: () => voidOrderPaymentRequest2
});
module.exports = __toCommonJS(meta_exports);

// src/ecom-v1-order-payment-request-order-payment-requests.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/order-payment-request",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/ecom/v1/order-payment-requests",
        destPath: "/v1/order-payment-requests"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/order-payment-requests",
        destPath: "/v1/order-payment-requests"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/order-payment-requests",
        destPath: "/v1/order-payment-requests"
      }
    ],
    _: [
      {
        srcPath: "/ecom/v1/order-payment-requests",
        destPath: "/v1/order-payment-requests"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_order-payment-requests";
function createOrderPaymentRequest(payload) {
  function __createOrderPaymentRequest({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "orderPaymentRequest.expirationDate" },
          { path: "orderPaymentRequest.createdDate" },
          { path: "orderPaymentRequest.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "POST",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.CreateOrderPaymentRequest",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        { protoPath: "/v1/order-payment-requests", data: serializedData, host }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderPaymentRequest.expirationDate" },
            { path: "orderPaymentRequest.createdDate" },
            { path: "orderPaymentRequest.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createOrderPaymentRequest;
}
function getOrderPaymentRequest(payload) {
  function __getOrderPaymentRequest({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "GET",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.GetOrderPaymentRequest",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        {
          protoPath: "/v1/order-payment-requests/{orderPaymentRequestId}",
          data: payload,
          host
        }
      ),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderPaymentRequest.expirationDate" },
            { path: "orderPaymentRequest.createdDate" },
            { path: "orderPaymentRequest.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getOrderPaymentRequest;
}
function updateOrderPaymentRequest(payload) {
  function __updateOrderPaymentRequest({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "orderPaymentRequest.expirationDate" },
          { path: "orderPaymentRequest.createdDate" },
          { path: "orderPaymentRequest.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "PATCH",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.UpdateOrderPaymentRequest",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        {
          protoPath: "/v1/order-payment-requests/{orderPaymentRequest.id}",
          data: serializedData,
          host
        }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderPaymentRequest.expirationDate" },
            { path: "orderPaymentRequest.createdDate" },
            { path: "orderPaymentRequest.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateOrderPaymentRequest;
}
function deleteOrderPaymentRequest(payload) {
  function __deleteOrderPaymentRequest({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "DELETE",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.DeleteOrderPaymentRequest",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        {
          protoPath: "/v1/order-payment-requests/{orderPaymentRequestId}",
          data: payload,
          host
        }
      ),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteOrderPaymentRequest;
}
function queryOrderPaymentRequests(payload) {
  function __queryOrderPaymentRequests({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "POST",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.QueryOrderPaymentRequests",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        { protoPath: "/v1/order-payment-requests/query", data: payload, host }
      ),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderPaymentRequests.expirationDate" },
            { path: "orderPaymentRequests.createdDate" },
            { path: "orderPaymentRequests.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryOrderPaymentRequests;
}
function getOrderPaymentRequestUrl(payload) {
  function __getOrderPaymentRequestUrl({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "POST",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.GetOrderPaymentRequestURL",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        { protoPath: "/v1/order-payment-requests/url", data: payload, host }
      ),
      data: payload
    };
    return metadata;
  }
  return __getOrderPaymentRequestUrl;
}
function updateExtendedFields(payload) {
  function __updateExtendedFields({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "POST",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.UpdateExtendedFields",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        {
          protoPath: "/v1/order-payment-requests/{id}/update-extended-fields",
          data: payload,
          host
        }
      ),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderPaymentRequest.expirationDate" },
            { path: "orderPaymentRequest.createdDate" },
            { path: "orderPaymentRequest.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateExtendedFields;
}
function voidOrderPaymentRequest(payload) {
  function __voidOrderPaymentRequest({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_payment_request",
      method: "POST",
      methodFqn: "wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.VoidOrderPaymentRequest",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(
        { protoPath: "/v1/order-payment-requests/void", data: payload, host }
      ),
      data: payload
    };
    return metadata;
  }
  return __voidOrderPaymentRequest;
}

// src/ecom-v1-order-payment-request-order-payment-requests.meta.ts
function createOrderPaymentRequest2() {
  const payload = {};
  const getRequestOptions = createOrderPaymentRequest(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/order-payment-requests",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getOrderPaymentRequest2() {
  const payload = { orderPaymentRequestId: ":orderPaymentRequestId" };
  const getRequestOptions = getOrderPaymentRequest(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/order-payment-requests/{orderPaymentRequestId}",
    pathParams: { orderPaymentRequestId: "orderPaymentRequestId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateOrderPaymentRequest2() {
  const payload = {
    orderPaymentRequest: { id: ":orderPaymentRequestId" }
  };
  const getRequestOptions = updateOrderPaymentRequest(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/order-payment-requests/{orderPaymentRequest.id}",
    pathParams: { orderPaymentRequestId: "orderPaymentRequestId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteOrderPaymentRequest2() {
  const payload = { orderPaymentRequestId: ":orderPaymentRequestId" };
  const getRequestOptions = deleteOrderPaymentRequest(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/order-payment-requests/{orderPaymentRequestId}",
    pathParams: { orderPaymentRequestId: "orderPaymentRequestId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryOrderPaymentRequests2() {
  const payload = {};
  const getRequestOptions = queryOrderPaymentRequests(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/order-payment-requests/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getOrderPaymentRequestUrl2() {
  const payload = {};
  const getRequestOptions = getOrderPaymentRequestUrl(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/order-payment-requests/url",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateExtendedFields2() {
  const payload = { id: ":id" };
  const getRequestOptions = updateExtendedFields(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/order-payment-requests/{id}/update-extended-fields",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function voidOrderPaymentRequest2() {
  const payload = {};
  const getRequestOptions = voidOrderPaymentRequest(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/order-payment-requests/void",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createOrderPaymentRequest,
  deleteOrderPaymentRequest,
  getOrderPaymentRequest,
  getOrderPaymentRequestUrl,
  queryOrderPaymentRequests,
  updateExtendedFields,
  updateOrderPaymentRequest,
  voidOrderPaymentRequest
});
//# sourceMappingURL=meta.js.map