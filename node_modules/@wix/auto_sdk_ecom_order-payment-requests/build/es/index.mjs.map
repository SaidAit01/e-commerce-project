{"version":3,"sources":["../../src/ecom-v1-order-payment-request-order-payment-requests.universal.ts","../../src/ecom-v1-order-payment-request-order-payment-requests.http.ts","../../src/ecom-v1-order-payment-request-order-payment-requests.public.ts","../../src/ecom-v1-order-payment-request-order-payment-requests.context.ts"],"sourcesContent":["import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixEcomV1OrderPaymentRequest from './ecom-v1-order-payment-request-order-payment-requests.http.js';\n// @ts-ignore\nimport { transformSDKImageToRESTImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\nexport interface OrderPaymentRequest {\n  /**\n   * Order payment request ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Additional parameters to identify the source of the order payment request.\n   * @immutable\n   */\n  source?: Source;\n  /**\n   * status.\n   * @readonly\n   */\n  status?: StatusWithLiterals;\n  /**\n   * Order ID.\n   * @format GUID\n   * @immutable\n   */\n  orderId?: string;\n  /**\n   * Order number.\n   * @readonly\n   * @maxLength 100\n   */\n  orderNumber?: string | null;\n  /**\n   * Amount to collect.\n   * > **Note:** The amount can only be set once.\n   * @immutable\n   */\n  amount?: Price;\n  /**\n   * Currency code. The value will always match the currency used in the order.\n   * @format CURRENCY\n   * @readonly\n   */\n  currency?: string;\n  /**\n   * Payment gateway order id which is associated with this payment request\n   * @readonly\n   * @minLength 1\n   * @maxLength 100\n   */\n  paymentGatewayOrderId?: string | null;\n  /**\n   * Title to be displayed to the customer on the payment page. Provide a clear and descriptive title to inform the customer about what they are paying for.\n   * @minLength 1\n   * @maxLength 200\n   */\n  title?: string;\n  /**\n   * Description to be displayed to the customer on the payment page. Write a detailed description so the customer understands what they are paying for.\n   * @maxLength 300\n   */\n  description?: string | null;\n  /**\n   * Time and date the order payment request expires.\n   * @immutable\n   */\n  expirationDate?: Date | null;\n  /** [Extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields) must be configured in the [app dashboard](https://dev.wix.com/dc3/my-apps/) before they can be accessed with API calls. */\n  extendedFields?: ExtendedFields;\n  /**\n   * Date and time the OrderPaymentRequest was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the OrderPaymentRequest was last updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /** Image to display to the customer on the payment page. */\n  image?: string;\n  /**\n   * List of payment methods that can't be used for this order payment request.\n   * @internal\n   * @maxSize 1\n   */\n  blockedPaymentMethods?: PaymentMethodWithLiterals[];\n  /**\n   * A collection of action links (e.g., navigation or error resolution URLs) intended for client-side use.\n   *\n   * These actions are optional and may be conditionally rendered based on the client context.\n   * @internal\n   */\n  actionLinks?: ActionLinks;\n}\n\nexport interface Source {\n  /**\n   * App Def ID that created the order payment request.\n   * @format GUID\n   * @minLength 1\n   * @maxLength 100\n   * @immutable\n   */\n  appId?: string | null;\n  /**\n   * Reference to an ID from an external system, indicating the original source of the order payment request.\n   * @minLength 1\n   * @maxLength 100\n   * @immutable\n   */\n  externalId?: string;\n}\n\nexport enum Status {\n  UNKNOWN_STATUS = 'UNKNOWN_STATUS',\n  UNPAID = 'UNPAID',\n  PAID = 'PAID',\n  EXPIRED = 'EXPIRED',\n}\n\n/** @enumType */\nexport type StatusWithLiterals =\n  | Status\n  | 'UNKNOWN_STATUS'\n  | 'UNPAID'\n  | 'PAID'\n  | 'EXPIRED';\n\nexport interface Price {\n  /**\n   * Amount.\n   * @decimalValue options { gte:0, lte:1000000000000000 }\n   */\n  amount?: string;\n  /**\n   * Amount formatted with currency symbol.\n   * @readonly\n   */\n  formattedAmount?: string;\n}\n\nexport interface ExtendedFields {\n  /**\n   * Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\n   * The value of each key is structured according to the schema defined when the extended fields were configured.\n   *\n   * You can only access fields for which you have the appropriate permissions.\n   *\n   * Learn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n   */\n  namespaces?: Record<string, Record<string, any>>;\n}\n\nexport enum PaymentMethod {\n  UNKNOWN_PAYMENT_METHOD = 'UNKNOWN_PAYMENT_METHOD',\n  /** Manual payment. */\n  MANUAL = 'MANUAL',\n}\n\n/** @enumType */\nexport type PaymentMethodWithLiterals =\n  | PaymentMethod\n  | 'UNKNOWN_PAYMENT_METHOD'\n  | 'MANUAL';\n\nexport interface ActionLinks {\n  /**\n   * A general navigation action link rendered as an anchor in the UI.\n   * @maxSize 1\n   */\n  general?: ActionLink[];\n  /** An action link rendered as a button in error messages in the UI. */\n  error?: ActionLink;\n}\n\nexport interface ActionLink {\n  /**\n   * Label.\n   * @minLength 1\n   * @maxLength 100\n   */\n  label?: string;\n  /**\n   * URL.\n   * @format WEB_URL\n   */\n  url?: string;\n}\n\n/** Triggered when the order payment request status changes to paid */\nexport interface OrderPaymentRequestPaid {\n  /** Order payment request */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\n/** Triggered when the order payment request status changes to expired */\nexport interface OrderPaymentRequestExpired {\n  /** Order payment request */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\n/** Triggered when the order payment request status changes to voided */\nexport interface OrderPaymentRequestVoided {\n  /** Order payment request */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\nexport interface CreateOrderPaymentRequestRequest {\n  /** OrderPaymentRequest to be created. */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\nexport interface CreateOrderPaymentRequestResponse {\n  /** The created OrderPaymentRequest. */\n  orderPaymentRequest?: OrderPaymentRequest;\n  /**\n   * Order payment request URL.\n   * @minLength 1\n   * @maxLength 100\n   */\n  orderPaymentRequestUrl?: string;\n}\n\nexport interface GetOrderPaymentRequestRequest {\n  /**\n   * ID of the OrderPaymentRequest to retrieve.\n   * @format GUID\n   */\n  orderPaymentRequestId: string;\n}\n\nexport interface GetOrderPaymentRequestResponse {\n  /** The requested OrderPaymentRequest. */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\nexport interface UpdateOrderPaymentRequestRequest {\n  /** OrderPaymentRequest to be updated, may be partial. */\n  orderPaymentRequest: OrderPaymentRequest;\n}\n\nexport interface UpdateOrderPaymentRequestResponse {\n  /** Updated OrderPaymentRequest. */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\nexport interface DeleteOrderPaymentRequestRequest {\n  /**\n   * Id of the OrderPaymentRequest to delete.\n   * @format GUID\n   */\n  orderPaymentRequestId: string;\n}\n\nexport interface DeleteOrderPaymentRequestResponse {}\n\nexport interface QueryOrderPaymentRequestsRequest {\n  /** WQL expression. */\n  query?: CursorQuery;\n}\n\nexport interface CursorQuery extends CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object in the following format:\n   * `\"filter\" : {\n   * \"fieldName1\": \"value1\",\n   * \"fieldName2\":{\"$operator\":\"value2\"}\n   * }`\n   * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the following format:\n   * `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n   * @maxSize 5\n   */\n  sort?: Sorting[];\n}\n\n/** @oneof */\nexport interface CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryOrderPaymentRequestsResponse {\n  /**\n   * List of payment requests.\n   * @maxSize 1000\n   */\n  orderPaymentRequests?: OrderPaymentRequest[];\n  /** Paging metadata */\n  pagingMetadata?: CursorPagingMetadata;\n}\n\nexport interface CursorPagingMetadata {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Cursor strings that point to the next page, previous page, or both. */\n  cursors?: Cursors;\n  /**\n   * Whether there are more pages to retrieve following the current page.\n   *\n   * + `true`: Another page of results can be retrieved.\n   * + `false`: This is the last page.\n   */\n  hasNext?: boolean | null;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface GetOrderPaymentRequestURLRequest {\n  /**\n   * Order Payment Request ID.\n   * @format GUID\n   */\n  orderPaymentRequestId: string;\n}\n\nexport interface GetOrderPaymentRequestURLResponse {\n  /**\n   * Order Payment Request URL.\n   * @minLength 1\n   * @maxLength 100\n   */\n  orderPaymentRequestUrl?: string;\n}\n\nexport interface UpdateExtendedFieldsRequest {\n  /** ID of the entity to update. */\n  _id: string;\n  /** Identifier for the app whose extended fields are being updated. */\n  namespace: string;\n  /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */\n  namespaceData: Record<string, any> | null;\n}\n\nexport interface UpdateExtendedFieldsResponse {\n  /** Updated OrderPaymentRequest. */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\nexport interface VoidOrderPaymentRequestRequest {\n  /**\n   * ID of the order payment request to void.\n   * @format GUID\n   */\n  orderPaymentRequestId: string;\n}\n\nexport interface VoidOrderPaymentRequestResponse {}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n/** @docsIgnore */\nexport type GetOrderPaymentRequestApplicationErrors = {\n  code?: 'ORDER_PAYMENT_REQUEST_NOT_FOUND';\n  description?: string;\n  data?: Record<string, any>;\n};\n/** @docsIgnore */\nexport type UpdateOrderPaymentRequestApplicationErrors =\n  | {\n      code?: 'CANNOT_UPDATE_PAID_ORDER_PAYMENT_REQUEST';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'CANNOT_UPDATE_EXPIRED_ORDER_PAYMENT_REQUEST';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'CANNOT_UPDATE_VOIDED_ORDER_PAYMENT_REQUEST';\n      description?: string;\n      data?: Record<string, any>;\n    };\n/** @docsIgnore */\nexport type DeleteOrderPaymentRequestApplicationErrors = {\n  code?: 'CANNOT_DELETE_PAID_ORDER_PAYMENT_REQUEST';\n  description?: string;\n  data?: Record<string, any>;\n};\n/** @docsIgnore */\nexport type GetOrderPaymentRequestUrlApplicationErrors =\n  | {\n      code?: 'ORDER_PAYMENT_REQUEST_NOT_FOUND';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'ORDER_PAYMENT_REQUEST_PAGE_NOT_FOUND';\n      description?: string;\n      data?: Record<string, any>;\n    };\n/** @docsIgnore */\nexport type VoidOrderPaymentRequestApplicationErrors =\n  | {\n      code?: 'ORDER_PAYMENT_REQUEST_NOT_FOUND';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'CANNOT_VOID_PAID_ORDER_PAYMENT_REQUEST';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'CANNOT_VOID_EXPIRED_ORDER_PAYMENT_REQUEST';\n      description?: string;\n      data?: Record<string, any>;\n    };\n\n/**\n * Creates a order payment request.\n * @public\n * @documentationMaturity preview\n * @requiredField options.orderPaymentRequest.amount\n * @requiredField options.orderPaymentRequest.orderId\n * @requiredField options.orderPaymentRequest.title\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_CREATE\n * @applicableIdentity APP\n * @returns The created OrderPaymentRequest.\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.CreateOrderPaymentRequest\n */\nexport async function createOrderPaymentRequest(\n  options?: NonNullablePaths<\n    CreateOrderPaymentRequestOptions,\n    | `orderPaymentRequest.amount`\n    | `orderPaymentRequest.orderId`\n    | `orderPaymentRequest.title`,\n    3\n  >\n): Promise<\n  NonNullablePaths<\n    OrderPaymentRequest,\n    | `source.externalId`\n    | `status`\n    | `orderId`\n    | `amount.amount`\n    | `amount.formattedAmount`\n    | `currency`\n    | `title`,\n    3\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      orderPaymentRequest: options?.orderPaymentRequest,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'orderPaymentRequest.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.createOrderPaymentRequest(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'orderPaymentRequest.image' }],\n        },\n      ])\n    )?.orderPaymentRequest!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          orderPaymentRequest: '$[0].orderPaymentRequest',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface CreateOrderPaymentRequestOptions {\n  /** OrderPaymentRequest to be created. */\n  orderPaymentRequest?: OrderPaymentRequest;\n}\n\n/**\n * Retrieves a order payment request.\n * @param orderPaymentRequestId - ID of the OrderPaymentRequest to retrieve.\n * @public\n * @documentationMaturity preview\n * @requiredField orderPaymentRequestId\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_READ\n * @applicableIdentity APP\n * @returns The requested OrderPaymentRequest.\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.GetOrderPaymentRequest\n */\nexport async function getOrderPaymentRequest(\n  orderPaymentRequestId: string\n): Promise<\n  NonNullablePaths<\n    OrderPaymentRequest,\n    | `source.externalId`\n    | `status`\n    | `orderId`\n    | `amount.amount`\n    | `amount.formattedAmount`\n    | `currency`\n    | `title`,\n    3\n  > & {\n    __applicationErrorsType?: GetOrderPaymentRequestApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    orderPaymentRequestId: orderPaymentRequestId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.getOrderPaymentRequest(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'orderPaymentRequest.image' }],\n        },\n      ])\n    )?.orderPaymentRequest!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { orderPaymentRequestId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['orderPaymentRequestId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates a order payment request.\n *\n * Please note that only `UNPAID` payment requests can be updated.\n * @param _id - Order payment request ID.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField orderPaymentRequest\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_UPDATE\n * @applicableIdentity APP\n * @returns Updated OrderPaymentRequest.\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.UpdateOrderPaymentRequest\n */\nexport async function updateOrderPaymentRequest(\n  _id: string,\n  orderPaymentRequest: UpdateOrderPaymentRequest\n): Promise<\n  NonNullablePaths<\n    OrderPaymentRequest,\n    | `source.externalId`\n    | `status`\n    | `orderId`\n    | `amount.amount`\n    | `amount.formattedAmount`\n    | `currency`\n    | `title`,\n    3\n  > & {\n    __applicationErrorsType?: UpdateOrderPaymentRequestApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      orderPaymentRequest: { ...orderPaymentRequest, id: _id },\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'orderPaymentRequest.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.updateOrderPaymentRequest(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'orderPaymentRequest.image' }],\n        },\n      ])\n    )?.orderPaymentRequest!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { orderPaymentRequest: '$[1]' },\n        explicitPathsToArguments: { 'orderPaymentRequest.id': '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'orderPaymentRequest']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateOrderPaymentRequest {\n  /**\n   * Order payment request ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Additional parameters to identify the source of the order payment request.\n   * @immutable\n   */\n  source?: Source;\n  /**\n   * status.\n   * @readonly\n   */\n  status?: StatusWithLiterals;\n  /**\n   * Order ID.\n   * @format GUID\n   * @immutable\n   */\n  orderId?: string;\n  /**\n   * Order number.\n   * @readonly\n   * @maxLength 100\n   */\n  orderNumber?: string | null;\n  /**\n   * Amount to collect.\n   * > **Note:** The amount can only be set once.\n   * @immutable\n   */\n  amount?: Price;\n  /**\n   * Currency code. The value will always match the currency used in the order.\n   * @format CURRENCY\n   * @readonly\n   */\n  currency?: string;\n  /**\n   * Payment gateway order id which is associated with this payment request\n   * @readonly\n   * @minLength 1\n   * @maxLength 100\n   */\n  paymentGatewayOrderId?: string | null;\n  /**\n   * Title to be displayed to the customer on the payment page. Provide a clear and descriptive title to inform the customer about what they are paying for.\n   * @minLength 1\n   * @maxLength 200\n   */\n  title?: string;\n  /**\n   * Description to be displayed to the customer on the payment page. Write a detailed description so the customer understands what they are paying for.\n   * @maxLength 300\n   */\n  description?: string | null;\n  /**\n   * Time and date the order payment request expires.\n   * @immutable\n   */\n  expirationDate?: Date | null;\n  /** [Extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields) must be configured in the [app dashboard](https://dev.wix.com/dc3/my-apps/) before they can be accessed with API calls. */\n  extendedFields?: ExtendedFields;\n  /**\n   * Date and time the OrderPaymentRequest was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the OrderPaymentRequest was last updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /** Image to display to the customer on the payment page. */\n  image?: string;\n  /**\n   * List of payment methods that can't be used for this order payment request.\n   * @internal\n   * @maxSize 1\n   */\n  blockedPaymentMethods?: PaymentMethodWithLiterals[];\n  /**\n   * A collection of action links (e.g., navigation or error resolution URLs) intended for client-side use.\n   *\n   * These actions are optional and may be conditionally rendered based on the client context.\n   * @internal\n   */\n  actionLinks?: ActionLinks;\n}\n\n/**\n * Deletes a order payment request.\n *\n * Please note that only `UNPAID` and `VOIDED` payment requests can be deleted.\n * @param orderPaymentRequestId - Id of the OrderPaymentRequest to delete.\n * @public\n * @documentationMaturity preview\n * @requiredField orderPaymentRequestId\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_DELETE\n * @applicableIdentity APP\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.DeleteOrderPaymentRequest\n */\nexport async function deleteOrderPaymentRequest(\n  orderPaymentRequestId: string\n): Promise<\n  void & {\n    __applicationErrorsType?: DeleteOrderPaymentRequestApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    orderPaymentRequestId: orderPaymentRequestId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.deleteOrderPaymentRequest(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { orderPaymentRequestId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['orderPaymentRequestId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of Payment Requests, given the provided [paging, filtering, and sorting][1].\n *\n * Query Payment Requests runs with these defaults, which you can override:\n * - `createdDate` is sorted in DESC order\n * - `cursorPaging.limit` is 100\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language), and\n * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n * @public\n * @documentationMaturity preview\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_READ\n * @applicableIdentity APP\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.QueryOrderPaymentRequests\n */\nexport function queryOrderPaymentRequests(): OrderPaymentRequestsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    OrderPaymentRequest,\n    'CURSOR',\n    QueryOrderPaymentRequestsRequest,\n    QueryOrderPaymentRequestsResponse\n  >({\n    func: async (payload: QueryOrderPaymentRequestsRequest) => {\n      const reqOpts =\n        ambassadorWixEcomV1OrderPaymentRequest.queryOrderPaymentRequests(\n          payload\n        );\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryOrderPaymentRequestsRequest['query']) => {\n      const args = [query, {}] as [\n        QueryOrderPaymentRequestsRequest['query'],\n        {}\n      ];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryOrderPaymentRequestsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [\n          {\n            transformFn: transformRESTImageToSDKImage,\n            paths: [{ path: 'orderPaymentRequests.image' }],\n          },\n        ])\n      );\n\n      return {\n        items: transformedData?.orderPaymentRequests,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface OrderPaymentRequestsQueryResult extends QueryCursorResult {\n  items: OrderPaymentRequest[];\n  query: OrderPaymentRequestsQueryBuilder;\n  next: () => Promise<OrderPaymentRequestsQueryResult>;\n  prev: () => Promise<OrderPaymentRequestsQueryResult>;\n}\n\nexport interface OrderPaymentRequestsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'status'\n      | 'orderId'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'status'\n      | 'orderId'\n      | 'orderNumber'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'orderId'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'orderId'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'orderId'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'orderId'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'orderId'\n      | 'orderNumber'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description',\n    value: string\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'status'\n      | 'orderId'\n      | 'orderNumber'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any[]\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'status'\n      | 'orderId'\n      | 'orderNumber'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: any\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName:\n      | '_id'\n      | 'source.appId'\n      | 'source.externalId'\n      | 'status'\n      | 'orderId'\n      | 'orderNumber'\n      | 'paymentGatewayOrderId'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate',\n    value: boolean\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  ascending: (\n    ...propertyNames: Array<\n      | 'status'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate'\n    >\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  descending: (\n    ...propertyNames: Array<\n      | 'status'\n      | 'orderNumber'\n      | 'amount.amount'\n      | 'title'\n      | 'description'\n      | 'expirationDate'\n      | '_createdDate'\n      | '_updatedDate'\n    >\n  ) => OrderPaymentRequestsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => OrderPaymentRequestsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => OrderPaymentRequestsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<OrderPaymentRequestsQueryResult>;\n}\n\n/**\n * Retrieves the order payment request page URL of a specified order payment request.\n * @param orderPaymentRequestId - Order Payment Request ID.\n * @public\n * @documentationMaturity preview\n * @requiredField orderPaymentRequestId\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_READ\n * @applicableIdentity APP\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.GetOrderPaymentRequestURL\n */\nexport async function getOrderPaymentRequestUrl(\n  orderPaymentRequestId: string\n): Promise<\n  NonNullablePaths<\n    GetOrderPaymentRequestURLResponse,\n    `orderPaymentRequestUrl`,\n    2\n  > & {\n    __applicationErrorsType?: GetOrderPaymentRequestUrlApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    orderPaymentRequestId: orderPaymentRequestId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.getOrderPaymentRequestUrl(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { orderPaymentRequestId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['orderPaymentRequestId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates extended fields of a order payment request\n * @param _id - ID of the entity to update.\n * @param namespace - Identifier for the app whose extended fields are being updated.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField namespace\n * @requiredField options\n * @requiredField options.namespaceData\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.UpdateExtendedFields\n */\nexport async function updateExtendedFields(\n  _id: string,\n  namespace: string,\n  options: NonNullablePaths<UpdateExtendedFieldsOptions, `namespaceData`, 2>\n): Promise<\n  NonNullablePaths<\n    UpdateExtendedFieldsResponse,\n    | `orderPaymentRequest.source.externalId`\n    | `orderPaymentRequest.status`\n    | `orderPaymentRequest.orderId`\n    | `orderPaymentRequest.amount.amount`\n    | `orderPaymentRequest.amount.formattedAmount`\n    | `orderPaymentRequest.currency`\n    | `orderPaymentRequest.title`,\n    4\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    id: _id,\n    namespace: namespace,\n    namespaceData: options?.namespaceData,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.updateExtendedFields(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'orderPaymentRequest.image' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          id: '$[0]',\n          namespace: '$[1]',\n          namespaceData: '$[2].namespaceData',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'namespace', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateExtendedFieldsOptions {\n  /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */\n  namespaceData: Record<string, any> | null;\n}\n\n/**\n * Voids the given order payment request\n *\n * Please note that only `UNPAID` payment requests can be voided.\n * @param orderPaymentRequestId - ID of the order payment request to void.\n * @internal\n * @documentationMaturity preview\n * @requiredField orderPaymentRequestId\n * @permissionId ECOM.ORDER_PAYMENT_REQUEST_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.VoidOrderPaymentRequest\n */\nexport async function voidOrderPaymentRequest(\n  orderPaymentRequestId: string\n): Promise<\n  void & {\n    __applicationErrorsType?: VoidOrderPaymentRequestApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    orderPaymentRequestId: orderPaymentRequestId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1OrderPaymentRequest.voidOrderPaymentRequest(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { orderPaymentRequestId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['orderPaymentRequestId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/order-payment-request',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/ecom/v1/order-payment-requests',\n        destPath: '/v1/order-payment-requests',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/order-payment-requests',\n        destPath: '/v1/order-payment-requests',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/ecom/v1/order-payment-requests',\n        destPath: '/v1/order-payment-requests',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/ecom/v1/order-payment-requests',\n        destPath: '/v1/order-payment-requests',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_order-payment-requests';\n\n/** Creates a order payment request. */\nexport function createOrderPaymentRequest(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createOrderPaymentRequest({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'orderPaymentRequest.expirationDate' },\n          { path: 'orderPaymentRequest.createdDate' },\n          { path: 'orderPaymentRequest.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.CreateOrderPaymentRequest',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        { protoPath: '/v1/order-payment-requests', data: serializedData, host }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderPaymentRequest.expirationDate' },\n              { path: 'orderPaymentRequest.createdDate' },\n              { path: 'orderPaymentRequest.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createOrderPaymentRequest;\n}\n\n/** Retrieves a order payment request. */\nexport function getOrderPaymentRequest(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getOrderPaymentRequest({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.GetOrderPaymentRequest',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        {\n          protoPath: '/v1/order-payment-requests/{orderPaymentRequestId}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderPaymentRequest.expirationDate' },\n              { path: 'orderPaymentRequest.createdDate' },\n              { path: 'orderPaymentRequest.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getOrderPaymentRequest;\n}\n\n/**\n * Updates a order payment request.\n *\n * Please note that only `UNPAID` payment requests can be updated.\n */\nexport function updateOrderPaymentRequest(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateOrderPaymentRequest({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'orderPaymentRequest.expirationDate' },\n          { path: 'orderPaymentRequest.createdDate' },\n          { path: 'orderPaymentRequest.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.UpdateOrderPaymentRequest',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        {\n          protoPath: '/v1/order-payment-requests/{orderPaymentRequest.id}',\n          data: serializedData,\n          host,\n        }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderPaymentRequest.expirationDate' },\n              { path: 'orderPaymentRequest.createdDate' },\n              { path: 'orderPaymentRequest.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateOrderPaymentRequest;\n}\n\n/**\n * Deletes a order payment request.\n *\n * Please note that only `UNPAID` and `VOIDED` payment requests can be deleted.\n */\nexport function deleteOrderPaymentRequest(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteOrderPaymentRequest({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'DELETE' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.DeleteOrderPaymentRequest',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        {\n          protoPath: '/v1/order-payment-requests/{orderPaymentRequestId}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteOrderPaymentRequest;\n}\n\n/**\n * Retrieves a list of Payment Requests, given the provided [paging, filtering, and sorting][1].\n *\n * Query Payment Requests runs with these defaults, which you can override:\n * - `createdDate` is sorted in DESC order\n * - `cursorPaging.limit` is 100\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language), and\n * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function queryOrderPaymentRequests(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryOrderPaymentRequests({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.QueryOrderPaymentRequests',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        { protoPath: '/v1/order-payment-requests/query', data: payload, host }\n      ),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderPaymentRequests.expirationDate' },\n              { path: 'orderPaymentRequests.createdDate' },\n              { path: 'orderPaymentRequests.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryOrderPaymentRequests;\n}\n\n/** Retrieves the order payment request page URL of a specified order payment request. */\nexport function getOrderPaymentRequestUrl(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getOrderPaymentRequestUrl({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.GetOrderPaymentRequestURL',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        { protoPath: '/v1/order-payment-requests/url', data: payload, host }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __getOrderPaymentRequestUrl;\n}\n\n/** Updates extended fields of a order payment request */\nexport function updateExtendedFields(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateExtendedFields({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.UpdateExtendedFields',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        {\n          protoPath: '/v1/order-payment-requests/{id}/update-extended-fields',\n          data: payload,\n          host,\n        }\n      ),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderPaymentRequest.expirationDate' },\n              { path: 'orderPaymentRequest.createdDate' },\n              { path: 'orderPaymentRequest.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateExtendedFields;\n}\n\n/**\n * Voids the given order payment request\n *\n * Please note that only `UNPAID` payment requests can be voided.\n */\nexport function voidOrderPaymentRequest(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __voidOrderPaymentRequest({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order_payment_request',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.order_payment_request.api.v1.OrderPaymentRequestsService.VoidOrderPaymentRequest',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrderPaymentRequestApiV1OrderPaymentRequestsServiceUrl(\n        { protoPath: '/v1/order-payment-requests/void', data: payload, host }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __voidOrderPaymentRequest;\n}\n","import { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  CreateOrderPaymentRequestOptions,\n  DeleteOrderPaymentRequestApplicationErrors,\n  GetOrderPaymentRequestApplicationErrors,\n  GetOrderPaymentRequestURLResponse,\n  GetOrderPaymentRequestUrlApplicationErrors,\n  OrderPaymentRequest,\n  OrderPaymentRequestsQueryBuilder,\n  UpdateExtendedFieldsOptions,\n  UpdateExtendedFieldsResponse,\n  UpdateOrderPaymentRequest,\n  UpdateOrderPaymentRequestApplicationErrors,\n  VoidOrderPaymentRequestApplicationErrors,\n  createOrderPaymentRequest as universalCreateOrderPaymentRequest,\n  deleteOrderPaymentRequest as universalDeleteOrderPaymentRequest,\n  getOrderPaymentRequest as universalGetOrderPaymentRequest,\n  getOrderPaymentRequestUrl as universalGetOrderPaymentRequestUrl,\n  queryOrderPaymentRequests as universalQueryOrderPaymentRequests,\n  updateExtendedFields as universalUpdateExtendedFields,\n  updateOrderPaymentRequest as universalUpdateOrderPaymentRequest,\n  voidOrderPaymentRequest as universalVoidOrderPaymentRequest,\n} from './ecom-v1-order-payment-request-order-payment-requests.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/ecom' };\n\nexport function createOrderPaymentRequest(\n  httpClient: HttpClient\n): CreateOrderPaymentRequestSignature {\n  return (\n    options?: NonNullablePaths<\n      CreateOrderPaymentRequestOptions,\n      | `orderPaymentRequest.amount`\n      | `orderPaymentRequest.orderId`\n      | `orderPaymentRequest.title`,\n      3\n    >\n  ) =>\n    universalCreateOrderPaymentRequest(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateOrderPaymentRequestSignature {\n  /**\n   * Creates a order payment request.\n   * @returns The created OrderPaymentRequest.\n   */\n  (\n    options?: NonNullablePaths<\n      CreateOrderPaymentRequestOptions,\n      | `orderPaymentRequest.amount`\n      | `orderPaymentRequest.orderId`\n      | `orderPaymentRequest.title`,\n      3\n    >\n  ): Promise<\n    NonNullablePaths<\n      OrderPaymentRequest,\n      | `source.externalId`\n      | `status`\n      | `orderId`\n      | `amount.amount`\n      | `amount.formattedAmount`\n      | `currency`\n      | `title`,\n      3\n    >\n  >;\n}\n\nexport function getOrderPaymentRequest(\n  httpClient: HttpClient\n): GetOrderPaymentRequestSignature {\n  return (orderPaymentRequestId: string) =>\n    universalGetOrderPaymentRequest(\n      orderPaymentRequestId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetOrderPaymentRequestSignature {\n  /**\n   * Retrieves a order payment request.\n   * @param - ID of the OrderPaymentRequest to retrieve.\n   * @returns The requested OrderPaymentRequest.\n   */\n  (orderPaymentRequestId: string): Promise<\n    NonNullablePaths<\n      OrderPaymentRequest,\n      | `source.externalId`\n      | `status`\n      | `orderId`\n      | `amount.amount`\n      | `amount.formattedAmount`\n      | `currency`\n      | `title`,\n      3\n    > & {\n      __applicationErrorsType?: GetOrderPaymentRequestApplicationErrors;\n    }\n  >;\n}\n\nexport function updateOrderPaymentRequest(\n  httpClient: HttpClient\n): UpdateOrderPaymentRequestSignature {\n  return (_id: string, orderPaymentRequest: UpdateOrderPaymentRequest) =>\n    universalUpdateOrderPaymentRequest(\n      _id,\n      orderPaymentRequest,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateOrderPaymentRequestSignature {\n  /**\n   * Updates a order payment request.\n   *\n   * Please note that only `UNPAID` payment requests can be updated.\n   * @param - Order payment request ID.\n   * @returns Updated OrderPaymentRequest.\n   */\n  (_id: string, orderPaymentRequest: UpdateOrderPaymentRequest): Promise<\n    NonNullablePaths<\n      OrderPaymentRequest,\n      | `source.externalId`\n      | `status`\n      | `orderId`\n      | `amount.amount`\n      | `amount.formattedAmount`\n      | `currency`\n      | `title`,\n      3\n    > & {\n      __applicationErrorsType?: UpdateOrderPaymentRequestApplicationErrors;\n    }\n  >;\n}\n\nexport function deleteOrderPaymentRequest(\n  httpClient: HttpClient\n): DeleteOrderPaymentRequestSignature {\n  return (orderPaymentRequestId: string) =>\n    universalDeleteOrderPaymentRequest(\n      orderPaymentRequestId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteOrderPaymentRequestSignature {\n  /**\n   * Deletes a order payment request.\n   *\n   * Please note that only `UNPAID` and `VOIDED` payment requests can be deleted.\n   * @param - Id of the OrderPaymentRequest to delete.\n   */\n  (orderPaymentRequestId: string): Promise<\n    void & {\n      __applicationErrorsType?: DeleteOrderPaymentRequestApplicationErrors;\n    }\n  >;\n}\n\nexport function queryOrderPaymentRequests(\n  httpClient: HttpClient\n): QueryOrderPaymentRequestsSignature {\n  return () =>\n    universalQueryOrderPaymentRequests(\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryOrderPaymentRequestsSignature {\n  /**\n   * Retrieves a list of Payment Requests, given the provided [paging, filtering, and sorting][1].\n   *\n   * Query Payment Requests runs with these defaults, which you can override:\n   * - `createdDate` is sorted in DESC order\n   * - `cursorPaging.limit` is 100\n   *\n   * To learn about working with _Query_ endpoints, see\n   * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language), and\n   * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  (): OrderPaymentRequestsQueryBuilder;\n}\n\nexport function getOrderPaymentRequestUrl(\n  httpClient: HttpClient\n): GetOrderPaymentRequestUrlSignature {\n  return (orderPaymentRequestId: string) =>\n    universalGetOrderPaymentRequestUrl(\n      orderPaymentRequestId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetOrderPaymentRequestUrlSignature {\n  /**\n   * Retrieves the order payment request page URL of a specified order payment request.\n   * @param - Order Payment Request ID.\n   */\n  (orderPaymentRequestId: string): Promise<\n    NonNullablePaths<\n      GetOrderPaymentRequestURLResponse,\n      `orderPaymentRequestUrl`,\n      2\n    > & {\n      __applicationErrorsType?: GetOrderPaymentRequestUrlApplicationErrors;\n    }\n  >;\n}\n\nexport function updateExtendedFields(\n  httpClient: HttpClient\n): UpdateExtendedFieldsSignature {\n  return (\n    _id: string,\n    namespace: string,\n    options: NonNullablePaths<UpdateExtendedFieldsOptions, `namespaceData`, 2>\n  ) =>\n    universalUpdateExtendedFields(\n      _id,\n      namespace,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateExtendedFieldsSignature {\n  /**\n   * Updates extended fields of a order payment request\n   * @param - ID of the entity to update.\n   * @param - Identifier for the app whose extended fields are being updated.\n   */\n  (\n    _id: string,\n    namespace: string,\n    options: NonNullablePaths<UpdateExtendedFieldsOptions, `namespaceData`, 2>\n  ): Promise<\n    NonNullablePaths<\n      UpdateExtendedFieldsResponse,\n      | `orderPaymentRequest.source.externalId`\n      | `orderPaymentRequest.status`\n      | `orderPaymentRequest.orderId`\n      | `orderPaymentRequest.amount.amount`\n      | `orderPaymentRequest.amount.formattedAmount`\n      | `orderPaymentRequest.currency`\n      | `orderPaymentRequest.title`,\n      4\n    >\n  >;\n}\n\n/** @internal */\nexport function voidOrderPaymentRequest(\n  httpClient: HttpClient\n): VoidOrderPaymentRequestSignature {\n  return (orderPaymentRequestId: string) =>\n    universalVoidOrderPaymentRequest(\n      orderPaymentRequestId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface VoidOrderPaymentRequestSignature {\n  /**\n   * Voids the given order payment request\n   *\n   * Please note that only `UNPAID` payment requests can be voided.\n   * @param - ID of the order payment request to void.\n   */\n  (orderPaymentRequestId: string): Promise<\n    void & {\n      __applicationErrorsType?: VoidOrderPaymentRequestApplicationErrors;\n    }\n  >;\n}\n\nexport {\n  ActionEvent,\n  ActionLink,\n  ActionLinks,\n  CreateOrderPaymentRequestOptions,\n  CreateOrderPaymentRequestRequest,\n  CreateOrderPaymentRequestResponse,\n  CursorPaging,\n  CursorPagingMetadata,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Cursors,\n  DeleteOrderPaymentRequestRequest,\n  DeleteOrderPaymentRequestResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  ExtendedFields,\n  GetOrderPaymentRequestRequest,\n  GetOrderPaymentRequestResponse,\n  GetOrderPaymentRequestURLRequest,\n  GetOrderPaymentRequestURLResponse,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  MessageEnvelope,\n  OrderPaymentRequest,\n  OrderPaymentRequestExpired,\n  OrderPaymentRequestPaid,\n  OrderPaymentRequestVoided,\n  OrderPaymentRequestsQueryBuilder,\n  OrderPaymentRequestsQueryResult,\n  PaymentMethod,\n  Price,\n  QueryOrderPaymentRequestsRequest,\n  QueryOrderPaymentRequestsResponse,\n  RestoreInfo,\n  SortOrder,\n  Sorting,\n  Source,\n  Status,\n  UpdateExtendedFieldsOptions,\n  UpdateExtendedFieldsRequest,\n  UpdateExtendedFieldsResponse,\n  UpdateOrderPaymentRequest,\n  UpdateOrderPaymentRequestRequest,\n  UpdateOrderPaymentRequestResponse,\n  VoidOrderPaymentRequestRequest,\n  VoidOrderPaymentRequestResponse,\n  WebhookIdentityType,\n} from './ecom-v1-order-payment-request-order-payment-requests.universal.js';\n","import {\n  createOrderPaymentRequest as publicCreateOrderPaymentRequest,\n  getOrderPaymentRequest as publicGetOrderPaymentRequest,\n  updateOrderPaymentRequest as publicUpdateOrderPaymentRequest,\n  deleteOrderPaymentRequest as publicDeleteOrderPaymentRequest,\n  queryOrderPaymentRequests as publicQueryOrderPaymentRequests,\n  getOrderPaymentRequestUrl as publicGetOrderPaymentRequestUrl,\n  updateExtendedFields as publicUpdateExtendedFields,\n  voidOrderPaymentRequest as publicVoidOrderPaymentRequest,\n} from './ecom-v1-order-payment-request-order-payment-requests.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';\n\nexport const createOrderPaymentRequest: MaybeContext<\n  BuildRESTFunction<typeof publicCreateOrderPaymentRequest> &\n    typeof publicCreateOrderPaymentRequest\n> = /*#__PURE__*/ createRESTModule(publicCreateOrderPaymentRequest);\nexport const getOrderPaymentRequest: MaybeContext<\n  BuildRESTFunction<typeof publicGetOrderPaymentRequest> &\n    typeof publicGetOrderPaymentRequest\n> = /*#__PURE__*/ createRESTModule(publicGetOrderPaymentRequest);\nexport const updateOrderPaymentRequest: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateOrderPaymentRequest> &\n    typeof publicUpdateOrderPaymentRequest\n> = /*#__PURE__*/ createRESTModule(publicUpdateOrderPaymentRequest);\nexport const deleteOrderPaymentRequest: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteOrderPaymentRequest> &\n    typeof publicDeleteOrderPaymentRequest\n> = /*#__PURE__*/ createRESTModule(publicDeleteOrderPaymentRequest);\nexport const queryOrderPaymentRequests: MaybeContext<\n  BuildRESTFunction<typeof publicQueryOrderPaymentRequests> &\n    typeof publicQueryOrderPaymentRequests\n> = /*#__PURE__*/ createRESTModule(publicQueryOrderPaymentRequests);\nexport const getOrderPaymentRequestUrl: MaybeContext<\n  BuildRESTFunction<typeof publicGetOrderPaymentRequestUrl> &\n    typeof publicGetOrderPaymentRequestUrl\n> = /*#__PURE__*/ createRESTModule(publicGetOrderPaymentRequestUrl);\nexport const updateExtendedFields: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateExtendedFields> &\n    typeof publicUpdateExtendedFields\n> = /*#__PURE__*/ createRESTModule(publicUpdateExtendedFields);\n/** @internal */\nexport const voidOrderPaymentRequest: MaybeContext<\n  BuildRESTFunction<typeof publicVoidOrderPaymentRequest> &\n    typeof publicVoidOrderPaymentRequest\n> = /*#__PURE__*/ createRESTModule(publicVoidOrderPaymentRequest);\n\nexport {\n  Status,\n  PaymentMethod,\n  SortOrder,\n  WebhookIdentityType,\n} from './ecom-v1-order-payment-request-order-payment-requests.universal.js';\nexport {\n  OrderPaymentRequest,\n  Source,\n  Price,\n  ExtendedFields,\n  ActionLinks,\n  ActionLink,\n  OrderPaymentRequestPaid,\n  OrderPaymentRequestExpired,\n  OrderPaymentRequestVoided,\n  CreateOrderPaymentRequestRequest,\n  CreateOrderPaymentRequestResponse,\n  GetOrderPaymentRequestRequest,\n  GetOrderPaymentRequestResponse,\n  UpdateOrderPaymentRequestRequest,\n  UpdateOrderPaymentRequestResponse,\n  DeleteOrderPaymentRequestRequest,\n  DeleteOrderPaymentRequestResponse,\n  QueryOrderPaymentRequestsRequest,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Sorting,\n  CursorPaging,\n  QueryOrderPaymentRequestsResponse,\n  CursorPagingMetadata,\n  Cursors,\n  GetOrderPaymentRequestURLRequest,\n  GetOrderPaymentRequestURLResponse,\n  UpdateExtendedFieldsRequest,\n  UpdateExtendedFieldsResponse,\n  VoidOrderPaymentRequestRequest,\n  VoidOrderPaymentRequestResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  CreateOrderPaymentRequestOptions,\n  UpdateOrderPaymentRequest,\n  OrderPaymentRequestsQueryResult,\n  OrderPaymentRequestsQueryBuilder,\n  UpdateExtendedFieldsOptions,\n} from './ecom-v1-order-payment-request-order-payment-requests.universal.js';\nexport {\n  StatusWithLiterals,\n  PaymentMethodWithLiterals,\n  SortOrderWithLiterals,\n  WebhookIdentityTypeWithLiterals,\n  GetOrderPaymentRequestApplicationErrors,\n  UpdateOrderPaymentRequestApplicationErrors,\n  DeleteOrderPaymentRequestApplicationErrors,\n  GetOrderPaymentRequestUrlApplicationErrors,\n  VoidOrderPaymentRequestApplicationErrors,\n} from './ecom-v1-order-payment-request-order-payment-requests.universal.js';\n"],"mappings":"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","names":["payload","transformPaths","Status","PaymentMethod","SortOrder","WebhookIdentityType","createOrderPaymentRequest","getOrderPaymentRequest","updateOrderPaymentRequest","deleteOrderPaymentRequest","queryOrderPaymentRequests","getOrderPaymentRequestUrl","updateExtendedFields","voidOrderPaymentRequest","createOrderPaymentRequest","getOrderPaymentRequest","updateOrderPaymentRequest","deleteOrderPaymentRequest","queryOrderPaymentRequests","getOrderPaymentRequestUrl","updateExtendedFields","voidOrderPaymentRequest","createOrderPaymentRequest","getOrderPaymentRequest","updateOrderPaymentRequest","deleteOrderPaymentRequest","queryOrderPaymentRequests","getOrderPaymentRequestUrl","updateExtendedFields","voidOrderPaymentRequest"]}