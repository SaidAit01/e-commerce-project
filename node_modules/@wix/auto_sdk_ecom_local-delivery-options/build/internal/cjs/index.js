"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var index_exports = {};
__export(index_exports, {
  ConditionType: () => ConditionType,
  DayOfWeek: () => DayOfWeek,
  LengthUnit: () => LengthUnit,
  LogicalOperator: () => LogicalOperator,
  SortOrder: () => SortOrder,
  WebhookIdentityType: () => WebhookIdentityType,
  addDeliveryRegion: () => addDeliveryRegion4,
  bulkCreateLocalDeliveryOption: () => bulkCreateLocalDeliveryOption4,
  bulkDeleteLocalDeliveryOption: () => bulkDeleteLocalDeliveryOption4,
  bulkUpdateLocalDeliveryOption: () => bulkUpdateLocalDeliveryOption4,
  createLocalDeliveryOption: () => createLocalDeliveryOption4,
  deleteLocalDeliveryOption: () => deleteLocalDeliveryOption4,
  getLocalDeliveryOption: () => getLocalDeliveryOption4,
  listLocalDeliveryOptions: () => listLocalDeliveryOptions4,
  queryLocalDeliveryOptions: () => queryLocalDeliveryOptions4,
  removeDeliveryRegion: () => removeDeliveryRegion4,
  updateLocalDeliveryOption: () => updateLocalDeliveryOption4
});
module.exports = __toCommonJS(index_exports);

// src/ecom-v1-local-delivery-option-local-delivery-options.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_query_builder = require("@wix/sdk-runtime/query-builder");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/ecom-v1-local-delivery-option-local-delivery-options.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/wix-ecommerce-shipments-local-delivery-web",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v1/localDeliveryOptions",
        destPath: "/v1/localDeliveryOptions"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/local-delivery-server",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/local-delivery-server",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_local-delivery-options";
function createLocalDeliveryOption(payload) {
  function __createLocalDeliveryOption({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
          { path: "localDeliveryOption.radiusConfig.address.geocode.latitude" },
          {
            path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
          },
          { path: "localDeliveryOption.customAreaConfig.geocodes.latitude" },
          { path: "localDeliveryOption.customAreaConfig.geocodes.longitude" },
          { path: "localDeliveryOption.radiusConfig.radius" }
        ]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "localDeliveryOption.createdDate" },
          { path: "localDeliveryOption.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "POST",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.CreateLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOption.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOption.createdDate" },
            { path: "localDeliveryOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createLocalDeliveryOption;
}
function getLocalDeliveryOption(payload) {
  function __getLocalDeliveryOption({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "GET",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.GetLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options/{localDeliveryOptionId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOption.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOption.createdDate" },
            { path: "localDeliveryOption.updatedDate" }
          ]
        }
      ]),
      fallback: [
        {
          method: "GET",
          url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
            protoPath: "/v1/local-delivery-options/{localDeliveryOptionId}",
            data: payload,
            host
          }),
          params: (0, import_rest_modules.toURLSearchParams)(payload)
        }
      ]
    };
    return metadata;
  }
  return __getLocalDeliveryOption;
}
function listLocalDeliveryOptions(payload) {
  function __listLocalDeliveryOptions({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "GET",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.ListLocalDeliveryOptions",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/localDeliveryOptions",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOptions.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOptions.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOptions.createdDate" },
            { path: "localDeliveryOptions.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listLocalDeliveryOptions;
}
function queryLocalDeliveryOptions(payload) {
  function __queryLocalDeliveryOptions({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "POST",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.QueryLocalDeliveryOptions",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOptions.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOptions.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOptions.createdDate" },
            { path: "localDeliveryOptions.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryLocalDeliveryOptions;
}
function updateLocalDeliveryOption(payload) {
  function __updateLocalDeliveryOption({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
          { path: "localDeliveryOption.radiusConfig.address.geocode.latitude" },
          {
            path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
          },
          { path: "localDeliveryOption.customAreaConfig.geocodes.latitude" },
          { path: "localDeliveryOption.customAreaConfig.geocodes.longitude" },
          { path: "localDeliveryOption.radiusConfig.radius" }
        ]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "localDeliveryOption.createdDate" },
          { path: "localDeliveryOption.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "PATCH",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.UpdateLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options/{localDeliveryOption.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOption.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOption.createdDate" },
            { path: "localDeliveryOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateLocalDeliveryOption;
}
function deleteLocalDeliveryOption(payload) {
  function __deleteLocalDeliveryOption({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "DELETE",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.DeleteLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options/{localDeliveryOptionId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteLocalDeliveryOption;
}
function bulkCreateLocalDeliveryOption(payload) {
  function __bulkCreateLocalDeliveryOption({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "localDeliveryOptions.minimumFreeDeliveryOrderAmount" },
          {
            path: "localDeliveryOptions.radiusConfig.address.geocode.latitude"
          },
          {
            path: "localDeliveryOptions.radiusConfig.address.geocode.longitude"
          },
          { path: "localDeliveryOptions.customAreaConfig.geocodes.latitude" },
          { path: "localDeliveryOptions.customAreaConfig.geocodes.longitude" },
          { path: "localDeliveryOptions.radiusConfig.radius" }
        ]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "localDeliveryOptions.createdDate" },
          { path: "localDeliveryOptions.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "POST",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.BulkCreateLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/bulk/local-delivery-options/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOptions.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOptions.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOptions.createdDate" },
            { path: "localDeliveryOptions.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateLocalDeliveryOption;
}
function bulkUpdateLocalDeliveryOption(payload) {
  function __bulkUpdateLocalDeliveryOption({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "localDeliveryOptions.minimumFreeDeliveryOrderAmount" },
          {
            path: "localDeliveryOptions.radiusConfig.address.geocode.latitude"
          },
          {
            path: "localDeliveryOptions.radiusConfig.address.geocode.longitude"
          },
          { path: "localDeliveryOptions.customAreaConfig.geocodes.latitude" },
          { path: "localDeliveryOptions.customAreaConfig.geocodes.longitude" },
          { path: "localDeliveryOptions.radiusConfig.radius" }
        ]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "localDeliveryOptions.createdDate" },
          { path: "localDeliveryOptions.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "PATCH",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.BulkUpdateLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/bulk/local-delivery-options/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOptions.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOptions.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOptions.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOptions.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOptions.createdDate" },
            { path: "localDeliveryOptions.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateLocalDeliveryOption;
}
function bulkDeleteLocalDeliveryOption(payload) {
  function __bulkDeleteLocalDeliveryOption({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "DELETE",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.BulkDeleteLocalDeliveryOption",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/bulk/local-delivery-options/delete",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __bulkDeleteLocalDeliveryOption;
}
function addDeliveryRegion(payload) {
  function __addDeliveryRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "POST",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.AddDeliveryRegion",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options/add-delivery-region",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOption.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOption.createdDate" },
            { path: "localDeliveryOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addDeliveryRegion;
}
function removeDeliveryRegion(payload) {
  function __removeDeliveryRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.local_delivery_option",
      method: "POST",
      methodFqn: "com.wix.ecom.shipments.localdelivery.LocalDelivery.RemoveDeliveryRegion",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomShipmentsLocaldeliveryLocalDeliveryUrl({
        protoPath: "/v1/local-delivery-options/remove-delivery-region",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "localDeliveryOption.minimumFreeDeliveryOrderAmount" },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.latitude"
            },
            {
              path: "localDeliveryOption.radiusConfig.address.geocode.longitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.latitude"
            },
            {
              path: "localDeliveryOption.customAreaConfig.geocodes.longitude"
            },
            { path: "localDeliveryOption.radiusConfig.radius" }
          ]
        },
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "localDeliveryOption.createdDate" },
            { path: "localDeliveryOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeDeliveryRegion;
}

// src/ecom-v1-local-delivery-option-local-delivery-options.universal.ts
var import_address = require("@wix/sdk-runtime/transformations/address");
var import_address2 = require("@wix/sdk-runtime/transformations/address");
var import_transform_paths2 = require("@wix/sdk-runtime/transformations/transform-paths");
var LengthUnit = /* @__PURE__ */ ((LengthUnit2) => {
  LengthUnit2["UNSPECIFIED_LENGTH_UNIT"] = "UNSPECIFIED_LENGTH_UNIT";
  LengthUnit2["KM"] = "KM";
  LengthUnit2["MI"] = "MI";
  return LengthUnit2;
})(LengthUnit || {});
var DayOfWeek = /* @__PURE__ */ ((DayOfWeek2) => {
  DayOfWeek2["MON"] = "MON";
  DayOfWeek2["TUE"] = "TUE";
  DayOfWeek2["WED"] = "WED";
  DayOfWeek2["THU"] = "THU";
  DayOfWeek2["FRI"] = "FRI";
  DayOfWeek2["SAT"] = "SAT";
  DayOfWeek2["SUN"] = "SUN";
  return DayOfWeek2;
})(DayOfWeek || {});
var ConditionType = /* @__PURE__ */ ((ConditionType2) => {
  ConditionType2["UNKNOWN_TYPE"] = "UNKNOWN_TYPE";
  ConditionType2["BY_TOTAL_WEIGHT"] = "BY_TOTAL_WEIGHT";
  ConditionType2["BY_TOTAL_PRICE"] = "BY_TOTAL_PRICE";
  ConditionType2["BY_TOTAL_QUANTITY"] = "BY_TOTAL_QUANTITY";
  return ConditionType2;
})(ConditionType || {});
var LogicalOperator = /* @__PURE__ */ ((LogicalOperator2) => {
  LogicalOperator2["UNKNOWN_LOGICAL_OPERATOR_TYPE"] = "UNKNOWN_LOGICAL_OPERATOR_TYPE";
  LogicalOperator2["EQ"] = "EQ";
  LogicalOperator2["GT"] = "GT";
  LogicalOperator2["GTE"] = "GTE";
  LogicalOperator2["LT"] = "LT";
  LogicalOperator2["LTE"] = "LTE";
  return LogicalOperator2;
})(LogicalOperator || {});
var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "ASC";
  SortOrder2["DESC"] = "DESC";
  return SortOrder2;
})(SortOrder || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function createLocalDeliveryOption2(localDeliveryOption) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_transform_paths2.transformPaths)(
    (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
      localDeliveryOption
    }),
    [
      {
        transformFn: import_address.transformSDKAddressToRESTAddress,
        paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
      }
    ]
  );
  const reqOpts = createLocalDeliveryOption(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
        }
      ])
    )?.localDeliveryOption;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { localDeliveryOption: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["localDeliveryOption"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function getLocalDeliveryOption2(localDeliveryOptionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    localDeliveryOptionId,
    id: options?._id
  });
  const reqOpts = getLocalDeliveryOption(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
        }
      ])
    )?.localDeliveryOption;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          localDeliveryOptionId: "$[0]",
          id: "$[1]._id"
        },
        singleArgumentUnchanged: false
      },
      ["localDeliveryOptionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listLocalDeliveryOptions2(externalId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    externalId
  });
  const reqOpts = listLocalDeliveryOptions(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOptions.radiusConfig.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { externalId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["externalId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
function queryLocalDeliveryOptions2() {
  const { httpClient, sideEffects } = arguments[0];
  return (0, import_query_builder.queryBuilder)({
    func: async (payload) => {
      const reqOpts = queryLocalDeliveryOptions(
        payload
      );
      sideEffects?.onSiteCall?.();
      try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return result;
      } catch (err) {
        sideEffects?.onError?.(err);
        throw err;
      }
    },
    requestTransformer: (query) => {
      const args = [query, {}];
      return (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
        ...args?.[1],
        query: args?.[0]
      });
    },
    responseTransformer: ({
      data
    }) => {
      const transformedData = (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
        (0, import_transform_paths2.transformPaths)(data, [
          {
            transformFn: import_address2.transformRESTAddressToSDKAddress,
            paths: [{ path: "localDeliveryOptions.radiusConfig.address" }]
          }
        ])
      );
      return {
        items: transformedData?.localDeliveryOptions,
        pagingMetadata: transformedData?.pagingMetadata
      };
    },
    errorTransformer: (err) => {
      const transformedError = (0, import_transform_error.transformError)(err, {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { query: "$[0]" },
        singleArgumentUnchanged: false
      });
      throw transformedError;
    },
    pagingMethod: "CURSOR",
    transformationPaths: {}
  });
}
async function updateLocalDeliveryOption2(_id, localDeliveryOption) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_transform_paths2.transformPaths)(
    (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
      localDeliveryOption: { ...localDeliveryOption, id: _id }
    }),
    [
      {
        transformFn: import_address.transformSDKAddressToRESTAddress,
        paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
      }
    ]
  );
  const reqOpts = updateLocalDeliveryOption(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
        }
      ])
    )?.localDeliveryOption;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: { localDeliveryOption: "$[1]" },
        explicitPathsToArguments: { "localDeliveryOption.id": "$[0]" },
        singleArgumentUnchanged: false
      },
      ["_id", "localDeliveryOption"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteLocalDeliveryOption2(localDeliveryOptionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    localDeliveryOptionId,
    id: options?._id
  });
  const reqOpts = deleteLocalDeliveryOption(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          localDeliveryOptionId: "$[0]",
          id: "$[1]._id"
        },
        singleArgumentUnchanged: false
      },
      ["localDeliveryOptionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function bulkCreateLocalDeliveryOption2(localDeliveryOptions) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_transform_paths2.transformPaths)(
    (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
      localDeliveryOptions
    }),
    [
      {
        transformFn: import_address.transformSDKAddressToRESTAddress,
        paths: [{ path: "localDeliveryOptions.radiusConfig.address" }]
      }
    ]
  );
  const reqOpts = bulkCreateLocalDeliveryOption(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOptions.radiusConfig.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { localDeliveryOptions: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["localDeliveryOptions"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function bulkUpdateLocalDeliveryOption2(localDeliveryOptions) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_transform_paths2.transformPaths)(
    (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
      localDeliveryOptions
    }),
    [
      {
        transformFn: import_address.transformSDKAddressToRESTAddress,
        paths: [{ path: "localDeliveryOptions.radiusConfig.address" }]
      }
    ]
  );
  const reqOpts = bulkUpdateLocalDeliveryOption(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOptions.radiusConfig.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { localDeliveryOptions: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["localDeliveryOptions"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function bulkDeleteLocalDeliveryOption2(ids) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({ ids });
  const reqOpts = bulkDeleteLocalDeliveryOption(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { ids: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["ids"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function addDeliveryRegion2(deliveryRegionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    deliveryRegionId,
    localDeliveryOptionId: options?.localDeliveryOptionId,
    revision: options?.revision
  });
  const reqOpts = addDeliveryRegion(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          deliveryRegionId: "$[0]",
          localDeliveryOptionId: "$[1].localDeliveryOptionId",
          revision: "$[1].revision"
        },
        singleArgumentUnchanged: false
      },
      ["deliveryRegionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function removeDeliveryRegion2(deliveryRegionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    deliveryRegionId,
    localDeliveryOptionId: options?.localDeliveryOptionId,
    revision: options?.revision
  });
  const reqOpts = removeDeliveryRegion(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "localDeliveryOption.radiusConfig.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          deliveryRegionId: "$[0]",
          localDeliveryOptionId: "$[1].localDeliveryOptionId",
          revision: "$[1].revision"
        },
        singleArgumentUnchanged: false
      },
      ["deliveryRegionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/ecom-v1-local-delivery-option-local-delivery-options.public.ts
function createLocalDeliveryOption3(httpClient) {
  return (localDeliveryOption) => createLocalDeliveryOption2(
    localDeliveryOption,
    // @ts-ignore
    { httpClient }
  );
}
function getLocalDeliveryOption3(httpClient) {
  return (localDeliveryOptionId, options) => getLocalDeliveryOption2(
    localDeliveryOptionId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listLocalDeliveryOptions3(httpClient) {
  return (externalId) => listLocalDeliveryOptions2(
    externalId,
    // @ts-ignore
    { httpClient }
  );
}
function queryLocalDeliveryOptions3(httpClient) {
  return () => queryLocalDeliveryOptions2(
    // @ts-ignore
    { httpClient }
  );
}
function updateLocalDeliveryOption3(httpClient) {
  return (_id, localDeliveryOption) => updateLocalDeliveryOption2(
    _id,
    localDeliveryOption,
    // @ts-ignore
    { httpClient }
  );
}
function deleteLocalDeliveryOption3(httpClient) {
  return (localDeliveryOptionId, options) => deleteLocalDeliveryOption2(
    localDeliveryOptionId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function bulkCreateLocalDeliveryOption3(httpClient) {
  return (localDeliveryOptions) => bulkCreateLocalDeliveryOption2(
    localDeliveryOptions,
    // @ts-ignore
    { httpClient }
  );
}
function bulkUpdateLocalDeliveryOption3(httpClient) {
  return (localDeliveryOptions) => bulkUpdateLocalDeliveryOption2(
    localDeliveryOptions,
    // @ts-ignore
    { httpClient }
  );
}
function bulkDeleteLocalDeliveryOption3(httpClient) {
  return (ids) => bulkDeleteLocalDeliveryOption2(
    ids,
    // @ts-ignore
    { httpClient }
  );
}
function addDeliveryRegion3(httpClient) {
  return (deliveryRegionId, options) => addDeliveryRegion2(
    deliveryRegionId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function removeDeliveryRegion3(httpClient) {
  return (deliveryRegionId, options) => removeDeliveryRegion2(
    deliveryRegionId,
    options,
    // @ts-ignore
    { httpClient }
  );
}

// src/ecom-v1-local-delivery-option-local-delivery-options.context.ts
var import_rest_modules3 = require("@wix/sdk-runtime/rest-modules");
var createLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(createLocalDeliveryOption3);
var getLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(getLocalDeliveryOption3);
var listLocalDeliveryOptions4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(listLocalDeliveryOptions3);
var queryLocalDeliveryOptions4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(queryLocalDeliveryOptions3);
var updateLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(updateLocalDeliveryOption3);
var deleteLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(deleteLocalDeliveryOption3);
var bulkCreateLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(bulkCreateLocalDeliveryOption3);
var bulkUpdateLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(bulkUpdateLocalDeliveryOption3);
var bulkDeleteLocalDeliveryOption4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(bulkDeleteLocalDeliveryOption3);
var addDeliveryRegion4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(addDeliveryRegion3);
var removeDeliveryRegion4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(removeDeliveryRegion3);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ConditionType,
  DayOfWeek,
  LengthUnit,
  LogicalOperator,
  SortOrder,
  WebhookIdentityType,
  addDeliveryRegion,
  bulkCreateLocalDeliveryOption,
  bulkDeleteLocalDeliveryOption,
  bulkUpdateLocalDeliveryOption,
  createLocalDeliveryOption,
  deleteLocalDeliveryOption,
  getLocalDeliveryOption,
  listLocalDeliveryOptions,
  queryLocalDeliveryOptions,
  removeDeliveryRegion,
  updateLocalDeliveryOption
});
//# sourceMappingURL=index.js.map