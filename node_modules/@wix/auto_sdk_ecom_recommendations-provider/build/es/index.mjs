// src/service-plugins-types.ts
var AlgorithmType = /* @__PURE__ */ ((AlgorithmType2) => {
  AlgorithmType2["UNSPECIFIED"] = "UNSPECIFIED";
  AlgorithmType2["RELATED_ITEMS"] = "RELATED_ITEMS";
  AlgorithmType2["GLOBAL"] = "GLOBAL";
  return AlgorithmType2;
})(AlgorithmType || {});
var IdentityType = /* @__PURE__ */ ((IdentityType2) => {
  IdentityType2["UNKNOWN"] = "UNKNOWN";
  IdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  IdentityType2["MEMBER"] = "MEMBER";
  IdentityType2["WIX_USER"] = "WIX_USER";
  IdentityType2["APP"] = "APP";
  return IdentityType2;
})(IdentityType || {});

// src/interfaces-ecom-v1-recommendations-provider.public.ts
import { ServicePluginDefinition } from "@wix/sdk-types";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";
var provideHandlers = ServicePluginDefinition("ECOM_RECOMMENDATIONS_PROVIDER", [
  {
    name: "getRecommendations",
    primaryHttpMappingPath: "/v1/get-recommendations",
    transformations: {
      toREST: (payload) => {
        const toRestResponse = payload;
        return renameKeysFromSDKRequestToRESTRequest(toRestResponse);
      },
      fromREST: (payload) => {
        const fromRestRequest = payload;
        return renameKeysFromRESTResponseToSDKResponse(fromRestRequest);
      }
    }
  }
]);

// src/interfaces-ecom-v1-recommendations-provider.context.ts
import { createServicePluginModule } from "@wix/sdk-runtime/service-plugin-modules";
var provideHandlers2 = createServicePluginModule(
  provideHandlers
);

// src/service-plugins-error-classes.ts
var AlgorithmNotSupportedWixError = class extends Error {
  constructor(data = {}) {
    super("AlgorithmNotSupportedError");
    this.httpCode = 400;
    this.statusCode = "INVALID_ARGUMENT";
    this.applicationCode = "ALGORITHM_NOT_SUPPORTED";
    this.name = "AlgorithmNotSupportedError";
    this.errorSchemaName = "com.wix.ecom.recommendations.spi.RecommendationAlgorithmNotSupported";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "AlgorithmNotSupportedError",
      applicationCode: "ALGORITHM_NOT_SUPPORTED"
    };
    this.data = data;
  }
};
/** @hidden */
AlgorithmNotSupportedWixError.__type = "wix_spi_error";
var ItemAppIdNotSupportedWixError = class extends Error {
  constructor(data = {}) {
    super("ItemAppIdNotSupportedError");
    this.httpCode = 400;
    this.statusCode = "INVALID_ARGUMENT";
    this.applicationCode = "ITEM_APP_ID_NOT_SUPPORTED";
    this.name = "ItemAppIdNotSupportedError";
    this.errorSchemaName = "com.wix.ecom.recommendations.spi.ItemAppIdNotSupportedError";
    this.errorType = "SPI";
    this.spiErrorData = {
      name: "ItemAppIdNotSupportedError",
      applicationCode: "ITEM_APP_ID_NOT_SUPPORTED"
    };
    this.data = data;
  }
};
/** @hidden */
ItemAppIdNotSupportedWixError.__type = "wix_spi_error";
export {
  AlgorithmNotSupportedWixError,
  AlgorithmType,
  IdentityType,
  ItemAppIdNotSupportedWixError,
  provideHandlers2 as provideHandlers,
  provideHandlers as publicProvideHandlers
};
//# sourceMappingURL=index.mjs.map