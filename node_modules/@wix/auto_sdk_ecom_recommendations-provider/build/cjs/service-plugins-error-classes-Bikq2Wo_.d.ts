import { ServicePluginDefinition } from '@wix/sdk-types';

/** additional information can be passed via aspects, for example GEO */
interface GetRecommendationsRequest {
    /**
     * The set of items used by algorithms with the `RELATED_ITEMS` `algorithmType` to determine related item recommendations.
     * @maxSize 300
     */
    items?: CatalogReference[];
    /**
     * List of algorithms used to find recommended items. Items will be returned in a separate object for each algorithm
     * @minSize 1
     * @maxSize 10
     * @format GUID
     */
    algorithmIds?: string[];
}
/** Used for grouping line items. Sent when an item is added to a cart, checkout, or order. */
interface CatalogReference {
    /**
     * ID of the item within the catalog it belongs to.
     * @minLength 1
     * @maxLength 36
     */
    catalogItemId?: string;
    /**
     * ID of the app providing the catalog.
     *
     * You can get your app's ID from its page in the [app dashboard](https://dev.wix.com/dc3/my-apps/).
     *
     * For items from Wix catalogs, the following values always apply:
     * + Wix Stores: `"215238eb-22a5-4c36-9e7b-e7c08025e04e"`
     * + Wix Bookings: `"13d21c63-b5ec-5912-8397-c3a5ddb27a97"`
     * + Wix Restaurants: `"9a5d83fd-8570-482e-81ab-cfa88942ee60"`
     * @minLength 1
     */
    appId?: string;
    /**
     * Additional item details in key:value pairs. Use this optional field to provide more specificity with item selection. The `options` field values differ depending on which catalog is providing the items.
     *
     * For products and variants from a Wix Stores catalog, learn more about eCommerce integration ([SDK](https://dev.wix.com/docs/sdk/backend-modules/stores/catalog-v3/e-commerce-integration) | [REST](https://dev.wix.com/docs/rest/business-solutions/stores/catalog/e-commerce-integration)).
     */
    options?: Record<string, any> | null;
}
interface GetRecommendationsResponse {
    /**
     * Related items returned by each algorithm.
     *
     * Each object in the array contains an `algorithmId` and a list of the item recommendations provided by that algorithm.
     * @maxSize 10
     */
    recommendationPerAlgorithm?: RecommendationForAlgorithm[];
}
interface RecommendationForAlgorithm {
    /**
     * Id of the algorithm that provided the recommendation.
     * @format GUID
     */
    algorithmId?: string;
    /**
     * Item recommendations provided by the algorithm. Depending on the algorithm, these recommendations may be influenced by the items provided in the request.
     * @maxSize 100
     */
    recommendedItems?: CatalogReference[];
}
interface RecommendationAlgorithmNotSupported {
    /**
     * Not supported algorithms.
     * @minSize 1
     * @maxSize 10
     */
    unsupportedAlgorithms?: string[];
}
interface ItemAppIdNotSupportedError {
    /**
     * Items with not supported catalogs.
     * @minSize 1
     * @maxSize 300
     */
    items?: CatalogReference[];
}
interface RecommendationsProviderConfig {
    /** URI where the application implementing the SPI is deployed. */
    deploymentUri?: string;
    /**
     * App IDs of catalogs for which recommended items can be found.
     * @minSize 1
     * @maxSize 100
     * @minLength 1
     * @maxLength 36
     */
    catalogAppIds?: string[];
    /**
     * The algorithms that this application can use to calculate item recommendations.
     * @minSize 1
     * @maxSize 100
     */
    supportedAlgorithms?: AlgorithmConfig[];
}
interface AlgorithmConfig {
    /**
     * Algorithm name. This value is not translatable.
     * @minLength 1
     * @maxLength 50
     */
    name?: string;
    /**
     * Algorithm description. This describes how the algorithm works and if it has any limitations regarding site content, number of items in the catalog, site traffic, and so on. This value is not translatable.
     * @minLength 1
     * @maxLength 500
     */
    description?: string;
    /**
     * A supplemental `description`. It can be used to help break up and organize information. You can, for example, display this information as a tooltip or as an additional section that is collapsed by default.
     * @minLength 1
     * @maxLength 300
     */
    additionalInfo?: string | null;
    /**
     * Algorithms may have the following types:
     * * `RELATED_ITEMS` - This type of algorithm provides recommendations based on 1 or more other provided items. For example, when an item is added to a cart, the algorithm can suggest other items frequently bought together with that item.
     * * `GLOBAL` - This type of algorithm provides general recommendations based on site or project statistics. For example, bestsellers or new arrivals.
     */
    algorithmType?: AlgorithmType;
    /**
     * Algorithm ID. This must be unique for a specific app but does not have to be unique across all apps on the site or in the project.
     * @format GUID
     */
    algorithmId?: string;
}
declare enum AlgorithmType {
    UNSPECIFIED = "UNSPECIFIED",
    RELATED_ITEMS = "RELATED_ITEMS",
    GLOBAL = "GLOBAL"
}
/**
 * this message is not directly used by any service,
 * it exists to describe the expected parameters that SHOULD be provided to invoked Velo methods as part of open-platform.
 * e.g. SPIs, event-handlers, etc..
 * NOTE: this context object MUST be provided as the last argument in each Velo method signature.
 *
 * Example:
 * ```typescript
 * export function wixStores_onOrderCanceled({ event, metadata }: OrderCanceledEvent) {
 * ...
 * }
 * ```
 */
interface Context {
    /** A unique identifier of the request. You may print this ID to your logs to help with future debugging and easier correlation with Wix's logs. */
    requestId?: string | null;
    /**
     * [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3-letter currency code.
     * @format CURRENCY
     */
    currency?: string | null;
    /** An object that describes the identity that triggered this request. */
    identity?: IdentificationData;
    /** A string representing a language and region in the format of `"xx-XX"`. First 2 letters represent the language code according to ISO 639-1. This is followed by a dash "-", and then a by 2 capital letters representing the region according to ISO 3166-2. For example, `"en-US"`. */
    languages?: string[];
    /**
     * The service provider app's instance ID.
     * @format GUID
     */
    instanceId?: string | null;
}
declare enum IdentityType {
    UNKNOWN = "UNKNOWN",
    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
    MEMBER = "MEMBER",
    WIX_USER = "WIX_USER",
    APP = "APP"
}
interface IdentificationData extends IdentificationDataIdOneOf {
    /**
     * ID of a site visitor that has not logged in to the site.
     * @format GUID
     */
    anonymousVisitorId?: string;
    /**
     * ID of a site visitor that has logged in to the site.
     * @format GUID
     */
    memberId?: string;
    /**
     * ID of a Wix user (site owner, contributor, etc.).
     * @format GUID
     */
    wixUserId?: string;
    /**
     * ID of an app.
     * @format GUID
     */
    appId?: string;
    /** @readonly */
    identityType?: IdentityType;
}
/** @oneof */
interface IdentificationDataIdOneOf {
    /**
     * ID of a site visitor that has not logged in to the site.
     * @format GUID
     */
    anonymousVisitorId?: string;
    /**
     * ID of a site visitor that has logged in to the site.
     * @format GUID
     */
    memberId?: string;
    /**
     * ID of a Wix user (site owner, contributor, etc.).
     * @format GUID
     */
    wixUserId?: string;
    /**
     * ID of an app.
     * @format GUID
     */
    appId?: string;
}

interface GetRecommendationsEnvelope {
    request: GetRecommendationsRequest;
    metadata: Context;
}
declare const provideHandlers: ServicePluginDefinition<{
    /**
     *
     * This method retrieves an array containing the lists of recommended items returned by each algorithm. Items must be selected from catalogs in Wix apps installed on the site.
     *
     * If a requested recommendation algorithm's type is `RELATED_ITEMS` then the `items` field is included in the request. The response should contain items related to those submitted.
     * How the related items are selected depends on the recommendation algorithms used. For example, items can be in the same category, or can be frequently bought or watched together. */
    getRecommendations(payload: GetRecommendationsEnvelope): GetRecommendationsResponse | Promise<GetRecommendationsResponse>;
}>;

declare class AlgorithmNotSupportedWixError extends Error {
    /** @hidden */
    httpCode: number;
    /** @hidden */
    statusCode: string;
    /** @hidden */
    applicationCode: string;
    /** @hidden */
    name: string;
    /** @hidden */
    errorSchemaName: string;
    /** @hidden */
    errorType: string;
    /** @hidden */
    spiErrorData: object;
    data: RecommendationAlgorithmNotSupported;
    constructor(data?: RecommendationAlgorithmNotSupported);
    /** @hidden */
    static readonly __type = "wix_spi_error";
}
declare class ItemAppIdNotSupportedWixError extends Error {
    /** @hidden */
    httpCode: number;
    /** @hidden */
    statusCode: string;
    /** @hidden */
    applicationCode: string;
    /** @hidden */
    name: string;
    /** @hidden */
    errorSchemaName: string;
    /** @hidden */
    errorType: string;
    /** @hidden */
    spiErrorData: object;
    data: ItemAppIdNotSupportedError;
    constructor(data?: ItemAppIdNotSupportedError);
    /** @hidden */
    static readonly __type = "wix_spi_error";
}

export { type AlgorithmConfig as A, type CatalogReference as C, type GetRecommendationsRequest as G, type ItemAppIdNotSupportedError as I, type RecommendationForAlgorithm as R, type GetRecommendationsResponse as a, type RecommendationAlgorithmNotSupported as b, type RecommendationsProviderConfig as c, AlgorithmType as d, type Context as e, IdentityType as f, type IdentificationData as g, type IdentificationDataIdOneOf as h, AlgorithmNotSupportedWixError as i, ItemAppIdNotSupportedWixError as j, type GetRecommendationsEnvelope as k, provideHandlers as p };
