// src/ecom-v1-shipping-option-shipping-options.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixEcomDeliveryV1ShippingOptionServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/shipping-option-service",
        destPath: ""
      },
      {
        srcPath: "/_api/shipping-option-service",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/shipping-options",
        destPath: "/v1/shipping-options"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/ecom/v1/shipping-options",
        destPath: "/v1/shipping-options"
      }
    ],
    _: [
      {
        srcPath: "/ecom/v1/shipping-options",
        destPath: "/v1/shipping-options"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_shipping-options";
function createShippingOption(payload) {
  function __createShippingOption({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "shippingOption.createdDate" },
          { path: "shippingOption.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "POST",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.CreateShippingOption",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOption.createdDate" },
            { path: "shippingOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createShippingOption;
}
function getShippingOption(payload) {
  function __getShippingOption({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "GET",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.GetShippingOption",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/{shippingOptionId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOption.createdDate" },
            { path: "shippingOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getShippingOption;
}
function updateShippingOption(payload) {
  function __updateShippingOption({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "shippingOption.createdDate" },
          { path: "shippingOption.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "PATCH",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.UpdateShippingOption",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/{shippingOption.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOption.createdDate" },
            { path: "shippingOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateShippingOption;
}
function deleteShippingOption(payload) {
  function __deleteShippingOption({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "DELETE",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.DeleteShippingOption",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/{shippingOptionId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteShippingOption;
}
function queryShippingOptions(payload) {
  function __queryShippingOptions({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "GET",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.QueryShippingOptions",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/query",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload, true),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOptions.createdDate" },
            { path: "shippingOptions.updatedDate" }
          ]
        }
      ]),
      fallback: [
        {
          method: "POST",
          url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
            protoPath: "/v1/shipping-options/query",
            data: payload,
            host
          }),
          data: payload
        }
      ]
    };
    return metadata;
  }
  return __queryShippingOptions;
}
function updateExtendedFields(payload) {
  function __updateExtendedFields({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "POST",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.UpdateExtendedFields",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/{id}/update-extended-fields",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOption.createdDate" },
            { path: "shippingOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateExtendedFields;
}
function addDeliveryRegion(payload) {
  function __addDeliveryRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "POST",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.AddDeliveryRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/{shippingOptionId}/add-delivery-region",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOption.createdDate" },
            { path: "shippingOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addDeliveryRegion;
}
function removeDeliveryRegion(payload) {
  function __removeDeliveryRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.shipping_option",
      method: "POST",
      methodFqn: "wix.ecom.delivery.v1.ShippingOptionService.RemoveDeliveryRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomDeliveryV1ShippingOptionServiceUrl({
        protoPath: "/v1/shipping-options/{shippingOptionId}/remove-delivery-region",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "shippingOption.createdDate" },
            { path: "shippingOption.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeDeliveryRegion;
}

// src/ecom-v1-shipping-option-shipping-options.meta.ts
function createShippingOption2() {
  const payload = {};
  const getRequestOptions = createShippingOption(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/shipping-options",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getShippingOption2() {
  const payload = { shippingOptionId: ":shippingOptionId" };
  const getRequestOptions = getShippingOption(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/shipping-options/{shippingOptionId}",
    pathParams: { shippingOptionId: "shippingOptionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateShippingOption2() {
  const payload = { shippingOption: { id: ":shippingOptionId" } };
  const getRequestOptions = updateShippingOption(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/shipping-options/{shippingOption.id}",
    pathParams: { shippingOptionId: "shippingOptionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteShippingOption2() {
  const payload = { shippingOptionId: ":shippingOptionId" };
  const getRequestOptions = deleteShippingOption(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/shipping-options/{shippingOptionId}",
    pathParams: { shippingOptionId: "shippingOptionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryShippingOptions2() {
  const payload = {};
  const getRequestOptions = queryShippingOptions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/shipping-options/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateExtendedFields2() {
  const payload = { id: ":id" };
  const getRequestOptions = updateExtendedFields(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/shipping-options/{id}/update-extended-fields",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addDeliveryRegion2() {
  const payload = { shippingOptionId: ":shippingOptionId" };
  const getRequestOptions = addDeliveryRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/shipping-options/{shippingOptionId}/add-delivery-region",
    pathParams: { shippingOptionId: "shippingOptionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeDeliveryRegion2() {
  const payload = { shippingOptionId: ":shippingOptionId" };
  const getRequestOptions = removeDeliveryRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/shipping-options/{shippingOptionId}/remove-delivery-region",
    pathParams: { shippingOptionId: "shippingOptionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  addDeliveryRegion2 as addDeliveryRegion,
  createShippingOption2 as createShippingOption,
  deleteShippingOption2 as deleteShippingOption,
  getShippingOption2 as getShippingOption,
  queryShippingOptions2 as queryShippingOptions,
  removeDeliveryRegion2 as removeDeliveryRegion,
  updateExtendedFields2 as updateExtendedFields,
  updateShippingOption2 as updateShippingOption
};
//# sourceMappingURL=meta.mjs.map