"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  addPayments: () => addPayments2,
  bulkUpdatePaymentStatuses: () => bulkUpdatePaymentStatuses2,
  listTransactionsForMultipleOrders: () => listTransactionsForMultipleOrders2,
  listTransactionsForSingleOrder: () => listTransactionsForSingleOrder2,
  updatePaymentStatus: () => updatePaymentStatus2,
  updatePayments: () => updatePayments2,
  updateRefundTransaction: () => updateRefundTransaction2
});
module.exports = __toCommonJS(meta_exports);

// src/ecom-v1-order-transactions-order-transactions.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixEcomOrdersPaymentsV1PaymentsUrl(opts) {
  const domainToMappings = {
    _: [
      {
        srcPath: "/_api/ecom-payments",
        destPath: ""
      },
      {
        srcPath: "/_api/payments",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/bulk/payments",
        destPath: "/v1/bulk/payments"
      },
      {
        srcPath: "/ecom/v1/bulk/invoices",
        destPath: "/v1/bulk/invoices"
      },
      {
        srcPath: "/ecom/v1/payments",
        destPath: "/v1/payments"
      },
      {
        srcPath: "/ecom/v1/invoices",
        destPath: "/v1/invoices"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/ecom-payments",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_order-transactions";
function listTransactionsForSingleOrder(payload) {
  function __listTransactionsForSingleOrder({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "GET",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.ListTransactionsForSingleOrder",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/payments/orders/{orderId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderTransactions.payments.createdDate" },
            { path: "orderTransactions.payments.updatedDate" },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate"
            },
            { path: "orderTransactions.refunds.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listTransactionsForSingleOrder;
}
function listTransactionsForMultipleOrders(payload) {
  function __listTransactionsForMultipleOrders({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.ListTransactionsForMultipleOrders",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/payments/list-by-ids",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderTransactions.payments.createdDate" },
            { path: "orderTransactions.payments.updatedDate" },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate"
            },
            { path: "orderTransactions.refunds.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listTransactionsForMultipleOrders;
}
function addPayments(payload) {
  function __addPayments({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "payments.createdDate" },
          { path: "payments.updatedDate" },
          {
            path: "payments.regularPaymentDetails.authorizationDetails.authorizedDate"
          },
          {
            path: "payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
          },
          {
            path: "payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
          },
          {
            path: "payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
          },
          { path: "payments.regularPaymentDetails.chargebacks.createdDate" },
          { path: "payments.regularPaymentDetails.chargebacks.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.AddPayments",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/payments/orders/{orderId}/add-payment",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderTransactions.payments.createdDate" },
            { path: "orderTransactions.payments.updatedDate" },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate"
            },
            { path: "orderTransactions.refunds.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addPayments;
}
function updatePaymentStatus(payload) {
  function __updatePaymentStatus({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "statusUpdatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.UpdatePaymentStatus",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/payments/{paymentId}/orders/{orderId}/update-payment-transaction-status",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderTransactions.payments.createdDate" },
            { path: "orderTransactions.payments.updatedDate" },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate"
            },
            { path: "orderTransactions.refunds.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updatePaymentStatus;
}
function bulkUpdatePaymentStatuses(payload) {
  function __bulkUpdatePaymentStatuses({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "statusUpdatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.BulkUpdatePaymentStatuses",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/bulk/payments/update-payment-transaction-status",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" },
            {
              path: "results.item.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "results.item.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "results.item.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "results.item.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "results.item.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "results.item.regularPaymentDetails.chargebacks.updatedDate"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdatePaymentStatuses;
}
function updateRefundTransaction(payload) {
  function __updateRefundTransaction({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.UpdateRefundTransaction",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/payments/orders/{orderId}/update-refund-transaction",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderTransactions.payments.createdDate" },
            { path: "orderTransactions.payments.updatedDate" },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate"
            },
            { path: "orderTransactions.refunds.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateRefundTransaction;
}
function updatePayments(payload) {
  function __updatePayments({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "payments.fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "payments.statusUpdatedDate" },
          { path: "payments.payment.createdDate" },
          { path: "payments.payment.updatedDate" },
          {
            path: "payments.payment.regularPaymentDetails.authorizationDetails.authorizedDate"
          },
          {
            path: "payments.payment.regularPaymentDetails.authorizationDetails.captures.createdDate"
          },
          {
            path: "payments.payment.regularPaymentDetails.authorizationDetails.void.voidedDate"
          },
          {
            path: "payments.payment.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
          },
          {
            path: "payments.payment.regularPaymentDetails.chargebacks.createdDate"
          },
          {
            path: "payments.payment.regularPaymentDetails.chargebacks.updatedDate"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.order_transactions",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.payments.v1.Payments.UpdatePayments",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersPaymentsV1PaymentsUrl({
        protoPath: "/v1/payments/orders/{orderId}/update-payments",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "orderTransactions.payments.createdDate" },
            { path: "orderTransactions.payments.updatedDate" },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate"
            },
            {
              path: "orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate"
            },
            { path: "orderTransactions.refunds.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updatePayments;
}

// src/ecom-v1-order-transactions-order-transactions.meta.ts
function listTransactionsForSingleOrder2() {
  const payload = { orderId: ":orderId" };
  const getRequestOptions = listTransactionsForSingleOrder(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/payments/orders/{orderId}",
    pathParams: { orderId: "orderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listTransactionsForMultipleOrders2() {
  const payload = {};
  const getRequestOptions = listTransactionsForMultipleOrders(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/payments/list-by-ids",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addPayments2() {
  const payload = { orderId: ":orderId" };
  const getRequestOptions = addPayments(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/payments/orders/{orderId}/add-payment",
    pathParams: { orderId: "orderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updatePaymentStatus2() {
  const payload = { paymentId: ":paymentId", orderId: ":orderId" };
  const getRequestOptions = updatePaymentStatus(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/payments/{paymentId}/orders/{orderId}/update-payment-transaction-status",
    pathParams: { paymentId: "paymentId", orderId: "orderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdatePaymentStatuses2() {
  const payload = {};
  const getRequestOptions = bulkUpdatePaymentStatuses(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/payments/update-payment-transaction-status",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateRefundTransaction2() {
  const payload = { orderId: ":orderId" };
  const getRequestOptions = updateRefundTransaction(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/payments/orders/{orderId}/update-refund-transaction",
    pathParams: { orderId: "orderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updatePayments2() {
  const payload = { orderId: ":orderId" };
  const getRequestOptions = updatePayments(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/payments/orders/{orderId}/update-payments",
    pathParams: { orderId: "orderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addPayments,
  bulkUpdatePaymentStatuses,
  listTransactionsForMultipleOrders,
  listTransactionsForSingleOrder,
  updatePaymentStatus,
  updatePayments,
  updateRefundTransaction
});
//# sourceMappingURL=meta.js.map