import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { StoresLocation, StoresLocationsQueryBuilder } from './index.typings.mjs';
export { ActionEvent, App, CreateStoresLocationRequest, CreateStoresLocationResponse, CursorPaging, CursorPagingMetadata, CursorQuery, CursorQueryPagingMethodOneOf, Cursors, CustomTag, DeleteStoresLocationRequest, DeleteStoresLocationResponse, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, File, GetOrCreateDefaultStoresLocationRequest, GetOrCreateDefaultStoresLocationResponse, GetStoresLocationRequest, GetStoresLocationResponse, IdentificationData, IdentificationDataIdOneOf, InvalidateCache, InvalidateCacheGetByOneOf, LocationType, LocationTypeWithLiterals, MessageEnvelope, Page, QueryStoresLocationsRequest, QueryStoresLocationsResponse, RestoreInfo, SortOrder, SortOrderWithLiterals, Sorting, StoresLocationsQueryResult, URI, UpdateStoresLocationRequest, UpdateStoresLocationResponse, WebhookIdentityType, WebhookIdentityTypeWithLiterals } from './index.typings.mjs';

declare function getStoresLocation$1(httpClient: HttpClient): GetStoresLocationSignature;
interface GetStoresLocationSignature {
    /**
     * Retrieves a Stores location.
     * @param - Stores location ID.
     * @returns Stores location.
     */
    (storesLocationId: string): Promise<NonNullablePaths<StoresLocation, `locationType` | `name` | `defaultLocation`, 2>>;
}
declare function queryStoresLocations$1(httpClient: HttpClient): QueryStoresLocationsSignature;
interface QueryStoresLocationsSignature {
    /**
     * Retrieves a list of up to 100 Stores locations, given the provided filtering, sorting, and cursor paging.
     * Pass supported values to the `fields` array in the request to include those fields in the response.
     *
     *
     * Query Stores Locations runs with these defaults, which you can override:
     *
     * - `createdDate` is sorted in `DESC` order
     * - `cursorPaging.limit` is `100`
     *
     * For field support for filters and sorting,
     * see [Stores Locations: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/stores-locations-v3/supported-filters-and-sorting).
     *
     * To learn about working with _Query_ endpoints, see
     * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),
     * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
     */
    (): StoresLocationsQueryBuilder;
}

declare const getStoresLocation: MaybeContext<BuildRESTFunction<typeof getStoresLocation$1> & typeof getStoresLocation$1>;
declare const queryStoresLocations: MaybeContext<BuildRESTFunction<typeof queryStoresLocations$1> & typeof queryStoresLocations$1>;

export { StoresLocation, StoresLocationsQueryBuilder, getStoresLocation, queryStoresLocations };
