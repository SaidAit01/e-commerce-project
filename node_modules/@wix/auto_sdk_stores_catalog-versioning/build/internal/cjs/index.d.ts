import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { GetCatalogVersionResponse } from './index.typings.js';
export { ActionEvent, Asset, BackfillV3SiteRequest, BackfillV3SiteResponse, DefaultDeliveryProfileSetup, DeleteContext, DeleteStatus, DeleteStatusWithLiterals, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, GetCatalogVersionRequest, IdentificationData, IdentificationDataIdOneOf, InstallBassAppDependencyRequest, InstallBassAppDependencyResponse, InstallStoresRequest, InstallStoresResponse, MessageEnvelope, MetaSiteSpecialEvent, MetaSiteSpecialEventPayloadOneOf, Namespace, NamespaceChanged, NamespaceWithLiterals, OdeditorAssigned, OdeditorUnassigned, PicassoAssigned, PicassoUnassigned, Provision, RestoreInfo, ServiceProvisioned, ServiceRemoved, SiteCreated, SiteCreatedContext, SiteCreatedContextWithLiterals, SiteDeleted, SiteHardDeleted, SiteMarkedAsTemplate, SiteMarkedAsWixSite, SitePublished, SitePurgedExternally, SiteRenamed, SiteTransferred, SiteUndeleted, SiteUnpublished, SiteUrlChanged, State, StateWithLiterals, StoresV3CatalogProvisioned, StudioAssigned, StudioUnassigned, Version, VersionWithLiterals, WebhookIdentityType, WebhookIdentityTypeWithLiterals } from './index.typings.js';

declare function getCatalogVersion$1(httpClient: HttpClient): GetCatalogVersionSignature;
interface GetCatalogVersionSignature {
    /**
     * Retrieves the version of Stores Catalog installed on a site.
     */
    (): Promise<NonNullablePaths<GetCatalogVersionResponse, `catalogVersion`, 2>>;
}

declare const getCatalogVersion: MaybeContext<BuildRESTFunction<typeof getCatalogVersion$1> & typeof getCatalogVersion$1>;

export { GetCatalogVersionResponse, getCatalogVersion };
