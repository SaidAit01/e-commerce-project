import { HttpClient, NonNullablePaths, EventDefinition, MaybeContext, BuildRESTFunction, BuildEventDefinition } from '@wix/sdk-types';
import { GetCheckoutSettingsResponse, CheckoutSettings, UpdateCheckoutSettingsResponse, CheckoutSettingsUpdatedEnvelope } from './index.typings.mjs';
export { ActionEvent, Alignment, AlignmentWithLiterals, BaseEventMetadata, CheckboxField, CheckoutBrand, CheckoutFields, CheckoutHeader, CheckoutPolicies, ContactUsPolicy, CustomCheckoutPolicy, DeleteCheckoutSettingsRequest, DeleteCheckoutSettingsResponse, DigitalItemPolicy, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, EventMetadata, FocalPoint, GetCheckoutSettingsRequest, GiftCardProviderWasProvisioned, IdentificationData, IdentificationDataIdOneOf, ListCheckoutSettingsRequest, ListCheckoutSettingsResponse, Logo, LogoSize, LogoSizeWithLiterals, MessageEnvelope, PrivacyPolicy, RestoreInfo, ReturnPolicy, TermsAndConditionsPolicy, UpdateCheckoutSettingsRequest, WebhookIdentityType, WebhookIdentityTypeWithLiterals } from './index.typings.mjs';

declare function getCheckoutSettings$1(httpClient: HttpClient): GetCheckoutSettingsSignature;
interface GetCheckoutSettingsSignature {
    /**
     * Retrieves the site's checkout settings.
     */
    (): Promise<NonNullablePaths<GetCheckoutSettingsResponse, `checkoutSettings.checkoutBrand.header.logo.size` | `checkoutSettings.checkoutBrand.header.alignment`, 6>>;
}
declare function updateCheckoutSettings$1(httpClient: HttpClient): UpdateCheckoutSettingsSignature;
interface UpdateCheckoutSettingsSignature {
    /**
     * Updates the site's checkout settings.
     * @param - Checkout settings to update.
     */
    (checkoutSettings: CheckoutSettings): Promise<NonNullablePaths<UpdateCheckoutSettingsResponse, `checkoutSettings.checkoutBrand.header.logo.size` | `checkoutSettings.checkoutBrand.header.alignment`, 6>>;
}
declare const onCheckoutSettingsUpdated$1: EventDefinition<CheckoutSettingsUpdatedEnvelope, "wix.ecom.v1.checkout_settings_updated">;

declare const getCheckoutSettings: MaybeContext<BuildRESTFunction<typeof getCheckoutSettings$1> & typeof getCheckoutSettings$1>;
declare const updateCheckoutSettings: MaybeContext<BuildRESTFunction<typeof updateCheckoutSettings$1> & typeof updateCheckoutSettings$1>;
/**
 * Triggered when checkout settings are updated.
 */
declare const onCheckoutSettingsUpdated: BuildEventDefinition<typeof onCheckoutSettingsUpdated$1> & typeof onCheckoutSettingsUpdated$1;

export { CheckoutSettings, CheckoutSettingsUpdatedEnvelope, GetCheckoutSettingsResponse, UpdateCheckoutSettingsResponse, getCheckoutSettings, onCheckoutSettingsUpdated, updateCheckoutSettings };
