{"version":3,"sources":["../../../src/ecom-v1-checkout-settings-checkout-settings.universal.ts","../../../src/ecom-v1-checkout-settings-checkout-settings.http.ts"],"sourcesContent":["import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixEcomV1CheckoutSettings from './ecom-v1-checkout-settings-checkout-settings.http.js';\nimport { transformSDKImageToRESTImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\nexport interface CheckoutSettings {\n  /** Checkout policies. */\n  checkoutPolicies?: CheckoutPolicies;\n  /** Settings that apply to checkout fields and the checkout process. */\n  checkoutFields?: CheckoutFields;\n  /** Checkout brand settings. */\n  checkoutBrand?: CheckoutBrand;\n  /**\n   * Date and time the checkout settings were created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the checkout settings were updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n}\n\nexport interface CheckoutPolicies {\n  /** Terms and conditions. */\n  termsAndConditions?: TermsAndConditionsPolicy;\n  /** Privacy policy. */\n  privacyPolicy?: PrivacyPolicy;\n  /** Return policy. */\n  returnPolicy?: ReturnPolicy;\n  /** Digital item policy. */\n  digitalItemPolicy?: DigitalItemPolicy;\n  /** \"Contact us\" information. */\n  contactUs?: ContactUsPolicy;\n  /** Custom policy. */\n  customPolicy?: CustomCheckoutPolicy;\n}\n\nexport interface TermsAndConditionsPolicy {\n  /**\n   * Whether the terms and conditions policy is visible to the customer in the checkout page. <br><br>\n   *\n   * Default: `false`\n   */\n  visible?: boolean | null;\n  /** Terms and conditions policy content. */\n  content?: string | null;\n}\n\nexport interface PrivacyPolicy {\n  /**\n   * Whether the privacy policy is visible to the customer in the checkout page. <br><br>\n   *\n   * Default: `false`\n   */\n  visible?: boolean | null;\n  /** Privacy policy content. */\n  content?: string | null;\n}\n\nexport interface ReturnPolicy {\n  /**\n   * Whether the return policy is visible to the customer in the checkout page. <br><br>\n   *\n   * Default: `false`\n   */\n  visible?: boolean | null;\n  /** Return policy content. */\n  content?: string | null;\n}\n\nexport interface DigitalItemPolicy {\n  /**\n   * Whether the digital item policy is visible to the customer in the checkout page. <br><br>\n   *\n   * Default: `false`\n   */\n  visible?: boolean | null;\n  /** Digital item policy content. */\n  content?: string | null;\n}\n\nexport interface ContactUsPolicy {\n  /**\n   * Whether the contact us policy is visible to the customer in the checkout page. <br><br>\n   *\n   * Default: `false`\n   */\n  visible?: boolean | null;\n  /** Contact us policy content. */\n  content?: string | null;\n}\n\nexport interface CustomCheckoutPolicy {\n  /**\n   * Whether the custom policy is visible to the customer in the checkout page. <br><br>\n   *\n   * Default: `false`\n   */\n  visible?: boolean | null;\n  /** Custom policy content. */\n  content?: string | null;\n  /** Custom policy title. */\n  title?: string | null;\n}\n\nexport interface CheckoutFields {\n  /**\n   * Subscription checkbox. <br><br>\n   *\n   * Defaults:\n   * + `visible`: `false`\n   * + `checkedByDefault`: `false`\n   */\n  subscriptionCheckbox?: CheckboxField;\n  /**\n   * Policy agreement checkbox. <br><br>\n   *\n   * Defaults:\n   * + `visible`: `false`\n   * + `checkedByDefault`: `false`\n   */\n  policyAgreementCheckbox?: CheckboxField;\n  /**\n   * Whether the ability to redeem a gift card is enabled. <br><br>\n   *\n   * Default: `false`\n   */\n  giftCardRedeemEnabled?: boolean | null;\n  /**\n   * Whether to allow for MIT transactions. <br><br>\n   *\n   * Default: `false`\n   */\n  mitEnabled?: boolean | null;\n  /**\n   * Whether to allow for Auth & Capture transactions. <br><br>\n   *\n   * Default: `false`\n   */\n  delayCaptureEnabled?: boolean | null;\n  /**\n   * Whether to automatically capture the transaction before the authorization expires.\n   *\n   * Default: `true`\n   * >**Note:** this setting is only relevant when `delay_capture_enabled: true`.\n   */\n  captureBeforeExpiryEnabled?: boolean | null;\n}\n\nexport interface CheckboxField {\n  /** Whether the checkbox is visible to the customer. */\n  visible?: boolean | null;\n  /** Whether the checkbox is checked by default. */\n  checkedByDefault?: boolean | null;\n}\n\nexport interface CheckoutBrand {\n  /** Checkout header. */\n  header?: CheckoutHeader;\n}\n\nexport interface CheckoutHeader {\n  /**\n   * Textual content to be included in the header (e.g. Business Name)\n   * TODO: update maxLength validation once limitation is known\n   * @maxLength 55\n   */\n  text?: string | null;\n  /** Specifications for when a logo is included in the header. */\n  logo?: Logo;\n  /**\n   * Alignment within the header.\n   *\n   * >**Note:** `SIDE` alignment is decided depending on the locale's language. For example, scripts like Hebrew and Arabic will automatically align right-to-left.\n   */\n  alignment?: AlignmentWithLiterals;\n  /**\n   * Whether to display the 'Checkout' label within the header.\n   * Depending on the locale, the label may be translated.\n   */\n  displayCheckoutLabel?: boolean | null;\n}\n\nexport interface Logo {\n  /** Size of the logo. */\n  size?: LogoSizeWithLiterals;\n}\n\nexport interface FocalPoint {\n  /** X-coordinate of the focal point. */\n  x?: number;\n  /** Y-coordinate of the focal point. */\n  y?: number;\n  /** crop by height */\n  height?: number | null;\n  /** crop by width */\n  width?: number | null;\n}\n\nexport enum LogoSize {\n  UNKNOWN_LOGO_SIZE = 'UNKNOWN_LOGO_SIZE',\n  SMALL = 'SMALL',\n  MEDIUM = 'MEDIUM',\n  LARGE = 'LARGE',\n}\n\n/** @enumType */\nexport type LogoSizeWithLiterals =\n  | LogoSize\n  | 'UNKNOWN_LOGO_SIZE'\n  | 'SMALL'\n  | 'MEDIUM'\n  | 'LARGE';\n\nexport enum Alignment {\n  UNKNOWN_ALIGNMENT = 'UNKNOWN_ALIGNMENT',\n  SIDE = 'SIDE',\n  CENTER = 'CENTER',\n}\n\n/** @enumType */\nexport type AlignmentWithLiterals =\n  | Alignment\n  | 'UNKNOWN_ALIGNMENT'\n  | 'SIDE'\n  | 'CENTER';\n\nexport interface GetCheckoutSettingsRequest {}\n\nexport interface GetCheckoutSettingsResponse {\n  /** Checkout settings. */\n  checkoutSettings?: CheckoutSettings;\n}\n\nexport interface UpdateCheckoutSettingsRequest {\n  /** Checkout settings to update. */\n  checkoutSettings: CheckoutSettings;\n}\n\nexport interface UpdateCheckoutSettingsResponse {\n  /** Updated checkout settings. */\n  checkoutSettings?: CheckoutSettings;\n}\n\nexport interface ListCheckoutSettingsRequest {}\n\nexport interface ListCheckoutSettingsResponse {\n  /** List of retrieved checkout settings. */\n  checkoutSettings?: CheckoutSettings[];\n}\n\nexport interface GiftCardProviderWasProvisioned {\n  /** The gift card provider which was installed */\n  providerAppDefId?: string;\n  providerInstanceId?: string;\n}\n\nexport interface Empty {}\n\nexport interface DeleteCheckoutSettingsRequest {}\n\nexport interface DeleteCheckoutSettingsResponse {}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface CheckoutSettingsUpdatedEnvelope {\n  entity: CheckoutSettings;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when checkout settings are updated.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read eCommerce - all read permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM\n * @permissionScope Read Orders\n * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Manage eCommerce - all permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId ECOM.READ_CHECKOUT_SETTINGS\n * @webhook\n * @eventType wix.ecom.v1.checkout_settings_updated\n * @slug updated\n */\nexport declare function onCheckoutSettingsUpdated(\n  handler: (event: CheckoutSettingsUpdatedEnvelope) => void | Promise<void>\n): void;\n\n/**\n * Retrieves the site's checkout settings.\n * @public\n * @permissionId ECOM.READ_CHECKOUT_SETTINGS\n * @applicableIdentity APP\n * @fqn wix.ecom.checkout_settings.api.v1.CheckoutSettingsService.GetCheckoutSettings\n */\nexport async function getCheckoutSettings(): Promise<\n  NonNullablePaths<\n    GetCheckoutSettingsResponse,\n    | `checkoutSettings.checkoutBrand.header.logo.size`\n    | `checkoutSettings.checkoutBrand.header.alignment`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({});\n\n  const reqOpts =\n    ambassadorWixEcomV1CheckoutSettings.getCheckoutSettings(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'checkoutSettings.checkoutBrand.header.logo.image' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {},\n        singleArgumentUnchanged: false,\n      },\n      []\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates the site's checkout settings.\n * @param checkoutSettings - Checkout settings to update.\n * @public\n * @requiredField checkoutSettings\n * @permissionId ECOM.UPDATE_CHECKOUT_SETTINGS\n * @applicableIdentity APP\n * @fqn wix.ecom.checkout_settings.api.v1.CheckoutSettingsService.UpdateCheckoutSettings\n */\nexport async function updateCheckoutSettings(\n  checkoutSettings: CheckoutSettings\n): Promise<\n  NonNullablePaths<\n    UpdateCheckoutSettingsResponse,\n    | `checkoutSettings.checkoutBrand.header.logo.size`\n    | `checkoutSettings.checkoutBrand.header.alignment`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      checkoutSettings: checkoutSettings,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'checkoutSettings.checkoutBrand.header.logo.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1CheckoutSettings.updateCheckoutSettings(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'checkoutSettings.checkoutBrand.header.logo.image' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { checkoutSettings: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['checkoutSettings']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcomCheckoutSettingsApiV1CheckoutSettingsServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/checkout-settings',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/ecom/v1/checkout-settings',\n        destPath: '/v1/checkout-settings',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/checkout-settings',\n        destPath: '/v1/checkout-settings',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_checkout-settings';\n\n/** Retrieves the site's checkout settings. */\nexport function getCheckoutSettings(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getCheckoutSettings({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.checkout_settings',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecom.checkout_settings.api.v1.CheckoutSettingsService.GetCheckoutSettings',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomCheckoutSettingsApiV1CheckoutSettingsServiceUrl({\n        protoPath: '/v1/checkout-settings',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'checkoutSettings.createdDate' },\n              { path: 'checkoutSettings.updatedDate' },\n              {\n                path: 'checkoutSettings.checkoutBrand.header.logo.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'checkoutSettings.checkoutBrand.header.logo.image.focalPoint.x',\n              },\n              {\n                path: 'checkoutSettings.checkoutBrand.header.logo.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getCheckoutSettings;\n}\n\n/** Updates the site's checkout settings. */\nexport function updateCheckoutSettings(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateCheckoutSettings({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'checkoutSettings.createdDate' },\n          { path: 'checkoutSettings.updatedDate' },\n          {\n            path: 'checkoutSettings.checkoutBrand.header.logo.image.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'checkoutSettings.checkoutBrand.header.logo.image.focalPoint.x',\n          },\n          {\n            path: 'checkoutSettings.checkoutBrand.header.logo.image.focalPoint.y',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.checkout_settings',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.ecom.checkout_settings.api.v1.CheckoutSettingsService.UpdateCheckoutSettings',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomCheckoutSettingsApiV1CheckoutSettingsServiceUrl({\n        protoPath: '/v1/checkout-settings',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'checkoutSettings.createdDate' },\n              { path: 'checkoutSettings.updatedDate' },\n              {\n                path: 'checkoutSettings.checkoutBrand.header.logo.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'checkoutSettings.checkoutBrand.header.logo.image.focalPoint.x',\n              },\n              {\n                path: 'checkoutSettings.checkoutBrand.header.logo.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateCheckoutSettings;\n}\n"],"mappings":";AAAA,SAAS,kBAAkB,yBAAyB;AACpD;AAAA,EACE;AAAA,EACA;AAAA,OACK;;;ACJP,SAAS,yBAAyB;AAClC,SAAS,oCAAoC;AAC7C,SAAS,oCAAoC;AAC7C,SAAS,4CAA4C;AACrD,SAAS,4CAA4C;AACrD,SAAS,4CAA4C;AACrD,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAI3B,SAAS,8DACP,MACA;AACA,QAAM,mBAAmB;AAAA,IACvB,yBAAyB;AAAA,MACvB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,wBAAwB;AAAA,MACtB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,mBAAmB;AAAA,MACjB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,SAAO,WAAW,OAAO,OAAO,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAC7D;AAEA,IAAM,eAAe;AAGd,SAAS,oBACd,SAC4B;AAC5B,WAAS,sBAAsB,EAAE,KAAK,GAAQ;AAC5C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK,8DAA8D;AAAA,QACjE,WAAW;AAAA,QACX,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,MACD,QAAQ,kBAAkB,OAAO;AAAA,MACjC,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,+BAA+B;AAAA,YACvC;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAGO,SAAS,uBACd,SAC4B;AAC5B,WAAS,yBAAyB,EAAE,KAAK,GAAQ;AAC/C,UAAM,iBAAiB,eAAe,SAAS;AAAA,MAC7C;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,YAAY,CAAC;AAAA,MAC/B;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL,EAAE,MAAM,+BAA+B;AAAA,UACvC,EAAE,MAAM,+BAA+B;AAAA,UACvC;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO;AAAA,UACL;AAAA,YACE,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WACE;AAAA,MACF,aAAa;AAAA,MACb,KAAK,8DAA8D;AAAA,QACjE,WAAW;AAAA,QACX,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,MACD,MAAM;AAAA,MACN,mBAAmB,CAACA,aAClB,eAAeA,UAAS;AAAA,QACtB;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL,EAAE,MAAM,+BAA+B;AAAA,YACvC,EAAE,MAAM,+BAA+B;AAAA,YACvC;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,UACE,aAAa;AAAA,UACb,OAAO;AAAA,YACL;AAAA,cACE,MAAM;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;;;AD5JA,SAAS,oCAAoC;AAC7C,SAAS,oCAAoC;AAC7C,SAAS,kBAAAC,uBAAsB;AAsMxB,IAAK,WAAL,kBAAKC,cAAL;AACL,EAAAA,UAAA,uBAAoB;AACpB,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,WAAQ;AAJE,SAAAA;AAAA,GAAA;AAeL,IAAK,YAAL,kBAAKC,eAAL;AACL,EAAAA,WAAA,uBAAoB;AACpB,EAAAA,WAAA,UAAO;AACP,EAAAA,WAAA,YAAS;AAHC,SAAAA;AAAA,GAAA;AAwLL,IAAK,sBAAL,kBAAKC,yBAAL;AACL,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,uBAAoB;AACpB,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,SAAM;AALI,SAAAA;AAAA,GAAA;AAsGZ,eAAsBC,uBAOpB;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAU,sCAAsC,CAAC,CAAC;AAExD,QAAM,UACgC,oBAAoB,OAAO;AAEjE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLJ,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mDAAmD,CAAC;AAAA,QACtE;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,CAAC;AAAA,QAC3B,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC;AAAA,IACH;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;AAWA,eAAsBK,wBACpB,kBAQA;AAEA,QAAM,EAAE,YAAY,YAAY,IAAI,UAAU,CAAC;AAK/C,QAAM,UAAUL;AAAA,IACd,sCAAsC;AAAA,MACpC;AAAA,IACF,CAAC;AAAA,IACD;AAAA,MACE;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAC,EAAE,MAAM,mDAAmD,CAAC;AAAA,MACtE;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UACgC,uBAAuB,OAAO;AAEpE,eAAa,aAAa;AAC1B,MAAI;AACF,UAAM,SAAS,MAAM,WAAW,QAAQ,OAAO;AAC/C,iBAAa,YAAY,MAAM;AAE/B,WAAO;AAAA,MACLA,gBAAe,OAAO,MAAM;AAAA,QAC1B;AAAA,UACE,aAAa;AAAA,UACb,OAAO,CAAC,EAAE,MAAM,mDAAmD,CAAC;AAAA,QACtE;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,SAAS,KAAU;AACjB,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,QACE,wBAAwB,CAAC;AAAA,QACzB,0BAA0B,EAAE,kBAAkB,OAAO;AAAA,QACrD,yBAAyB;AAAA,MAC3B;AAAA,MACA,CAAC,kBAAkB;AAAA,IACrB;AACA,iBAAa,UAAU,GAAG;AAE1B,UAAM;AAAA,EACR;AACF;","names":["payload","transformPaths","LogoSize","Alignment","WebhookIdentityType","getCheckoutSettings","updateCheckoutSettings"]}