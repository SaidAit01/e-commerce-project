{"version":3,"sources":["../../../src/ecom-v1-pickup-location-pickup-locations.universal.ts","../../../src/ecom-v1-pickup-location-pickup-locations.http.ts"],"sourcesContent":["import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixEcomV1PickupLocation from './ecom-v1-pickup-location-pickup-locations.http.js';\n// @ts-ignore\nimport { transformSDKAddressToRESTAddress } from '@wix/sdk-runtime/transformations/address';\nimport { transformRESTAddressToSDKAddress } from '@wix/sdk-runtime/transformations/address';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\n/** PickupLocation is the main entity of PickupLocations that can be used for lorem ipsum dolor */\nexport interface PickupLocation {\n  /**\n   * PickupLocation ID\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Represents the time this PickupLocation was created\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Represents the time this PickupLocation was last updated\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Pickup Location Name\n   * @minLength 1\n   * @maxLength 100\n   */\n  name?: string | null;\n  /** Pickup Location Address */\n  address?: Address;\n  /**\n   * Expected delivery time in free text. For example, `\"3-5 business days\"`.\n   * @maxLength 500\n   */\n  deliveryTime?: string | null;\n  /**\n   * Instructions for carrier. For example, `\"Please knock on the door. If unanswered, please call contact number. Thanks.\"`.\n   * @maxLength 1000\n   */\n  instructions?: string | null;\n  /** inactive pickup locations should not be shown in checkout */\n  active?: boolean | null;\n  /**\n   * at runtime for a given pickup input, up to one rate (price) should be returned in an option. If more than one rate is valid then we return the lowest one.\n   * @maxSize 50\n   */\n  rates?: ConditionalRates[];\n  /**\n   * This pickup location is active for the following delivery regions.\n   * @maxSize 50\n   * @format GUID\n   */\n  deliveryRegionIds?: string[];\n}\n\n/** Physical address */\nexport interface Address extends AddressStreetOneOf {\n  /** Street name and number. */\n  streetAddress?: StreetAddress;\n  /** @maxLength 150 */\n  addressLine1?: string | null;\n  /**\n   * Country code.\n   * @format COUNTRY\n   */\n  country?: string | null;\n  /** Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2). */\n  subdivision?: string | null;\n  city?: string | null;\n  /** Zip/postal code. */\n  postalCode?: string | null;\n  /** @maxLength 100 */\n  addressLine2?: string | null;\n}\n\n/** @oneof */\nexport interface AddressStreetOneOf {\n  /** Street name and number. */\n  streetAddress?: StreetAddress;\n  /** @maxLength 150 */\n  addressLine?: string | null;\n}\n\nexport interface StreetAddress {\n  number?: string;\n  name?: string;\n}\n\nexport interface ConditionalRates {\n  /**\n   * there is an AND logic between all the conditions. Empty conditions means true.\n   * The amount of the rate that will be returned if all conditions are met.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  amount?: string;\n  /**\n   * For example: weight > 0 and weight <= 10\n   * @maxSize 10\n   */\n  conditions?: Condition[];\n  /** When this flag is set to true, multiply the amount by the number of line items passed on the request. */\n  multiplyByQuantity?: boolean;\n}\n\nexport interface Condition {\n  type?: ConditionTypeWithLiterals;\n  /**\n   * The value in respective to the condition type\n   * Weight values should be in the same weight units of the store: KG / LB\n   * Total price is according to the store currency\n   * Quantity of items should be integers\n   * @decimalValue options { gte:0, lte:999999999, maxScale:6 }\n   */\n  value?: string;\n  /** Logical operator. */\n  operator?: LogicalOperatorWithLiterals;\n}\n\nexport enum ConditionType {\n  UNKNOWN_TYPE = 'UNKNOWN_TYPE',\n  BY_TOTAL_WEIGHT = 'BY_TOTAL_WEIGHT',\n  BY_TOTAL_PRICE = 'BY_TOTAL_PRICE',\n  BY_TOTAL_QUANTITY = 'BY_TOTAL_QUANTITY',\n}\n\n/** @enumType */\nexport type ConditionTypeWithLiterals =\n  | ConditionType\n  | 'UNKNOWN_TYPE'\n  | 'BY_TOTAL_WEIGHT'\n  | 'BY_TOTAL_PRICE'\n  | 'BY_TOTAL_QUANTITY';\n\nexport enum LogicalOperator {\n  UNKNOWN_LOGICAL_OPERATOR_TYPE = 'UNKNOWN_LOGICAL_OPERATOR_TYPE',\n  EQ = 'EQ',\n  GT = 'GT',\n  GTE = 'GTE',\n  LT = 'LT',\n  LTE = 'LTE',\n}\n\n/** @enumType */\nexport type LogicalOperatorWithLiterals =\n  | LogicalOperator\n  | 'UNKNOWN_LOGICAL_OPERATOR_TYPE'\n  | 'EQ'\n  | 'GT'\n  | 'GTE'\n  | 'LT'\n  | 'LTE';\n\nexport interface DiffmatokyPayload {\n  left?: string;\n  right?: string;\n  compareChannel?: string;\n  entityId?: string;\n  errorInformation?: ErrorInformation;\n  tags?: string[];\n}\n\nexport interface ErrorInformation {\n  stackTrace?: string;\n}\n\nexport interface CreatePickupLocationRequest {\n  /** PickupLocation to be created */\n  pickupLocation: PickupLocation;\n}\n\nexport interface CreatePickupLocationResponse {\n  /** The created PickupLocation */\n  pickupLocation?: PickupLocation;\n}\n\nexport interface GetPickupLocationRequest {\n  /**\n   * Id of the PickupLocation to retrieve\n   * @format GUID\n   */\n  pickupLocationId: string;\n}\n\nexport interface GetPickupLocationResponse {\n  /** The retrieved PickupLocation */\n  pickupLocation?: PickupLocation;\n}\n\nexport interface UpdatePickupLocationRequest {\n  /** PickupLocation to be updated, may be partial */\n  pickupLocation: PickupLocation;\n}\n\nexport interface UpdatePickupLocationResponse {\n  /** The updated PickupLocation */\n  pickupLocation?: PickupLocation;\n}\n\nexport interface DeletePickupLocationRequest {\n  /**\n   * Id of the PickupLocation to delete\n   * @format GUID\n   */\n  pickupLocationId: string;\n}\n\nexport interface DeletePickupLocationResponse {}\n\nexport interface QueryPickupLocationRequest {\n  /** WQL expression */\n  query?: QueryV2;\n}\n\nexport interface QueryV2 extends QueryV2PagingMethodOneOf {\n  /** Paging options to limit and offset the number of items. */\n  paging?: Paging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object.\n   *\n   * Learn more about [filtering](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#filters).\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object.\n   *\n   * Learn more about [sorting](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#sorting).\n   */\n  sort?: Sorting[];\n  /** Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned. */\n  fields?: string[];\n  /** Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned. */\n  fieldsets?: string[];\n}\n\n/** @oneof */\nexport interface QueryV2PagingMethodOneOf {\n  /** Paging options to limit and offset the number of items. */\n  paging?: Paging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface Paging {\n  /** Number of items to load. */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryPickupLocationResponse {\n  /** The retrieved PickupLocations */\n  pickupLocations?: PickupLocation[];\n  /** Paging metadata */\n  pagingMetadata?: CursorPagingMetadata;\n}\n\nexport interface CursorPagingMetadata {\n  /** Number of items returned in current page. */\n  count?: number | null;\n  /** Cursor strings that point to the next page, previous page, or both. */\n  cursors?: Cursors;\n  /**\n   * Whether there are more pages to retrieve following the current page.\n   *\n   * + `true`: Another page of results can be retrieved.\n   * + `false`: This is the last page.\n   */\n  hasNext?: boolean | null;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface AddDeliveryRegionRequest {\n  /**\n   * Id of the PickupLocation to add to the delivery region\n   * @format GUID\n   */\n  pickupLocationId: string;\n  /**\n   * Id of the DeliveryRegion to add the PickupLocation to\n   * @format GUID\n   */\n  deliveryRegionId: string;\n  /** Revision of the PickupLocation */\n  revision: string | null;\n}\n\nexport interface AddDeliveryRegionResponse {\n  /** The updated PickupLocation */\n  pickupLocation?: PickupLocation;\n}\n\nexport interface RemoveDeliveryRegionRequest {\n  /**\n   * Id of the PickupLocation to add to the delivery region\n   * @format GUID\n   */\n  pickupLocationId: string;\n  /**\n   * Id of the DeliveryRegion to add the PickupLocation to\n   * @format GUID\n   */\n  deliveryRegionId: string;\n  /** Revision of the PickupLocation */\n  revision: string | null;\n}\n\nexport interface RemoveDeliveryRegionResponse {\n  /** The updated PickupLocation */\n  pickupLocation?: PickupLocation;\n}\n\nexport interface BulkCreatePickupLocationRequest {\n  /**\n   * @minSize 1\n   * @maxSize 100\n   */\n  pickupLocations: PickupLocation[];\n}\n\nexport interface BulkCreatePickupLocationResponse {\n  /** @maxSize 100 */\n  pickupLocations?: PickupLocation[];\n  errors?: PickupLocationError[];\n}\n\nexport interface PickupLocationError {\n  _id?: string;\n  error?: ApplicationError;\n}\n\nexport interface ApplicationError {\n  /** Error code. */\n  code?: string;\n  /** Description of the error. */\n  description?: string;\n  /** Data related to the error. */\n  data?: Record<string, any> | null;\n}\n\nexport interface BulkUpdatePickupLocationRequest {\n  /**\n   * @minSize 1\n   * @maxSize 100\n   */\n  pickupLocations: PickupLocation[];\n}\n\nexport interface BulkUpdatePickupLocationResponse {\n  /** @maxSize 100 */\n  pickupLocations?: PickupLocation[];\n  errors?: PickupLocationError[];\n}\n\nexport interface BulkDeletePickupLocationRequest {\n  /**\n   * @format GUID\n   * @minSize 1\n   * @maxSize 100\n   */\n  pickupLocationIds: string[];\n}\n\nexport interface BulkDeletePickupLocationResponse {\n  errors?: PickupLocationError[];\n}\n\nexport interface Empty {}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n/** @docsIgnore */\nexport type CreatePickupLocationApplicationErrors =\n  | {\n      code?: 'LOCATIONS_IN_SHIPPING_RULE_LIMIT_EXCEEDED';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'LIMIT_OF_OPTIONS_PER_DELIVERY_REGION_EXCEEDED';\n      description?: string;\n      data?: Record<string, any>;\n    };\n/** @docsIgnore */\nexport type BulkCreatePickupLocationApplicationErrors =\n  | {\n      code?: 'LOCATIONS_IN_SHIPPING_RULE_LIMIT_EXCEEDED';\n      description?: string;\n      data?: Record<string, any>;\n    }\n  | {\n      code?: 'LIMIT_OF_OPTIONS_PER_DELIVERY_REGION_EXCEEDED';\n      description?: string;\n      data?: Record<string, any>;\n    };\n\n/**\n * Creates a new PickupLocation\n * @param pickupLocation - PickupLocation to be created\n * @public\n * @documentationMaturity preview\n * @requiredField pickupLocation\n * @requiredField pickupLocation.address\n * @permissionId ECOM.PICKUP_LOCATION_CREATE\n * @applicableIdentity APP\n * @returns The created PickupLocation\n * @fqn wix.ecom.v1.PickupLocations.CreatePickupLocation\n */\nexport async function createPickupLocation(\n  pickupLocation: NonNullablePaths<PickupLocation, `address`, 2>\n): Promise<\n  NonNullablePaths<\n    PickupLocation,\n    | `address.streetAddress.number`\n    | `address.streetAddress.name`\n    | `rates`\n    | `rates.${number}.amount`\n    | `rates.${number}.multiplyByQuantity`\n    | `deliveryRegionIds`,\n    4\n  > & {\n    __applicationErrorsType?: CreatePickupLocationApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({ pickupLocation: pickupLocation }),\n    [\n      {\n        transformFn: transformSDKAddressToRESTAddress,\n        paths: [{ path: 'pickupLocation.address' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.createPickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocation.address' }],\n        },\n      ])\n    )?.pickupLocation!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { pickupLocation: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocation']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Get a PickupLocation by id\n * @param pickupLocationId - Id of the PickupLocation to retrieve\n * @public\n * @documentationMaturity preview\n * @requiredField pickupLocationId\n * @permissionId ECOM.PICKUP_LOCATION_READ\n * @applicableIdentity APP\n * @returns The retrieved PickupLocation\n * @fqn wix.ecom.v1.PickupLocations.GetPickupLocation\n */\nexport async function getPickupLocation(\n  pickupLocationId: string\n): Promise<\n  NonNullablePaths<\n    PickupLocation,\n    | `address.streetAddress.number`\n    | `address.streetAddress.name`\n    | `rates`\n    | `rates.${number}.amount`\n    | `rates.${number}.multiplyByQuantity`\n    | `deliveryRegionIds`,\n    4\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    pickupLocationId: pickupLocationId,\n  });\n\n  const reqOpts = ambassadorWixEcomV1PickupLocation.getPickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocation.address' }],\n        },\n      ])\n    )?.pickupLocation!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { pickupLocationId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocationId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Update a PickupLocation\n * Delivery regions cannot be updated using this method, use AddDeliveryRegion and RemoveDeliveryRegion instead.\n * @param _id - PickupLocation ID\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField pickupLocation\n * @requiredField pickupLocation.revision\n * @permissionId ECOM.PICKUP_LOCATION_UPDATE\n * @applicableIdentity APP\n * @returns The updated PickupLocation\n * @fqn wix.ecom.v1.PickupLocations.UpdatePickupLocation\n */\nexport async function updatePickupLocation(\n  _id: string,\n  pickupLocation: NonNullablePaths<UpdatePickupLocation, `revision`, 2>\n): Promise<\n  NonNullablePaths<\n    PickupLocation,\n    | `address.streetAddress.number`\n    | `address.streetAddress.name`\n    | `rates`\n    | `rates.${number}.amount`\n    | `rates.${number}.multiplyByQuantity`\n    | `deliveryRegionIds`,\n    4\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      pickupLocation: { ...pickupLocation, id: _id },\n    }),\n    [\n      {\n        transformFn: transformSDKAddressToRESTAddress,\n        paths: [{ path: 'pickupLocation.address' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.updatePickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocation.address' }],\n        },\n      ])\n    )?.pickupLocation!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { pickupLocation: '$[1]' },\n        explicitPathsToArguments: { 'pickupLocation.id': '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'pickupLocation']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdatePickupLocation {\n  /**\n   * PickupLocation ID\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Represents the time this PickupLocation was created\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Represents the time this PickupLocation was last updated\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Pickup Location Name\n   * @minLength 1\n   * @maxLength 100\n   */\n  name?: string | null;\n  /** Pickup Location Address */\n  address?: Address;\n  /**\n   * Expected delivery time in free text. For example, `\"3-5 business days\"`.\n   * @maxLength 500\n   */\n  deliveryTime?: string | null;\n  /**\n   * Instructions for carrier. For example, `\"Please knock on the door. If unanswered, please call contact number. Thanks.\"`.\n   * @maxLength 1000\n   */\n  instructions?: string | null;\n  /** inactive pickup locations should not be shown in checkout */\n  active?: boolean | null;\n  /**\n   * at runtime for a given pickup input, up to one rate (price) should be returned in an option. If more than one rate is valid then we return the lowest one.\n   * @maxSize 50\n   */\n  rates?: ConditionalRates[];\n  /**\n   * This pickup location is active for the following delivery regions.\n   * @maxSize 50\n   * @format GUID\n   */\n  deliveryRegionIds?: string[];\n}\n\n/**\n * Delete a PickupLocation\n * @param pickupLocationId - Id of the PickupLocation to delete\n * @public\n * @documentationMaturity preview\n * @requiredField pickupLocationId\n * @permissionId ECOM.PICKUP_LOCATION_DELETE\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.DeletePickupLocation\n */\nexport async function deletePickupLocation(\n  pickupLocationId: string\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    pickupLocationId: pickupLocationId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.deletePickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { pickupLocationId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocationId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Query PickupLocations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n * @public\n * @documentationMaturity preview\n * @permissionId ECOM.PICKUP_LOCATION_READ\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.QueryPickupLocation\n */\nexport function queryPickupLocation(): PickupLocationsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    PickupLocation,\n    'CURSOR',\n    QueryPickupLocationRequest,\n    QueryPickupLocationResponse\n  >({\n    func: async (payload: QueryPickupLocationRequest) => {\n      const reqOpts =\n        ambassadorWixEcomV1PickupLocation.queryPickupLocation(payload);\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryPickupLocationRequest['query']) => {\n      const args = [query, {}] as [QueryPickupLocationRequest['query'], {}];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryPickupLocationResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [\n          {\n            transformFn: transformRESTAddressToSDKAddress,\n            paths: [{ path: 'pickupLocations.address' }],\n          },\n        ])\n      );\n\n      return {\n        items: transformedData?.pickupLocations,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface PickupLocationsQueryResult extends QueryCursorResult {\n  items: PickupLocation[];\n  query: PickupLocationsQueryBuilder;\n  next: () => Promise<PickupLocationsQueryResult>;\n  prev: () => Promise<PickupLocationsQueryResult>;\n}\n\nexport interface PickupLocationsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city'\n      | 'deliveryRegionIds',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city'\n      | 'deliveryRegionIds',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName:\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city',\n    value: string\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city'\n      | 'deliveryRegionIds',\n    value: any[]\n  ) => PickupLocationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasAll: (\n    propertyName: 'deliveryRegionIds',\n    value: any[]\n  ) => PickupLocationsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city'\n      | 'deliveryRegionIds',\n    value: any\n  ) => PickupLocationsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName:\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'address.country'\n      | 'address.subdivision'\n      | 'address.city'\n      | 'deliveryRegionIds',\n    value: boolean\n  ) => PickupLocationsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => PickupLocationsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => PickupLocationsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<PickupLocationsQueryResult>;\n}\n\n/**\n * Add a DeliveryRegion to a PickupLocation\n * @param pickupLocationId - Id of the PickupLocation to add to the delivery region\n * @param deliveryRegionId - Id of the DeliveryRegion to add the PickupLocation to\n * @public\n * @documentationMaturity preview\n * @requiredField deliveryRegionId\n * @requiredField options\n * @requiredField options.revision\n * @requiredField pickupLocationId\n * @permissionId ECOM.PICKUP_LOCATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.AddDeliveryRegion\n */\nexport async function addDeliveryRegion(\n  pickupLocationId: string,\n  deliveryRegionId: string,\n  options: NonNullablePaths<AddDeliveryRegionOptions, `revision`, 2>\n): Promise<\n  NonNullablePaths<\n    AddDeliveryRegionResponse,\n    | `pickupLocation.address.streetAddress.number`\n    | `pickupLocation.address.streetAddress.name`\n    | `pickupLocation.rates`\n    | `pickupLocation.rates.${number}.amount`\n    | `pickupLocation.rates.${number}.multiplyByQuantity`\n    | `pickupLocation.deliveryRegionIds`,\n    5\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    pickupLocationId: pickupLocationId,\n    deliveryRegionId: deliveryRegionId,\n    revision: options?.revision,\n  });\n\n  const reqOpts = ambassadorWixEcomV1PickupLocation.addDeliveryRegion(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocation.address' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          pickupLocationId: '$[0]',\n          deliveryRegionId: '$[1]',\n          revision: '$[2].revision',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocationId', 'deliveryRegionId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface AddDeliveryRegionOptions {\n  /** Revision of the PickupLocation */\n  revision: string | null;\n}\n\n/**\n * Remove a DeliveryRegion from a PickupLocation\n * @param pickupLocationId - Id of the PickupLocation to add to the delivery region\n * @param deliveryRegionId - Id of the DeliveryRegion to add the PickupLocation to\n * @public\n * @documentationMaturity preview\n * @requiredField deliveryRegionId\n * @requiredField options\n * @requiredField options.revision\n * @requiredField pickupLocationId\n * @permissionId ECOM.PICKUP_LOCATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.RemoveDeliveryRegion\n */\nexport async function removeDeliveryRegion(\n  pickupLocationId: string,\n  deliveryRegionId: string,\n  options: NonNullablePaths<RemoveDeliveryRegionOptions, `revision`, 2>\n): Promise<\n  NonNullablePaths<\n    RemoveDeliveryRegionResponse,\n    | `pickupLocation.address.streetAddress.number`\n    | `pickupLocation.address.streetAddress.name`\n    | `pickupLocation.rates`\n    | `pickupLocation.rates.${number}.amount`\n    | `pickupLocation.rates.${number}.multiplyByQuantity`\n    | `pickupLocation.deliveryRegionIds`,\n    5\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    pickupLocationId: pickupLocationId,\n    deliveryRegionId: deliveryRegionId,\n    revision: options?.revision,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.removeDeliveryRegion(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocation.address' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          pickupLocationId: '$[0]',\n          deliveryRegionId: '$[1]',\n          revision: '$[2].revision',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocationId', 'deliveryRegionId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface RemoveDeliveryRegionOptions {\n  /** Revision of the PickupLocation */\n  revision: string | null;\n}\n\n/**\n * Bulk Create for new PickupLocation\n * @public\n * @documentationMaturity preview\n * @requiredField pickupLocations\n * @requiredField pickupLocations.address\n * @permissionId ECOM.PICKUP_LOCATION_CREATE\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.BulkCreatePickupLocation\n */\nexport async function bulkCreatePickupLocation(\n  pickupLocations: NonNullablePaths<PickupLocation, `address`, 2>[]\n): Promise<\n  NonNullablePaths<\n    BulkCreatePickupLocationResponse,\n    | `pickupLocations`\n    | `pickupLocations.${number}.address.streetAddress.number`\n    | `pickupLocations.${number}.address.streetAddress.name`\n    | `errors`\n    | `errors.${number}._id`\n    | `errors.${number}.error.code`\n    | `errors.${number}.error.description`,\n    6\n  > & {\n    __applicationErrorsType?: BulkCreatePickupLocationApplicationErrors;\n  }\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({ pickupLocations: pickupLocations }),\n    [\n      {\n        transformFn: transformSDKAddressToRESTAddress,\n        paths: [{ path: 'pickupLocations.address' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.bulkCreatePickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocations.address' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { pickupLocations: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocations']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Update a PickupLocation\n * @public\n * @documentationMaturity preview\n * @requiredField pickupLocations\n * @requiredField pickupLocations._id\n * @requiredField pickupLocations.revision\n * @permissionId ECOM.PICKUP_LOCATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.BulkUpdatePickupLocation\n */\nexport async function bulkUpdatePickupLocation(\n  pickupLocations: NonNullablePaths<PickupLocation, `_id` | `revision`, 2>[]\n): Promise<\n  NonNullablePaths<\n    BulkUpdatePickupLocationResponse,\n    | `pickupLocations`\n    | `pickupLocations.${number}.address.streetAddress.number`\n    | `pickupLocations.${number}.address.streetAddress.name`\n    | `errors`\n    | `errors.${number}._id`\n    | `errors.${number}.error.code`\n    | `errors.${number}.error.description`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({ pickupLocations: pickupLocations }),\n    [\n      {\n        transformFn: transformSDKAddressToRESTAddress,\n        paths: [{ path: 'pickupLocations.address' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.bulkUpdatePickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'pickupLocations.address' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { pickupLocations: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocations']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Delete a PickupLocation\n * @public\n * @documentationMaturity preview\n * @requiredField pickupLocationIds\n * @permissionId ECOM.PICKUP_LOCATION_DELETE\n * @applicableIdentity APP\n * @fqn wix.ecom.v1.PickupLocations.BulkDeletePickupLocation\n */\nexport async function bulkDeletePickupLocation(\n  pickupLocationIds: string[]\n): Promise<\n  NonNullablePaths<\n    BulkDeletePickupLocationResponse,\n    | `errors`\n    | `errors.${number}._id`\n    | `errors.${number}.error.code`\n    | `errors.${number}.error.description`,\n    5\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    pickupLocationIds: pickupLocationIds,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1PickupLocation.bulkDeletePickupLocation(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { pickupLocationIds: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['pickupLocationIds']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcomV1PickupLocationsUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/pickup-locations',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/pickup-locations',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_pickup-locations';\n\n/** Creates a new PickupLocation */\nexport function createPickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createPickupLocation({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'pickupLocation.createdDate' },\n          { path: 'pickupLocation.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.CreatePickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/pickup-locations',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocation.createdDate' },\n              { path: 'pickupLocation.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createPickupLocation;\n}\n\n/** Get a PickupLocation by id */\nexport function getPickupLocation(payload: object): RequestOptionsFactory<any> {\n  function __getPickupLocation({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'GET' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.GetPickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/pickup-locations/{pickupLocationId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocation.createdDate' },\n              { path: 'pickupLocation.updatedDate' },\n            ],\n          },\n        ]),\n      fallback: [\n        {\n          method: 'GET' as any,\n          url: resolveWixEcomV1PickupLocationsUrl({\n            protoPath: '/v1/pickup-locations/{pickupLocationId}',\n            data: payload,\n            host,\n          }),\n          params: toURLSearchParams(payload),\n        },\n      ],\n    };\n\n    return metadata;\n  }\n\n  return __getPickupLocation;\n}\n\n/**\n * Update a PickupLocation\n * Delivery regions cannot be updated using this method, use AddDeliveryRegion and RemoveDeliveryRegion instead.\n */\nexport function updatePickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updatePickupLocation({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'pickupLocation.createdDate' },\n          { path: 'pickupLocation.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'PATCH' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.UpdatePickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/pickup-locations/{pickupLocation.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocation.createdDate' },\n              { path: 'pickupLocation.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updatePickupLocation;\n}\n\n/** Delete a PickupLocation */\nexport function deletePickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deletePickupLocation({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.DeletePickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/pickup-locations/{pickupLocationId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deletePickupLocation;\n}\n\n/** Query PickupLocations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) */\nexport function queryPickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryPickupLocation({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.QueryPickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/pickup-locations/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocations.createdDate' },\n              { path: 'pickupLocations.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryPickupLocation;\n}\n\n/** Add a DeliveryRegion to a PickupLocation */\nexport function addDeliveryRegion(payload: object): RequestOptionsFactory<any> {\n  function __addDeliveryRegion({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.AddDeliveryRegion',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath:\n          '/v1/pickup-locations/{pickupLocationId}/add-delivery-region',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocation.createdDate' },\n              { path: 'pickupLocation.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __addDeliveryRegion;\n}\n\n/** Remove a DeliveryRegion from a PickupLocation */\nexport function removeDeliveryRegion(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __removeDeliveryRegion({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.RemoveDeliveryRegion',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath:\n          '/v1/pickup-locations/{pickupLocationId}/remove-delivery-region',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocation.createdDate' },\n              { path: 'pickupLocation.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __removeDeliveryRegion;\n}\n\n/** Bulk Create for new PickupLocation */\nexport function bulkCreatePickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkCreatePickupLocation({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'pickupLocations.createdDate' },\n          { path: 'pickupLocations.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.BulkCreatePickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/bulk/pickup-locations/create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocations.createdDate' },\n              { path: 'pickupLocations.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreatePickupLocation;\n}\n\n/** Update a PickupLocation */\nexport function bulkUpdatePickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdatePickupLocation({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'pickupLocations.createdDate' },\n          { path: 'pickupLocations.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'PATCH' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.BulkUpdatePickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/bulk/pickup-locations/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'pickupLocations.createdDate' },\n              { path: 'pickupLocations.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdatePickupLocation;\n}\n\n/** Delete a PickupLocation */\nexport function bulkDeletePickupLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDeletePickupLocation({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.pickup_location',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.ecom.v1.PickupLocations.BulkDeletePickupLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomV1PickupLocationsUrl({\n        protoPath: '/v1/bulk/pickup-locations/delete',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeletePickupLocation;\n}\n"],"mappings":"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","names":["payload","transformPaths","ConditionType","LogicalOperator","SortOrder","WebhookIdentityType","createPickupLocation","getPickupLocation","updatePickupLocation","deletePickupLocation","queryPickupLocation","addDeliveryRegion","removeDeliveryRegion","bulkCreatePickupLocation","bulkUpdatePickupLocation","bulkDeletePickupLocation"]}