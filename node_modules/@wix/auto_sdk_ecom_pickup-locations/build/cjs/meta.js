"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  addDeliveryRegion: () => addDeliveryRegion2,
  bulkCreatePickupLocation: () => bulkCreatePickupLocation2,
  bulkDeletePickupLocation: () => bulkDeletePickupLocation2,
  bulkUpdatePickupLocation: () => bulkUpdatePickupLocation2,
  createPickupLocation: () => createPickupLocation2,
  deletePickupLocation: () => deletePickupLocation2,
  getPickupLocation: () => getPickupLocation2,
  queryPickupLocation: () => queryPickupLocation2,
  removeDeliveryRegion: () => removeDeliveryRegion2,
  updatePickupLocation: () => updatePickupLocation2
});
module.exports = __toCommonJS(meta_exports);

// src/ecom-v1-pickup-location-pickup-locations.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixEcomV1PickupLocationsUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/pickup-locations",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/pickup-locations",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_pickup-locations";
function createPickupLocation(payload) {
  function __createPickupLocation({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "pickupLocation.createdDate" },
          { path: "pickupLocation.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "POST",
      methodFqn: "wix.ecom.v1.PickupLocations.CreatePickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocation.createdDate" },
            { path: "pickupLocation.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createPickupLocation;
}
function getPickupLocation(payload) {
  function __getPickupLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "GET",
      methodFqn: "wix.ecom.v1.PickupLocations.GetPickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations/{pickupLocationId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocation.createdDate" },
            { path: "pickupLocation.updatedDate" }
          ]
        }
      ]),
      fallback: [
        {
          method: "GET",
          url: resolveWixEcomV1PickupLocationsUrl({
            protoPath: "/v1/pickup-locations/{pickupLocationId}",
            data: payload,
            host
          }),
          params: (0, import_rest_modules.toURLSearchParams)(payload)
        }
      ]
    };
    return metadata;
  }
  return __getPickupLocation;
}
function updatePickupLocation(payload) {
  function __updatePickupLocation({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "pickupLocation.createdDate" },
          { path: "pickupLocation.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "PATCH",
      methodFqn: "wix.ecom.v1.PickupLocations.UpdatePickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations/{pickupLocation.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocation.createdDate" },
            { path: "pickupLocation.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updatePickupLocation;
}
function deletePickupLocation(payload) {
  function __deletePickupLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "DELETE",
      methodFqn: "wix.ecom.v1.PickupLocations.DeletePickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations/{pickupLocationId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deletePickupLocation;
}
function queryPickupLocation(payload) {
  function __queryPickupLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "POST",
      methodFqn: "wix.ecom.v1.PickupLocations.QueryPickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocations.createdDate" },
            { path: "pickupLocations.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryPickupLocation;
}
function addDeliveryRegion(payload) {
  function __addDeliveryRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "POST",
      methodFqn: "wix.ecom.v1.PickupLocations.AddDeliveryRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations/{pickupLocationId}/add-delivery-region",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocation.createdDate" },
            { path: "pickupLocation.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addDeliveryRegion;
}
function removeDeliveryRegion(payload) {
  function __removeDeliveryRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "POST",
      methodFqn: "wix.ecom.v1.PickupLocations.RemoveDeliveryRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/pickup-locations/{pickupLocationId}/remove-delivery-region",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocation.createdDate" },
            { path: "pickupLocation.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeDeliveryRegion;
}
function bulkCreatePickupLocation(payload) {
  function __bulkCreatePickupLocation({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "pickupLocations.createdDate" },
          { path: "pickupLocations.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "POST",
      methodFqn: "wix.ecom.v1.PickupLocations.BulkCreatePickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/bulk/pickup-locations/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocations.createdDate" },
            { path: "pickupLocations.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreatePickupLocation;
}
function bulkUpdatePickupLocation(payload) {
  function __bulkUpdatePickupLocation({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "pickupLocations.createdDate" },
          { path: "pickupLocations.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "PATCH",
      methodFqn: "wix.ecom.v1.PickupLocations.BulkUpdatePickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/bulk/pickup-locations/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "pickupLocations.createdDate" },
            { path: "pickupLocations.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdatePickupLocation;
}
function bulkDeletePickupLocation(payload) {
  function __bulkDeletePickupLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.pickup_location",
      method: "DELETE",
      methodFqn: "wix.ecom.v1.PickupLocations.BulkDeletePickupLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomV1PickupLocationsUrl({
        protoPath: "/v1/bulk/pickup-locations/delete",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __bulkDeletePickupLocation;
}

// src/ecom-v1-pickup-location-pickup-locations.meta.ts
function createPickupLocation2() {
  const payload = {};
  const getRequestOptions = createPickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/pickup-locations",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getPickupLocation2() {
  const payload = { pickupLocationId: ":pickupLocationId" };
  const getRequestOptions = getPickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/pickup-locations/{pickupLocationId}",
    pathParams: { pickupLocationId: "pickupLocationId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updatePickupLocation2() {
  const payload = { pickupLocation: { id: ":pickupLocationId" } };
  const getRequestOptions = updatePickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/pickup-locations/{pickupLocation.id}",
    pathParams: { pickupLocationId: "pickupLocationId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deletePickupLocation2() {
  const payload = { pickupLocationId: ":pickupLocationId" };
  const getRequestOptions = deletePickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/pickup-locations/{pickupLocationId}",
    pathParams: { pickupLocationId: "pickupLocationId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryPickupLocation2() {
  const payload = {};
  const getRequestOptions = queryPickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/pickup-locations/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addDeliveryRegion2() {
  const payload = { pickupLocationId: ":pickupLocationId" };
  const getRequestOptions = addDeliveryRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/pickup-locations/{pickupLocationId}/add-delivery-region",
    pathParams: { pickupLocationId: "pickupLocationId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeDeliveryRegion2() {
  const payload = { pickupLocationId: ":pickupLocationId" };
  const getRequestOptions = removeDeliveryRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/pickup-locations/{pickupLocationId}/remove-delivery-region",
    pathParams: { pickupLocationId: "pickupLocationId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreatePickupLocation2() {
  const payload = {};
  const getRequestOptions = bulkCreatePickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/pickup-locations/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdatePickupLocation2() {
  const payload = {};
  const getRequestOptions = bulkUpdatePickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/bulk/pickup-locations/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeletePickupLocation2() {
  const payload = {};
  const getRequestOptions = bulkDeletePickupLocation(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/bulk/pickup-locations/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addDeliveryRegion,
  bulkCreatePickupLocation,
  bulkDeletePickupLocation,
  bulkUpdatePickupLocation,
  createPickupLocation,
  deletePickupLocation,
  getPickupLocation,
  queryPickupLocation,
  removeDeliveryRegion,
  updatePickupLocation
});
//# sourceMappingURL=meta.js.map