import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { PickupLocation, CreatePickupLocationApplicationErrors, UpdatePickupLocation, PickupLocationsQueryBuilder, AddDeliveryRegionOptions, AddDeliveryRegionResponse, RemoveDeliveryRegionOptions, RemoveDeliveryRegionResponse, BulkCreatePickupLocationResponse, BulkCreatePickupLocationApplicationErrors, BulkUpdatePickupLocationResponse, BulkDeletePickupLocationResponse } from './index.typings.js';
export { ActionEvent, AddDeliveryRegionRequest, Address, AddressStreetOneOf, ApplicationError, BulkCreatePickupLocationRequest, BulkDeletePickupLocationRequest, BulkUpdatePickupLocationRequest, Condition, ConditionType, ConditionTypeWithLiterals, ConditionalRates, CreatePickupLocationRequest, CreatePickupLocationResponse, CursorPaging, CursorPagingMetadata, Cursors, DeletePickupLocationRequest, DeletePickupLocationResponse, DiffmatokyPayload, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, ErrorInformation, GetPickupLocationRequest, GetPickupLocationResponse, IdentificationData, IdentificationDataIdOneOf, LogicalOperator, LogicalOperatorWithLiterals, MessageEnvelope, Paging, PickupLocationError, PickupLocationsQueryResult, QueryPickupLocationRequest, QueryPickupLocationResponse, QueryV2, QueryV2PagingMethodOneOf, RemoveDeliveryRegionRequest, RestoreInfo, SortOrder, SortOrderWithLiterals, Sorting, StreetAddress, UpdatePickupLocationRequest, UpdatePickupLocationResponse, WebhookIdentityType, WebhookIdentityTypeWithLiterals } from './index.typings.js';

declare function createPickupLocation$1(httpClient: HttpClient): CreatePickupLocationSignature;
interface CreatePickupLocationSignature {
    /**
     * Creates a new PickupLocation
     * @param - PickupLocation to be created
     * @returns The created PickupLocation
     */
    (pickupLocation: NonNullablePaths<PickupLocation, `address`, 2>): Promise<NonNullablePaths<PickupLocation, `address.streetAddress.number` | `address.streetAddress.name` | `rates` | `rates.${number}.amount` | `rates.${number}.multiplyByQuantity` | `deliveryRegionIds`, 4> & {
        __applicationErrorsType?: CreatePickupLocationApplicationErrors;
    }>;
}
declare function getPickupLocation$1(httpClient: HttpClient): GetPickupLocationSignature;
interface GetPickupLocationSignature {
    /**
     * Get a PickupLocation by id
     * @param - Id of the PickupLocation to retrieve
     * @returns The retrieved PickupLocation
     */
    (pickupLocationId: string): Promise<NonNullablePaths<PickupLocation, `address.streetAddress.number` | `address.streetAddress.name` | `rates` | `rates.${number}.amount` | `rates.${number}.multiplyByQuantity` | `deliveryRegionIds`, 4>>;
}
declare function updatePickupLocation$1(httpClient: HttpClient): UpdatePickupLocationSignature;
interface UpdatePickupLocationSignature {
    /**
     * Update a PickupLocation
     * Delivery regions cannot be updated using this method, use AddDeliveryRegion and RemoveDeliveryRegion instead.
     * @param - PickupLocation ID
     * @returns The updated PickupLocation
     */
    (_id: string, pickupLocation: NonNullablePaths<UpdatePickupLocation, `revision`, 2>): Promise<NonNullablePaths<PickupLocation, `address.streetAddress.number` | `address.streetAddress.name` | `rates` | `rates.${number}.amount` | `rates.${number}.multiplyByQuantity` | `deliveryRegionIds`, 4>>;
}
declare function deletePickupLocation$1(httpClient: HttpClient): DeletePickupLocationSignature;
interface DeletePickupLocationSignature {
    /**
     * Delete a PickupLocation
     * @param - Id of the PickupLocation to delete
     */
    (pickupLocationId: string): Promise<void>;
}
declare function queryPickupLocation$1(httpClient: HttpClient): QueryPickupLocationSignature;
interface QueryPickupLocationSignature {
    /**
     * Query PickupLocations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)
     */
    (): PickupLocationsQueryBuilder;
}
declare function addDeliveryRegion$1(httpClient: HttpClient): AddDeliveryRegionSignature;
interface AddDeliveryRegionSignature {
    /**
     * Add a DeliveryRegion to a PickupLocation
     * @param - Id of the PickupLocation to add to the delivery region
     * @param - Id of the DeliveryRegion to add the PickupLocation to
     */
    (pickupLocationId: string, deliveryRegionId: string, options: NonNullablePaths<AddDeliveryRegionOptions, `revision`, 2>): Promise<NonNullablePaths<AddDeliveryRegionResponse, `pickupLocation.address.streetAddress.number` | `pickupLocation.address.streetAddress.name` | `pickupLocation.rates` | `pickupLocation.rates.${number}.amount` | `pickupLocation.rates.${number}.multiplyByQuantity` | `pickupLocation.deliveryRegionIds`, 5>>;
}
declare function removeDeliveryRegion$1(httpClient: HttpClient): RemoveDeliveryRegionSignature;
interface RemoveDeliveryRegionSignature {
    /**
     * Remove a DeliveryRegion from a PickupLocation
     * @param - Id of the PickupLocation to add to the delivery region
     * @param - Id of the DeliveryRegion to add the PickupLocation to
     */
    (pickupLocationId: string, deliveryRegionId: string, options: NonNullablePaths<RemoveDeliveryRegionOptions, `revision`, 2>): Promise<NonNullablePaths<RemoveDeliveryRegionResponse, `pickupLocation.address.streetAddress.number` | `pickupLocation.address.streetAddress.name` | `pickupLocation.rates` | `pickupLocation.rates.${number}.amount` | `pickupLocation.rates.${number}.multiplyByQuantity` | `pickupLocation.deliveryRegionIds`, 5>>;
}
declare function bulkCreatePickupLocation$1(httpClient: HttpClient): BulkCreatePickupLocationSignature;
interface BulkCreatePickupLocationSignature {
    /**
     * Bulk Create for new PickupLocation
     */
    (pickupLocations: NonNullablePaths<PickupLocation, `address`, 2>[]): Promise<NonNullablePaths<BulkCreatePickupLocationResponse, `pickupLocations` | `pickupLocations.${number}.address.streetAddress.number` | `pickupLocations.${number}.address.streetAddress.name` | `errors` | `errors.${number}._id` | `errors.${number}.error.code` | `errors.${number}.error.description`, 6> & {
        __applicationErrorsType?: BulkCreatePickupLocationApplicationErrors;
    }>;
}
declare function bulkUpdatePickupLocation$1(httpClient: HttpClient): BulkUpdatePickupLocationSignature;
interface BulkUpdatePickupLocationSignature {
    /**
     * Update a PickupLocation
     */
    (pickupLocations: NonNullablePaths<PickupLocation, `_id` | `revision`, 2>[]): Promise<NonNullablePaths<BulkUpdatePickupLocationResponse, `pickupLocations` | `pickupLocations.${number}.address.streetAddress.number` | `pickupLocations.${number}.address.streetAddress.name` | `errors` | `errors.${number}._id` | `errors.${number}.error.code` | `errors.${number}.error.description`, 6>>;
}
declare function bulkDeletePickupLocation$1(httpClient: HttpClient): BulkDeletePickupLocationSignature;
interface BulkDeletePickupLocationSignature {
    /**
     * Delete a PickupLocation
     */
    (pickupLocationIds: string[]): Promise<NonNullablePaths<BulkDeletePickupLocationResponse, `errors` | `errors.${number}._id` | `errors.${number}.error.code` | `errors.${number}.error.description`, 5>>;
}

declare const createPickupLocation: MaybeContext<BuildRESTFunction<typeof createPickupLocation$1> & typeof createPickupLocation$1>;
declare const getPickupLocation: MaybeContext<BuildRESTFunction<typeof getPickupLocation$1> & typeof getPickupLocation$1>;
declare const updatePickupLocation: MaybeContext<BuildRESTFunction<typeof updatePickupLocation$1> & typeof updatePickupLocation$1>;
declare const deletePickupLocation: MaybeContext<BuildRESTFunction<typeof deletePickupLocation$1> & typeof deletePickupLocation$1>;
declare const queryPickupLocation: MaybeContext<BuildRESTFunction<typeof queryPickupLocation$1> & typeof queryPickupLocation$1>;
declare const addDeliveryRegion: MaybeContext<BuildRESTFunction<typeof addDeliveryRegion$1> & typeof addDeliveryRegion$1>;
declare const removeDeliveryRegion: MaybeContext<BuildRESTFunction<typeof removeDeliveryRegion$1> & typeof removeDeliveryRegion$1>;
declare const bulkCreatePickupLocation: MaybeContext<BuildRESTFunction<typeof bulkCreatePickupLocation$1> & typeof bulkCreatePickupLocation$1>;
declare const bulkUpdatePickupLocation: MaybeContext<BuildRESTFunction<typeof bulkUpdatePickupLocation$1> & typeof bulkUpdatePickupLocation$1>;
declare const bulkDeletePickupLocation: MaybeContext<BuildRESTFunction<typeof bulkDeletePickupLocation$1> & typeof bulkDeletePickupLocation$1>;

export { AddDeliveryRegionOptions, AddDeliveryRegionResponse, BulkCreatePickupLocationApplicationErrors, BulkCreatePickupLocationResponse, BulkDeletePickupLocationResponse, BulkUpdatePickupLocationResponse, CreatePickupLocationApplicationErrors, PickupLocation, PickupLocationsQueryBuilder, RemoveDeliveryRegionOptions, RemoveDeliveryRegionResponse, UpdatePickupLocation, addDeliveryRegion, bulkCreatePickupLocation, bulkDeletePickupLocation, bulkUpdatePickupLocation, createPickupLocation, deletePickupLocation, getPickupLocation, queryPickupLocation, removeDeliveryRegion, updatePickupLocation };
