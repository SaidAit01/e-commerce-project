{"version":3,"sources":["../../../index.ts","../../../src/ecom-v1-shippo-configuration-shippo-configurations.public.ts","../../../src/ecom-v1-shippo-configuration-shippo-configurations.universal.ts","../../../src/ecom-v1-shippo-configuration-shippo-configurations.http.ts","../../../src/ecom-v1-shippo-configuration-shippo-configurations.context.ts"],"sourcesContent":["export * from './src/ecom-v1-shippo-configuration-shippo-configurations.context.js';\n","import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTAddressToSDKAddress } from '@wix/sdk-runtime/transformations/address';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  AddDeliveryRegionOptions,\n  AddDeliveryRegionResponse,\n  CreateShippoConfigurationOptions,\n  RemoveDeliveryRegionIdentifiers,\n  RemoveDeliveryRegionOptions,\n  RemoveDeliveryRegionResponse,\n  ShippoConfiguration,\n  ShippoConfigurationCreatedEnvelope,\n  ShippoConfigurationDeletedEnvelope,\n  ShippoConfigurationUpdatedEnvelope,\n  ShippoConfigurationsQueryBuilder,\n  UpdateExtendedFieldsOptions,\n  UpdateExtendedFieldsResponse,\n  UpdateShippoConfiguration,\n  addDeliveryRegion as universalAddDeliveryRegion,\n  createShippoConfiguration as universalCreateShippoConfiguration,\n  deleteShippoConfiguration as universalDeleteShippoConfiguration,\n  getShippoConfiguration as universalGetShippoConfiguration,\n  queryShippoConfigurations as universalQueryShippoConfigurations,\n  removeDeliveryRegion as universalRemoveDeliveryRegion,\n  updateExtendedFields as universalUpdateExtendedFields,\n  updateShippoConfiguration as universalUpdateShippoConfiguration,\n} from './ecom-v1-shippo-configuration-shippo-configurations.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/ecom' };\n\nexport function createShippoConfiguration(\n  httpClient: HttpClient\n): CreateShippoConfigurationSignature {\n  return (\n    shippoConfiguration: NonNullablePaths<\n      ShippoConfiguration,\n      | `deliveryRegionId`\n      | `osLocationId`\n      | `packageDetails`\n      | `packageDetails.dimensions.height`\n      | `packageDetails.dimensions.length`\n      | `packageDetails.dimensions.width`\n      | `packageType`,\n      4\n    >,\n    options?: CreateShippoConfigurationOptions\n  ) =>\n    universalCreateShippoConfiguration(\n      shippoConfiguration,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateShippoConfigurationSignature {\n  /**\n   * Creates a ShippoConfiguration.\n   * @param - ShippoConfiguration to be created.\n   * @returns The created ShippoConfiguration.\n   */\n  (\n    shippoConfiguration: NonNullablePaths<\n      ShippoConfiguration,\n      | `deliveryRegionId`\n      | `osLocationId`\n      | `packageDetails`\n      | `packageDetails.dimensions.height`\n      | `packageDetails.dimensions.length`\n      | `packageDetails.dimensions.width`\n      | `packageType`,\n      4\n    >,\n    options?: CreateShippoConfigurationOptions\n  ): Promise<\n    NonNullablePaths<\n      ShippoConfiguration,\n      | `domesticServices`\n      | `domesticServices.${number}.service`\n      | `domesticServices.${number}.serviceSettings.handlingFee.value`\n      | `domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n      | `internationalServices`\n      | `internationalServices.${number}.service`\n      | `packageType`\n      | `packageDetails.dimensions.length`\n      | `packageDetails.dimensions.width`\n      | `packageDetails.dimensions.height`\n      | `shipFromAddress.streetAddress.number`\n      | `shipFromAddress.streetAddress.name`\n      | `deliveryRegionIds`,\n      6\n    >\n  >;\n}\n\nexport function getShippoConfiguration(\n  httpClient: HttpClient\n): GetShippoConfigurationSignature {\n  return (shippoConfigurationId: string) =>\n    universalGetShippoConfiguration(\n      shippoConfigurationId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetShippoConfigurationSignature {\n  /**\n   * Retrieves a ShippoConfiguration.\n   * @param - ID of the ShippoConfiguration to retrieve.\n   * @returns The requested ShippoConfiguration.\n   */\n  (shippoConfigurationId: string): Promise<\n    NonNullablePaths<\n      ShippoConfiguration,\n      | `domesticServices`\n      | `domesticServices.${number}.service`\n      | `domesticServices.${number}.serviceSettings.handlingFee.value`\n      | `domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n      | `internationalServices`\n      | `internationalServices.${number}.service`\n      | `packageType`\n      | `packageDetails.dimensions.length`\n      | `packageDetails.dimensions.width`\n      | `packageDetails.dimensions.height`\n      | `shipFromAddress.streetAddress.number`\n      | `shipFromAddress.streetAddress.name`\n      | `deliveryRegionIds`,\n      6\n    >\n  >;\n}\n\nexport function updateShippoConfiguration(\n  httpClient: HttpClient\n): UpdateShippoConfigurationSignature {\n  return (\n    _id: string,\n    shippoConfiguration: NonNullablePaths<\n      UpdateShippoConfiguration,\n      `revision`,\n      2\n    >\n  ) =>\n    universalUpdateShippoConfiguration(\n      _id,\n      shippoConfiguration,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateShippoConfigurationSignature {\n  /**\n   * Updates a ShippoConfiguration.\n   * @param - ShippoConfiguration ID.\n   * @returns Updated ShippoConfiguration.\n   */\n  (\n    _id: string,\n    shippoConfiguration: NonNullablePaths<\n      UpdateShippoConfiguration,\n      `revision`,\n      2\n    >\n  ): Promise<\n    NonNullablePaths<\n      ShippoConfiguration,\n      | `domesticServices`\n      | `domesticServices.${number}.service`\n      | `domesticServices.${number}.serviceSettings.handlingFee.value`\n      | `domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n      | `internationalServices`\n      | `internationalServices.${number}.service`\n      | `packageType`\n      | `packageDetails.dimensions.length`\n      | `packageDetails.dimensions.width`\n      | `packageDetails.dimensions.height`\n      | `shipFromAddress.streetAddress.number`\n      | `shipFromAddress.streetAddress.name`\n      | `deliveryRegionIds`,\n      6\n    >\n  >;\n}\n\nexport function deleteShippoConfiguration(\n  httpClient: HttpClient\n): DeleteShippoConfigurationSignature {\n  return (shippoConfigurationId: string) =>\n    universalDeleteShippoConfiguration(\n      shippoConfigurationId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteShippoConfigurationSignature {\n  /**\n   * Deletes a ShippoConfiguration.\n   * @param - ID of the ShippoConfiguration to delete.\n   */\n  (shippoConfigurationId: string): Promise<void>;\n}\n\nexport function queryShippoConfigurations(\n  httpClient: HttpClient\n): QueryShippoConfigurationsSignature {\n  return () =>\n    universalQueryShippoConfigurations(\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryShippoConfigurationsSignature {\n  /**\n   * Retrieves a list of ShippoConfigurations, given the provided [paging, filtering, and sorting][1].\n   *\n   * Up to 1,000 ShippoConfigurations can be returned per request.\n   *\n   * To learn how to query ShippoConfigurations, see [API Query Language][2].\n   *\n   * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging\n   * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language\n   */\n  (): ShippoConfigurationsQueryBuilder;\n}\n\nexport function updateExtendedFields(\n  httpClient: HttpClient\n): UpdateExtendedFieldsSignature {\n  return (\n    _id: string,\n    namespace: string,\n    options: NonNullablePaths<UpdateExtendedFieldsOptions, `namespaceData`, 2>\n  ) =>\n    universalUpdateExtendedFields(\n      _id,\n      namespace,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateExtendedFieldsSignature {\n  /**\n   * Updates extended fields of a ShippoConfiguration without incrementing revision\n   * @param - ID of the entity to update.\n   * @param - Identifier for the app whose extended fields are being updated.\n   */\n  (\n    _id: string,\n    namespace: string,\n    options: NonNullablePaths<UpdateExtendedFieldsOptions, `namespaceData`, 2>\n  ): Promise<\n    NonNullablePaths<\n      UpdateExtendedFieldsResponse,\n      | `shippoConfiguration.domesticServices`\n      | `shippoConfiguration.domesticServices.${number}.service`\n      | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.value`\n      | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n      | `shippoConfiguration.internationalServices`\n      | `shippoConfiguration.internationalServices.${number}.service`\n      | `shippoConfiguration.packageType`\n      | `shippoConfiguration.packageDetails.dimensions.length`\n      | `shippoConfiguration.packageDetails.dimensions.width`\n      | `shippoConfiguration.packageDetails.dimensions.height`\n      | `shippoConfiguration.shipFromAddress.streetAddress.number`\n      | `shippoConfiguration.shipFromAddress.streetAddress.name`\n      | `shippoConfiguration.deliveryRegionIds`,\n      7\n    >\n  >;\n}\n\nexport function addDeliveryRegion(\n  httpClient: HttpClient\n): AddDeliveryRegionSignature {\n  return (\n    shippoConfigurationId: string,\n    deliveryRegionId: string,\n    options?: AddDeliveryRegionOptions\n  ) =>\n    universalAddDeliveryRegion(\n      shippoConfigurationId,\n      deliveryRegionId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface AddDeliveryRegionSignature {\n  /**\n   * Adds a delivery region to a Shippo configuration.\n   * @param - ID of the ShippoConfiguration to add the delivery region to.\n   * @param - ID of the delivery region to add.\n   */\n  (\n    shippoConfigurationId: string,\n    deliveryRegionId: string,\n    options?: AddDeliveryRegionOptions\n  ): Promise<\n    NonNullablePaths<\n      AddDeliveryRegionResponse,\n      | `shippoConfiguration.domesticServices`\n      | `shippoConfiguration.domesticServices.${number}.service`\n      | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.value`\n      | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n      | `shippoConfiguration.internationalServices`\n      | `shippoConfiguration.internationalServices.${number}.service`\n      | `shippoConfiguration.packageType`\n      | `shippoConfiguration.packageDetails.dimensions.length`\n      | `shippoConfiguration.packageDetails.dimensions.width`\n      | `shippoConfiguration.packageDetails.dimensions.height`\n      | `shippoConfiguration.shipFromAddress.streetAddress.number`\n      | `shippoConfiguration.shipFromAddress.streetAddress.name`\n      | `shippoConfiguration.deliveryRegionIds`,\n      7\n    >\n  >;\n}\n\nexport function removeDeliveryRegion(\n  httpClient: HttpClient\n): RemoveDeliveryRegionSignature {\n  return (\n    identifiers: NonNullablePaths<\n      RemoveDeliveryRegionIdentifiers,\n      `deliveryRegionId` | `shippoConfigurationId`,\n      2\n    >,\n    options?: RemoveDeliveryRegionOptions\n  ) =>\n    universalRemoveDeliveryRegion(\n      identifiers,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface RemoveDeliveryRegionSignature {\n  /**\n   * Removes a delivery region from a Shippo configuration.\n   * When passing the ID of the only existing delivery region, removing it will delete the Shippo configuration.\n   */\n  (\n    identifiers: NonNullablePaths<\n      RemoveDeliveryRegionIdentifiers,\n      `deliveryRegionId` | `shippoConfigurationId`,\n      2\n    >,\n    options?: RemoveDeliveryRegionOptions\n  ): Promise<\n    NonNullablePaths<\n      RemoveDeliveryRegionResponse,\n      | `shippoConfiguration.domesticServices`\n      | `shippoConfiguration.domesticServices.${number}.service`\n      | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.value`\n      | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n      | `shippoConfiguration.internationalServices`\n      | `shippoConfiguration.internationalServices.${number}.service`\n      | `shippoConfiguration.packageType`\n      | `shippoConfiguration.packageDetails.dimensions.length`\n      | `shippoConfiguration.packageDetails.dimensions.width`\n      | `shippoConfiguration.packageDetails.dimensions.height`\n      | `shippoConfiguration.shipFromAddress.streetAddress.number`\n      | `shippoConfiguration.shipFromAddress.streetAddress.name`\n      | `shippoConfiguration.deliveryRegionIds`,\n      7\n    >\n  >;\n}\n\nexport const onShippoConfigurationCreated = EventDefinition(\n  'wix.ecom.v1.shippo_configuration_created',\n  true,\n  (event: ShippoConfigurationCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'entity.shipFromAddress' }],\n        },\n      ])\n    )\n)<ShippoConfigurationCreatedEnvelope>();\nexport const onShippoConfigurationDeleted = EventDefinition(\n  'wix.ecom.v1.shippo_configuration_deleted',\n  true,\n  (event: ShippoConfigurationDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'entity.shipFromAddress' }],\n        },\n      ])\n    )\n)<ShippoConfigurationDeletedEnvelope>();\nexport const onShippoConfigurationUpdated = EventDefinition(\n  'wix.ecom.v1.shippo_configuration_updated',\n  true,\n  (event: ShippoConfigurationUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'entity.shipFromAddress' }],\n        },\n      ])\n    )\n)<ShippoConfigurationUpdatedEnvelope>();\n\nexport {\n  ActionEvent,\n  AddDeliveryRegionOptions,\n  AddDeliveryRegionRequest,\n  AddDeliveryRegionResponse,\n  Address,\n  AddressLocation,\n  BaseEventMetadata,\n  CalculationType,\n  CreateShippoConfigurationOptions,\n  CreateShippoConfigurationRequest,\n  CreateShippoConfigurationResponse,\n  CursorPaging,\n  CursorPagingMetadata,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Cursors,\n  DeleteShippoConfigurationRequest,\n  DeleteShippoConfigurationResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  DomesticService,\n  DomesticServiceSettings,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  ExtendedFields,\n  GetShippoConfigurationRequest,\n  GetShippoConfigurationResponse,\n  HandlingFee,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  InternationalService,\n  InternationalServiceSettings,\n  MessageEnvelope,\n  PackageDetails,\n  PackageDimensions,\n  PackageType,\n  QueryShippoConfigurationsRequest,\n  QueryShippoConfigurationsResponse,\n  RemoveDeliveryRegionIdentifiers,\n  RemoveDeliveryRegionOptions,\n  RemoveDeliveryRegionRequest,\n  RemoveDeliveryRegionResponse,\n  RestoreInfo,\n  ServiceSettings,\n  ShippoConfiguration,\n  ShippoConfigurationCreatedEnvelope,\n  ShippoConfigurationDeletedEnvelope,\n  ShippoConfigurationUpdatedEnvelope,\n  ShippoConfigurationsQueryBuilder,\n  ShippoConfigurationsQueryResult,\n  SortOrder,\n  Sorting,\n  StreetAddress,\n  UpdateExtendedFieldsOptions,\n  UpdateExtendedFieldsRequest,\n  UpdateExtendedFieldsResponse,\n  UpdateShippoConfiguration,\n  UpdateShippoConfigurationRequest,\n  UpdateShippoConfigurationResponse,\n  WebhookIdentityType,\n} from './ecom-v1-shippo-configuration-shippo-configurations.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixEcomV1ShippoConfiguration from './ecom-v1-shippo-configuration-shippo-configurations.http.js';\n// @ts-ignore\nimport { transformSDKAddressToRESTAddress } from '@wix/sdk-runtime/transformations/address';\nimport { transformRESTAddressToSDKAddress } from '@wix/sdk-runtime/transformations/address';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\nexport interface ShippoConfiguration {\n  /**\n   * ShippoConfiguration ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /** @readonly */\n  revision?: string | null;\n  /**\n   * Date and time the ShippoConfiguration was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the ShippoConfiguration was last updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Associated delivery region ID.\n   * @format GUID\n   * @immutable\n   * @deprecated Associated delivery region ID.\n   * @replacedBy delivery_region_ids\n   * @targetRemovalDate 2025-06-01\n   */\n  deliveryRegionId?: string | null;\n  /**\n   * Settings of USPS domestic services.\n   * @maxSize 3\n   */\n  domesticServices?: DomesticServiceSettings[];\n  /**\n   * Settings of USPS international services.\n   * @maxSize 3\n   */\n  internationalServices?: InternationalServiceSettings[];\n  /** Package type. */\n  packageType?: PackageTypeWithLiterals;\n  /** Package details. */\n  packageDetails?: PackageDetails;\n  /**\n   * Location ID from OS location service.\n   * @format GUID\n   */\n  osLocationId?: string | null;\n  /**\n   * Ship from address materialized from OS location.\n   * @readonly\n   */\n  shipFromAddress?: Address;\n  /**\n   * This shippo configuration is active for the following delivery regions.\n   * @maxSize 50\n   * @format GUID\n   * @immutable\n   */\n  deliveryRegionIds?: string[];\n  /**\n   * Backup weight.\n   * @decimalValue options { gte:0, maxScale:5 }\n   */\n  backupWeight?: string | null;\n  /** Data extensions. */\n  extendedFields?: ExtendedFields;\n}\n\nexport interface DomesticServiceSettings {\n  /**\n   * DomesticServiceSettings ID.\n   * @format GUID\n   */\n  _id?: string | null;\n  /** USPS domestic service. */\n  service?: DomesticServiceWithLiterals;\n  /** Service settings. */\n  serviceSettings?: ServiceSettings;\n}\n\nexport enum DomesticService {\n  UNKNOWN_DOMESTIC_SERVICE = 'UNKNOWN_DOMESTIC_SERVICE',\n  GROUND_ADVANTAGE = 'GROUND_ADVANTAGE',\n  PRIORITY_MAIL = 'PRIORITY_MAIL',\n  PRIORITY_MAIL_EXPRESS = 'PRIORITY_MAIL_EXPRESS',\n}\n\n/** @enumType */\nexport type DomesticServiceWithLiterals =\n  | DomesticService\n  | 'UNKNOWN_DOMESTIC_SERVICE'\n  | 'GROUND_ADVANTAGE'\n  | 'PRIORITY_MAIL'\n  | 'PRIORITY_MAIL_EXPRESS';\n\nexport interface ServiceSettings {\n  /**\n   * Estimated delivery time.\n   * @maxLength 500\n   */\n  estimatedDeliveryTime?: string | null;\n  /** Handling fee. */\n  handlingFee?: HandlingFee;\n  /**\n   * Amount above which free delivery is offered.\n   * @decimalValue options { gte:0, maxScale:6 }\n   */\n  freeDeliveryMinimumAmount?: string | null;\n}\n\nexport interface HandlingFee {\n  /**\n   * Value that will be used to calculate the fee. For example, percentage fee with value 5% to calculate the fee.\n   * @decimalValue options { gte:0, maxScale:4 }\n   */\n  value?: string;\n  /** How to calculate the fee: fixed amount or by percentage. */\n  calculationType?: CalculationTypeWithLiterals;\n}\n\nexport enum CalculationType {\n  UNKNOWN_TYPE = 'UNKNOWN_TYPE',\n  FIXED = 'FIXED',\n  PERCENTAGE = 'PERCENTAGE',\n}\n\n/** @enumType */\nexport type CalculationTypeWithLiterals =\n  | CalculationType\n  | 'UNKNOWN_TYPE'\n  | 'FIXED'\n  | 'PERCENTAGE';\n\nexport interface InternationalServiceSettings {\n  /**\n   * InternationalServiceSettings ID.\n   * @format GUID\n   */\n  _id?: string | null;\n  /** USPS international service. */\n  service?: InternationalServiceWithLiterals;\n  /** Service settings. */\n  serviceSettings?: ServiceSettings;\n}\n\nexport enum InternationalService {\n  UNKNOWN_INTERNATIONAL_SERVICE = 'UNKNOWN_INTERNATIONAL_SERVICE',\n  FIRST_CLASS_PACKAGE_INTERNATIONAL = 'FIRST_CLASS_PACKAGE_INTERNATIONAL',\n  PRIORITY_MAIL_INTERNATIONAL = 'PRIORITY_MAIL_INTERNATIONAL',\n  PRIORITY_MAIL_EXPRESS_INTERNATIONAL = 'PRIORITY_MAIL_EXPRESS_INTERNATIONAL',\n}\n\n/** @enumType */\nexport type InternationalServiceWithLiterals =\n  | InternationalService\n  | 'UNKNOWN_INTERNATIONAL_SERVICE'\n  | 'FIRST_CLASS_PACKAGE_INTERNATIONAL'\n  | 'PRIORITY_MAIL_INTERNATIONAL'\n  | 'PRIORITY_MAIL_EXPRESS_INTERNATIONAL';\n\nexport enum PackageType {\n  UNKNOWN_PACKAGE_TYPE = 'UNKNOWN_PACKAGE_TYPE',\n  CUSTOM = 'CUSTOM',\n  FLAT_RATE_ENVELOPE = 'FLAT_RATE_ENVELOPE',\n  PADDED_FLAT_RATE_ENVELOPE = 'PADDED_FLAT_RATE_ENVELOPE',\n  SMALL_FLAT_RATE_BOX = 'SMALL_FLAT_RATE_BOX',\n  MEDIUM_FLAT_RATE_BOX_1 = 'MEDIUM_FLAT_RATE_BOX_1',\n  MEDIUM_FLAT_RATE_BOX_2 = 'MEDIUM_FLAT_RATE_BOX_2',\n  LARGE_FLAT_RATE_BOX = 'LARGE_FLAT_RATE_BOX',\n}\n\n/** @enumType */\nexport type PackageTypeWithLiterals =\n  | PackageType\n  | 'UNKNOWN_PACKAGE_TYPE'\n  | 'CUSTOM'\n  | 'FLAT_RATE_ENVELOPE'\n  | 'PADDED_FLAT_RATE_ENVELOPE'\n  | 'SMALL_FLAT_RATE_BOX'\n  | 'MEDIUM_FLAT_RATE_BOX_1'\n  | 'MEDIUM_FLAT_RATE_BOX_2'\n  | 'LARGE_FLAT_RATE_BOX';\n\nexport interface PackageDetails {\n  /**\n   * Package name. Must be set when package type is CUSTOM.\n   * For other package types, it is read-only, and an exception will be thrown\n   * if it set when creating a ShippoConfiguration.\n   * @maxLength 255\n   */\n  name?: string | null;\n  /**\n   * Package dimensions. Can only be set when package type is CUSTOM.\n   * For other package types, it is read-only, and an exception will be thrown\n   * if it set when creating a ShippoConfiguration.\n   */\n  dimensions?: PackageDimensions;\n  /**\n   * Maximum number of products. Must be set when package type is NOT CUSTOM.\n   * Otherwise, if the package type is CUSTOM, this field cannot be set and an\n   * exception will be thrown if it is set when creating a ShippoConfiguration.\n   */\n  maxNumberOfProducts?: string | null;\n}\n\nexport interface PackageDimensions {\n  /**\n   * Package length.\n   * @decimalValue options { gte:0, maxScale:3 }\n   */\n  length?: string;\n  /**\n   * Package width.\n   * @decimalValue options { gte:0, maxScale:3 }\n   */\n  width?: string;\n  /**\n   * Package height.\n   * @decimalValue options { gte:0, maxScale:3 }\n   */\n  height?: string;\n}\n\n/** Physical address */\nexport interface Address {\n  /**\n   * Two-letter country code in [ISO-3166 alpha-2](https://www.iso.org/obp/ui/#search/code/) format.\n   * @format COUNTRY\n   */\n  country?: string | null;\n  /**\n   * Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://www.iso.org/standard/72483.html) format.\n   * @maxLength 50\n   */\n  subdivision?: string | null;\n  /**\n   * City name.\n   * @maxLength 50\n   */\n  city?: string | null;\n  /**\n   * Postal or zip code.\n   * @maxLength 50\n   */\n  postalCode?: string | null;\n  /** Street address. */\n  streetAddress?: StreetAddress;\n  /**\n   * Main address line (usually street name and number).\n   * @maxLength 150\n   */\n  addressLine1?: string | null;\n  /**\n   * Free text providing more detailed address info. Usually contains apt, suite, floor.\n   * @maxLength 100\n   */\n  addressLine2?: string | null;\n  /**\n   * Country's full name.\n   * @readonly\n   */\n  countryFullname?: string | null;\n  /**\n   * Subdivision full-name.\n   * @readonly\n   */\n  subdivisionFullname?: string | null;\n}\n\nexport interface StreetAddress {\n  /** Street number. */\n  number?: string;\n  /** Street name. */\n  name?: string;\n}\n\nexport interface AddressLocation {\n  /** Address latitude. */\n  latitude?: number | null;\n  /** Address longitude. */\n  longitude?: number | null;\n}\n\nexport interface ExtendedFields {\n  /**\n   * Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\n   * The value of each key is structured according to the schema defined when the extended fields were configured.\n   *\n   * You can only access fields for which you have the appropriate permissions.\n   *\n   * Learn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n   */\n  namespaces?: Record<string, Record<string, any>>;\n}\n\nexport interface CreateShippoConfigurationRequest {\n  /** ShippoConfiguration to be created. */\n  shippoConfiguration: ShippoConfiguration;\n  /** @decimalValue options { gte:0, maxScale:6 } */\n  backupRate?: string | null;\n}\n\nexport interface CreateShippoConfigurationResponse {\n  /** The created ShippoConfiguration. */\n  shippoConfiguration?: ShippoConfiguration;\n}\n\nexport interface GetShippoConfigurationRequest {\n  /**\n   * ID of the ShippoConfiguration to retrieve.\n   * @format GUID\n   */\n  shippoConfigurationId: string;\n}\n\nexport interface GetShippoConfigurationResponse {\n  /** The requested ShippoConfiguration. */\n  shippoConfiguration?: ShippoConfiguration;\n}\n\nexport interface UpdateShippoConfigurationRequest {\n  /** ShippoConfiguration to be updated, may be partial. */\n  shippoConfiguration: ShippoConfiguration;\n}\n\nexport interface UpdateShippoConfigurationResponse {\n  /** Updated ShippoConfiguration. */\n  shippoConfiguration?: ShippoConfiguration;\n}\n\nexport interface DeleteShippoConfigurationRequest {\n  /**\n   * ID of the ShippoConfiguration to delete.\n   * @format GUID\n   */\n  shippoConfigurationId: string;\n}\n\nexport interface DeleteShippoConfigurationResponse {}\n\nexport interface QueryShippoConfigurationsRequest {\n  /** WQL expression. */\n  query?: CursorQuery;\n}\n\nexport interface CursorQuery extends CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object in the following format:\n   * `\"filter\" : {\n   * \"fieldName1\": \"value1\",\n   * \"fieldName2\":{\"$operator\":\"value2\"}\n   * }`\n   * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the following format:\n   * `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n   * @maxSize 5\n   */\n  sort?: Sorting[];\n}\n\n/** @oneof */\nexport interface CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryShippoConfigurationsResponse {\n  /** List of ShippoConfigurations. */\n  shippoConfigurations?: ShippoConfiguration[];\n  /** Paging metadata. */\n  pagingMetadata?: CursorPagingMetadata;\n}\n\nexport interface CursorPagingMetadata {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Cursor strings that point to the next page, previous page, or both. */\n  cursors?: Cursors;\n  /**\n   * Whether there are more pages to retrieve following the current page.\n   *\n   * + `true`: Another page of results can be retrieved.\n   * + `false`: This is the last page.\n   */\n  hasNext?: boolean | null;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface UpdateExtendedFieldsRequest {\n  /** ID of the entity to update. */\n  _id: string;\n  /** Identifier for the app whose extended fields are being updated. */\n  namespace: string;\n  /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */\n  namespaceData: Record<string, any> | null;\n}\n\nexport interface UpdateExtendedFieldsResponse {\n  /** Updated ShippoConfiguration. */\n  shippoConfiguration?: ShippoConfiguration;\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface AddDeliveryRegionRequest {\n  /**\n   * ID of the ShippoConfiguration to add the delivery region to.\n   * @format GUID\n   */\n  shippoConfigurationId: string;\n  /**\n   * ID of the delivery region to add.\n   * @format GUID\n   */\n  deliveryRegionId: string;\n  /** Revision of the ShippoConfiguration. */\n  revision?: string | null;\n}\n\nexport interface AddDeliveryRegionResponse {\n  /** The updated ShippoConfiguration. */\n  shippoConfiguration?: ShippoConfiguration;\n}\n\nexport interface RemoveDeliveryRegionRequest {\n  /**\n   * ID of the ShippoConfiguration to remove the delivery region from.\n   * @format GUID\n   */\n  shippoConfigurationId: string;\n  /**\n   * ID of the delivery region to remove.\n   * @format GUID\n   */\n  deliveryRegionId: string;\n  /** Revision of the ShippoConfiguration. */\n  revision?: string | null;\n}\n\nexport interface RemoveDeliveryRegionResponse {\n  /** The updated ShippoConfiguration, or empty if the ShippoConfiguration was deleted. */\n  shippoConfiguration?: ShippoConfiguration;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface ShippoConfigurationCreatedEnvelope {\n  entity: ShippoConfiguration;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a shipping option is created.\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionId ECOM.SHIPPO_CONFIGURATION_READ\n * @webhook\n * @eventType wix.ecom.v1.shippo_configuration_created\n * @slug created\n * @documentationMaturity preview\n */\nexport declare function onShippoConfigurationCreated(\n  handler: (event: ShippoConfigurationCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface ShippoConfigurationDeletedEnvelope {\n  entity: ShippoConfiguration;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a shipping option is deleted.\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionId ECOM.SHIPPO_CONFIGURATION_READ\n * @webhook\n * @eventType wix.ecom.v1.shippo_configuration_deleted\n * @slug deleted\n * @documentationMaturity preview\n */\nexport declare function onShippoConfigurationDeleted(\n  handler: (event: ShippoConfigurationDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface ShippoConfigurationUpdatedEnvelope {\n  entity: ShippoConfiguration;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a shipping option is updated.\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionId ECOM.SHIPPO_CONFIGURATION_READ\n * @webhook\n * @eventType wix.ecom.v1.shippo_configuration_updated\n * @slug updated\n * @documentationMaturity preview\n */\nexport declare function onShippoConfigurationUpdated(\n  handler: (event: ShippoConfigurationUpdatedEnvelope) => void | Promise<void>\n): void;\n\n/**\n * Creates a ShippoConfiguration.\n * @param shippoConfiguration - ShippoConfiguration to be created.\n * @public\n * @documentationMaturity preview\n * @requiredField shippoConfiguration\n * @requiredField shippoConfiguration.deliveryRegionId\n * @requiredField shippoConfiguration.osLocationId\n * @requiredField shippoConfiguration.packageDetails\n * @requiredField shippoConfiguration.packageDetails.dimensions.height\n * @requiredField shippoConfiguration.packageDetails.dimensions.length\n * @requiredField shippoConfiguration.packageDetails.dimensions.width\n * @requiredField shippoConfiguration.packageType\n * @permissionId ECOM.SHIPPO_CONFIGURATION_CREATE\n * @applicableIdentity APP\n * @returns The created ShippoConfiguration.\n * @fqn wix.ecom.delivery.v1.ShippoService.CreateShippoConfiguration\n */\nexport async function createShippoConfiguration(\n  shippoConfiguration: NonNullablePaths<\n    ShippoConfiguration,\n    | `deliveryRegionId`\n    | `osLocationId`\n    | `packageDetails`\n    | `packageDetails.dimensions.height`\n    | `packageDetails.dimensions.length`\n    | `packageDetails.dimensions.width`\n    | `packageType`,\n    4\n  >,\n  options?: CreateShippoConfigurationOptions\n): Promise<\n  NonNullablePaths<\n    ShippoConfiguration,\n    | `domesticServices`\n    | `domesticServices.${number}.service`\n    | `domesticServices.${number}.serviceSettings.handlingFee.value`\n    | `domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n    | `internationalServices`\n    | `internationalServices.${number}.service`\n    | `packageType`\n    | `packageDetails.dimensions.length`\n    | `packageDetails.dimensions.width`\n    | `packageDetails.dimensions.height`\n    | `shipFromAddress.streetAddress.number`\n    | `shipFromAddress.streetAddress.name`\n    | `deliveryRegionIds`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      shippoConfiguration: shippoConfiguration,\n      backupRate: options?.backupRate,\n    }),\n    [\n      {\n        transformFn: transformSDKAddressToRESTAddress,\n        paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.createShippoConfiguration(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n        },\n      ])\n    )?.shippoConfiguration!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          shippoConfiguration: '$[0]',\n          backupRate: '$[1].backupRate',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['shippoConfiguration', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface CreateShippoConfigurationOptions {\n  /** @decimalValue options { gte:0, maxScale:6 } */\n  backupRate?: string | null;\n}\n\n/**\n * Retrieves a ShippoConfiguration.\n * @param shippoConfigurationId - ID of the ShippoConfiguration to retrieve.\n * @public\n * @documentationMaturity preview\n * @requiredField shippoConfigurationId\n * @permissionId ECOM.SHIPPO_CONFIGURATION_READ\n * @applicableIdentity APP\n * @returns The requested ShippoConfiguration.\n * @fqn wix.ecom.delivery.v1.ShippoService.GetShippoConfiguration\n */\nexport async function getShippoConfiguration(\n  shippoConfigurationId: string\n): Promise<\n  NonNullablePaths<\n    ShippoConfiguration,\n    | `domesticServices`\n    | `domesticServices.${number}.service`\n    | `domesticServices.${number}.serviceSettings.handlingFee.value`\n    | `domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n    | `internationalServices`\n    | `internationalServices.${number}.service`\n    | `packageType`\n    | `packageDetails.dimensions.length`\n    | `packageDetails.dimensions.width`\n    | `packageDetails.dimensions.height`\n    | `shipFromAddress.streetAddress.number`\n    | `shipFromAddress.streetAddress.name`\n    | `deliveryRegionIds`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    shippoConfigurationId: shippoConfigurationId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.getShippoConfiguration(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n        },\n      ])\n    )?.shippoConfiguration!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { shippoConfigurationId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['shippoConfigurationId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates a ShippoConfiguration.\n * @param _id - ShippoConfiguration ID.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField shippoConfiguration\n * @requiredField shippoConfiguration.revision\n * @permissionId ECOM.SHIPPO_CONFIGURATION_UPDATE\n * @applicableIdentity APP\n * @returns Updated ShippoConfiguration.\n * @fqn wix.ecom.delivery.v1.ShippoService.UpdateShippoConfiguration\n */\nexport async function updateShippoConfiguration(\n  _id: string,\n  shippoConfiguration: NonNullablePaths<\n    UpdateShippoConfiguration,\n    `revision`,\n    2\n  >\n): Promise<\n  NonNullablePaths<\n    ShippoConfiguration,\n    | `domesticServices`\n    | `domesticServices.${number}.service`\n    | `domesticServices.${number}.serviceSettings.handlingFee.value`\n    | `domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n    | `internationalServices`\n    | `internationalServices.${number}.service`\n    | `packageType`\n    | `packageDetails.dimensions.length`\n    | `packageDetails.dimensions.width`\n    | `packageDetails.dimensions.height`\n    | `shipFromAddress.streetAddress.number`\n    | `shipFromAddress.streetAddress.name`\n    | `deliveryRegionIds`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      shippoConfiguration: { ...shippoConfiguration, id: _id },\n    }),\n    [\n      {\n        transformFn: transformSDKAddressToRESTAddress,\n        paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.updateShippoConfiguration(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n        },\n      ])\n    )?.shippoConfiguration!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { shippoConfiguration: '$[1]' },\n        explicitPathsToArguments: { 'shippoConfiguration.id': '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'shippoConfiguration']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateShippoConfiguration {\n  /**\n   * ShippoConfiguration ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /** @readonly */\n  revision?: string | null;\n  /**\n   * Date and time the ShippoConfiguration was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the ShippoConfiguration was last updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Associated delivery region ID.\n   * @format GUID\n   * @immutable\n   * @deprecated Associated delivery region ID.\n   * @replacedBy delivery_region_ids\n   * @targetRemovalDate 2025-06-01\n   */\n  deliveryRegionId?: string | null;\n  /**\n   * Settings of USPS domestic services.\n   * @maxSize 3\n   */\n  domesticServices?: DomesticServiceSettings[];\n  /**\n   * Settings of USPS international services.\n   * @maxSize 3\n   */\n  internationalServices?: InternationalServiceSettings[];\n  /** Package type. */\n  packageType?: PackageTypeWithLiterals;\n  /** Package details. */\n  packageDetails?: PackageDetails;\n  /**\n   * Location ID from OS location service.\n   * @format GUID\n   */\n  osLocationId?: string | null;\n  /**\n   * Ship from address materialized from OS location.\n   * @readonly\n   */\n  shipFromAddress?: Address;\n  /**\n   * This shippo configuration is active for the following delivery regions.\n   * @maxSize 50\n   * @format GUID\n   * @immutable\n   */\n  deliveryRegionIds?: string[];\n  /**\n   * Backup weight.\n   * @decimalValue options { gte:0, maxScale:5 }\n   */\n  backupWeight?: string | null;\n  /** Data extensions. */\n  extendedFields?: ExtendedFields;\n}\n\n/**\n * Deletes a ShippoConfiguration.\n * @param shippoConfigurationId - ID of the ShippoConfiguration to delete.\n * @public\n * @documentationMaturity preview\n * @requiredField shippoConfigurationId\n * @permissionId ECOM.SHIPPO_CONFIGURATION_DELETE\n * @applicableIdentity APP\n * @fqn wix.ecom.delivery.v1.ShippoService.DeleteShippoConfiguration\n */\nexport async function deleteShippoConfiguration(\n  shippoConfigurationId: string\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    shippoConfigurationId: shippoConfigurationId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.deleteShippoConfiguration(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { shippoConfigurationId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['shippoConfigurationId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of ShippoConfigurations, given the provided [paging, filtering, and sorting][1].\n *\n * Up to 1,000 ShippoConfigurations can be returned per request.\n *\n * To learn how to query ShippoConfigurations, see [API Query Language][2].\n *\n * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging\n * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language\n * @public\n * @documentationMaturity preview\n * @permissionId ECOM.SHIPPO_CONFIGURATION_READ\n * @applicableIdentity APP\n * @fqn wix.ecom.delivery.v1.ShippoService.QueryShippoConfigurations\n */\nexport function queryShippoConfigurations(): ShippoConfigurationsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    ShippoConfiguration,\n    'CURSOR',\n    QueryShippoConfigurationsRequest,\n    QueryShippoConfigurationsResponse\n  >({\n    func: async (payload: QueryShippoConfigurationsRequest) => {\n      const reqOpts =\n        ambassadorWixEcomV1ShippoConfiguration.queryShippoConfigurations(\n          payload\n        );\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryShippoConfigurationsRequest['query']) => {\n      const args = [query, {}] as [\n        QueryShippoConfigurationsRequest['query'],\n        {}\n      ];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryShippoConfigurationsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [\n          {\n            transformFn: transformRESTAddressToSDKAddress,\n            paths: [{ path: 'shippoConfigurations.shipFromAddress' }],\n          },\n        ])\n      );\n\n      return {\n        items: transformedData?.shippoConfigurations,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface ShippoConfigurationsQueryResult extends QueryCursorResult {\n  items: ShippoConfiguration[];\n  query: ShippoConfigurationsQueryBuilder;\n  next: () => Promise<ShippoConfigurationsQueryResult>;\n  prev: () => Promise<ShippoConfigurationsQueryResult>;\n}\n\nexport interface ShippoConfigurationsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: string\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any[]\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: any\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName: '_id' | 'deliveryRegionId',\n    value: boolean\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  ascending: (\n    ...propertyNames: Array<'_id' | 'deliveryRegionId'>\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  descending: (\n    ...propertyNames: Array<'_id' | 'deliveryRegionId'>\n  ) => ShippoConfigurationsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => ShippoConfigurationsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => ShippoConfigurationsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<ShippoConfigurationsQueryResult>;\n}\n\n/**\n * Updates extended fields of a ShippoConfiguration without incrementing revision\n * @param _id - ID of the entity to update.\n * @param namespace - Identifier for the app whose extended fields are being updated.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField namespace\n * @requiredField options\n * @requiredField options.namespaceData\n * @permissionId ECOM.SHIPPO_CONFIGURATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.delivery.v1.ShippoService.UpdateExtendedFields\n */\nexport async function updateExtendedFields(\n  _id: string,\n  namespace: string,\n  options: NonNullablePaths<UpdateExtendedFieldsOptions, `namespaceData`, 2>\n): Promise<\n  NonNullablePaths<\n    UpdateExtendedFieldsResponse,\n    | `shippoConfiguration.domesticServices`\n    | `shippoConfiguration.domesticServices.${number}.service`\n    | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.value`\n    | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n    | `shippoConfiguration.internationalServices`\n    | `shippoConfiguration.internationalServices.${number}.service`\n    | `shippoConfiguration.packageType`\n    | `shippoConfiguration.packageDetails.dimensions.length`\n    | `shippoConfiguration.packageDetails.dimensions.width`\n    | `shippoConfiguration.packageDetails.dimensions.height`\n    | `shippoConfiguration.shipFromAddress.streetAddress.number`\n    | `shippoConfiguration.shipFromAddress.streetAddress.name`\n    | `shippoConfiguration.deliveryRegionIds`,\n    7\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    id: _id,\n    namespace: namespace,\n    namespaceData: options?.namespaceData,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.updateExtendedFields(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          id: '$[0]',\n          namespace: '$[1]',\n          namespaceData: '$[2].namespaceData',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'namespace', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateExtendedFieldsOptions {\n  /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */\n  namespaceData: Record<string, any> | null;\n}\n\n/**\n * Adds a delivery region to a Shippo configuration.\n * @param shippoConfigurationId - ID of the ShippoConfiguration to add the delivery region to.\n * @param deliveryRegionId - ID of the delivery region to add.\n * @public\n * @documentationMaturity preview\n * @requiredField deliveryRegionId\n * @requiredField shippoConfigurationId\n * @permissionId ECOM.SHIPPO_CONFIGURATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.delivery.v1.ShippoService.AddDeliveryRegion\n */\nexport async function addDeliveryRegion(\n  shippoConfigurationId: string,\n  deliveryRegionId: string,\n  options?: AddDeliveryRegionOptions\n): Promise<\n  NonNullablePaths<\n    AddDeliveryRegionResponse,\n    | `shippoConfiguration.domesticServices`\n    | `shippoConfiguration.domesticServices.${number}.service`\n    | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.value`\n    | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n    | `shippoConfiguration.internationalServices`\n    | `shippoConfiguration.internationalServices.${number}.service`\n    | `shippoConfiguration.packageType`\n    | `shippoConfiguration.packageDetails.dimensions.length`\n    | `shippoConfiguration.packageDetails.dimensions.width`\n    | `shippoConfiguration.packageDetails.dimensions.height`\n    | `shippoConfiguration.shipFromAddress.streetAddress.number`\n    | `shippoConfiguration.shipFromAddress.streetAddress.name`\n    | `shippoConfiguration.deliveryRegionIds`,\n    7\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    shippoConfigurationId: shippoConfigurationId,\n    deliveryRegionId: deliveryRegionId,\n    revision: options?.revision,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.addDeliveryRegion(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          shippoConfigurationId: '$[0]',\n          deliveryRegionId: '$[1]',\n          revision: '$[2].revision',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['shippoConfigurationId', 'deliveryRegionId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface AddDeliveryRegionOptions {\n  /** Revision of the ShippoConfiguration. */\n  revision?: string | null;\n}\n\n/**\n * Removes a delivery region from a Shippo configuration.\n * When passing the ID of the only existing delivery region, removing it will delete the Shippo configuration.\n * @public\n * @documentationMaturity preview\n * @requiredField identifiers\n * @requiredField identifiers.deliveryRegionId\n * @requiredField identifiers.shippoConfigurationId\n * @permissionId ECOM.SHIPPO_CONFIGURATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.delivery.v1.ShippoService.RemoveDeliveryRegion\n */\nexport async function removeDeliveryRegion(\n  identifiers: NonNullablePaths<\n    RemoveDeliveryRegionIdentifiers,\n    `deliveryRegionId` | `shippoConfigurationId`,\n    2\n  >,\n  options?: RemoveDeliveryRegionOptions\n): Promise<\n  NonNullablePaths<\n    RemoveDeliveryRegionResponse,\n    | `shippoConfiguration.domesticServices`\n    | `shippoConfiguration.domesticServices.${number}.service`\n    | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.value`\n    | `shippoConfiguration.domesticServices.${number}.serviceSettings.handlingFee.calculationType`\n    | `shippoConfiguration.internationalServices`\n    | `shippoConfiguration.internationalServices.${number}.service`\n    | `shippoConfiguration.packageType`\n    | `shippoConfiguration.packageDetails.dimensions.length`\n    | `shippoConfiguration.packageDetails.dimensions.width`\n    | `shippoConfiguration.packageDetails.dimensions.height`\n    | `shippoConfiguration.shipFromAddress.streetAddress.number`\n    | `shippoConfiguration.shipFromAddress.streetAddress.name`\n    | `shippoConfiguration.deliveryRegionIds`,\n    7\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    shippoConfigurationId: identifiers?.shippoConfigurationId,\n    deliveryRegionId: identifiers?.deliveryRegionId,\n    revision: options?.revision,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1ShippoConfiguration.removeDeliveryRegion(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTAddressToSDKAddress,\n          paths: [{ path: 'shippoConfiguration.shipFromAddress' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          shippoConfigurationId: '$[0].shippoConfigurationId',\n          deliveryRegionId: '$[0].deliveryRegionId',\n          revision: '$[1].revision',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['identifiers', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface RemoveDeliveryRegionIdentifiers {\n  /**\n   * ID of the ShippoConfiguration to remove the delivery region from.\n   * @format GUID\n   */\n  shippoConfigurationId: string;\n  /**\n   * ID of the delivery region to remove.\n   * @format GUID\n   */\n  deliveryRegionId: string;\n}\n\nexport interface RemoveDeliveryRegionOptions {\n  /** Revision of the ShippoConfiguration. */\n  revision?: string | null;\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcomDeliveryV1ShippoServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/shippo-service',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/shippo-configurations',\n        destPath: '/v1/shippo-configurations',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_shippo-configurations';\n\n/** Creates a ShippoConfiguration. */\nexport function createShippoConfiguration(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createShippoConfiguration({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'shippoConfiguration.createdDate' },\n          { path: 'shippoConfiguration.updatedDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n          { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.CreateShippoConfiguration',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath: '/v1/shippo-configurations',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfiguration.createdDate' },\n              { path: 'shippoConfiguration.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n              { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createShippoConfiguration;\n}\n\n/** Retrieves a ShippoConfiguration. */\nexport function getShippoConfiguration(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getShippoConfiguration({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'GET' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.GetShippoConfiguration',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath: '/v1/shippo-configurations/{shippoConfigurationId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfiguration.createdDate' },\n              { path: 'shippoConfiguration.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n              { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getShippoConfiguration;\n}\n\n/** Updates a ShippoConfiguration. */\nexport function updateShippoConfiguration(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateShippoConfiguration({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'shippoConfiguration.createdDate' },\n          { path: 'shippoConfiguration.updatedDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n          { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'PATCH' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.UpdateShippoConfiguration',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath: '/v1/shippo-configurations/{shippoConfiguration.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfiguration.createdDate' },\n              { path: 'shippoConfiguration.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n              { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateShippoConfiguration;\n}\n\n/** Deletes a ShippoConfiguration. */\nexport function deleteShippoConfiguration(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteShippoConfiguration({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.DeleteShippoConfiguration',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath: '/v1/shippo-configurations/{shippoConfigurationId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteShippoConfiguration;\n}\n\n/**\n * Retrieves a list of ShippoConfigurations, given the provided [paging, filtering, and sorting][1].\n *\n * Up to 1,000 ShippoConfigurations can be returned per request.\n *\n * To learn how to query ShippoConfigurations, see [API Query Language][2].\n *\n * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging\n * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language\n */\nexport function queryShippoConfigurations(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryShippoConfigurations({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'GET' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.QueryShippoConfigurations',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath: '/v1/shippo-configurations/query',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload, true),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfigurations.createdDate' },\n              { path: 'shippoConfigurations.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfigurations.shipFromAddress.geocode.latitude' },\n              {\n                path: 'shippoConfigurations.shipFromAddress.geocode.longitude',\n              },\n            ],\n          },\n        ]),\n      fallback: [\n        {\n          method: 'POST' as any,\n          url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n            protoPath: '/v1/shippo-configurations/query',\n            data: payload,\n            host,\n          }),\n          data: payload,\n        },\n      ],\n    };\n\n    return metadata;\n  }\n\n  return __queryShippoConfigurations;\n}\n\n/** Updates extended fields of a ShippoConfiguration without incrementing revision */\nexport function updateExtendedFields(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateExtendedFields({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.UpdateExtendedFields',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath: '/v1/shippo-configurations/{id}/update-extended-fields',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfiguration.createdDate' },\n              { path: 'shippoConfiguration.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n              { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateExtendedFields;\n}\n\n/** Adds a delivery region to a Shippo configuration. */\nexport function addDeliveryRegion(payload: object): RequestOptionsFactory<any> {\n  function __addDeliveryRegion({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'POST' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.AddDeliveryRegion',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath:\n          '/v1/shippo-configurations/{shippoConfigurationId}/delivery-regions',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfiguration.createdDate' },\n              { path: 'shippoConfiguration.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n              { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __addDeliveryRegion;\n}\n\n/**\n * Removes a delivery region from a Shippo configuration.\n * When passing the ID of the only existing delivery region, removing it will delete the Shippo configuration.\n */\nexport function removeDeliveryRegion(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __removeDeliveryRegion({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.shippo_configuration',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.ecom.delivery.v1.ShippoService.RemoveDeliveryRegion',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomDeliveryV1ShippoServiceUrl({\n        protoPath:\n          '/v1/shippo-configurations/{shippoConfigurationId}/delivery-regions/{deliveryRegionId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'shippoConfiguration.createdDate' },\n              { path: 'shippoConfiguration.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'shippoConfiguration.shipFromAddress.geocode.latitude' },\n              { path: 'shippoConfiguration.shipFromAddress.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __removeDeliveryRegion;\n}\n","import {\n  createShippoConfiguration as publicCreateShippoConfiguration,\n  getShippoConfiguration as publicGetShippoConfiguration,\n  updateShippoConfiguration as publicUpdateShippoConfiguration,\n  deleteShippoConfiguration as publicDeleteShippoConfiguration,\n  queryShippoConfigurations as publicQueryShippoConfigurations,\n  updateExtendedFields as publicUpdateExtendedFields,\n  addDeliveryRegion as publicAddDeliveryRegion,\n  removeDeliveryRegion as publicRemoveDeliveryRegion,\n} from './ecom-v1-shippo-configuration-shippo-configurations.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onShippoConfigurationCreated as publicOnShippoConfigurationCreated } from './ecom-v1-shippo-configuration-shippo-configurations.public.js';\nimport { onShippoConfigurationDeleted as publicOnShippoConfigurationDeleted } from './ecom-v1-shippo-configuration-shippo-configurations.public.js';\nimport { onShippoConfigurationUpdated as publicOnShippoConfigurationUpdated } from './ecom-v1-shippo-configuration-shippo-configurations.public.js';\n\nexport const createShippoConfiguration: MaybeContext<\n  BuildRESTFunction<typeof publicCreateShippoConfiguration> &\n    typeof publicCreateShippoConfiguration\n> = /*#__PURE__*/ createRESTModule(publicCreateShippoConfiguration);\nexport const getShippoConfiguration: MaybeContext<\n  BuildRESTFunction<typeof publicGetShippoConfiguration> &\n    typeof publicGetShippoConfiguration\n> = /*#__PURE__*/ createRESTModule(publicGetShippoConfiguration);\nexport const updateShippoConfiguration: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateShippoConfiguration> &\n    typeof publicUpdateShippoConfiguration\n> = /*#__PURE__*/ createRESTModule(publicUpdateShippoConfiguration);\nexport const deleteShippoConfiguration: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteShippoConfiguration> &\n    typeof publicDeleteShippoConfiguration\n> = /*#__PURE__*/ createRESTModule(publicDeleteShippoConfiguration);\nexport const queryShippoConfigurations: MaybeContext<\n  BuildRESTFunction<typeof publicQueryShippoConfigurations> &\n    typeof publicQueryShippoConfigurations\n> = /*#__PURE__*/ createRESTModule(publicQueryShippoConfigurations);\nexport const updateExtendedFields: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateExtendedFields> &\n    typeof publicUpdateExtendedFields\n> = /*#__PURE__*/ createRESTModule(publicUpdateExtendedFields);\nexport const addDeliveryRegion: MaybeContext<\n  BuildRESTFunction<typeof publicAddDeliveryRegion> &\n    typeof publicAddDeliveryRegion\n> = /*#__PURE__*/ createRESTModule(publicAddDeliveryRegion);\nexport const removeDeliveryRegion: MaybeContext<\n  BuildRESTFunction<typeof publicRemoveDeliveryRegion> &\n    typeof publicRemoveDeliveryRegion\n> = /*#__PURE__*/ createRESTModule(publicRemoveDeliveryRegion);\n/**\n * Triggered when a shipping option is created.\n */\nexport const onShippoConfigurationCreated: BuildEventDefinition<\n  typeof publicOnShippoConfigurationCreated\n> &\n  typeof publicOnShippoConfigurationCreated = createEventModule(\n  publicOnShippoConfigurationCreated\n);\n/**\n * Triggered when a shipping option is deleted.\n */\nexport const onShippoConfigurationDeleted: BuildEventDefinition<\n  typeof publicOnShippoConfigurationDeleted\n> &\n  typeof publicOnShippoConfigurationDeleted = createEventModule(\n  publicOnShippoConfigurationDeleted\n);\n/**\n * Triggered when a shipping option is updated.\n */\nexport const onShippoConfigurationUpdated: BuildEventDefinition<\n  typeof publicOnShippoConfigurationUpdated\n> &\n  typeof publicOnShippoConfigurationUpdated = createEventModule(\n  publicOnShippoConfigurationUpdated\n);\n\nexport {\n  DomesticService,\n  CalculationType,\n  InternationalService,\n  PackageType,\n  SortOrder,\n  WebhookIdentityType,\n} from './ecom-v1-shippo-configuration-shippo-configurations.universal.js';\nexport {\n  ShippoConfiguration,\n  DomesticServiceSettings,\n  ServiceSettings,\n  HandlingFee,\n  InternationalServiceSettings,\n  PackageDetails,\n  PackageDimensions,\n  Address,\n  StreetAddress,\n  AddressLocation,\n  ExtendedFields,\n  CreateShippoConfigurationRequest,\n  CreateShippoConfigurationResponse,\n  GetShippoConfigurationRequest,\n  GetShippoConfigurationResponse,\n  UpdateShippoConfigurationRequest,\n  UpdateShippoConfigurationResponse,\n  DeleteShippoConfigurationRequest,\n  DeleteShippoConfigurationResponse,\n  QueryShippoConfigurationsRequest,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Sorting,\n  CursorPaging,\n  QueryShippoConfigurationsResponse,\n  CursorPagingMetadata,\n  Cursors,\n  UpdateExtendedFieldsRequest,\n  UpdateExtendedFieldsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  AddDeliveryRegionRequest,\n  AddDeliveryRegionResponse,\n  RemoveDeliveryRegionRequest,\n  RemoveDeliveryRegionResponse,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  ShippoConfigurationCreatedEnvelope,\n  ShippoConfigurationDeletedEnvelope,\n  ShippoConfigurationUpdatedEnvelope,\n  CreateShippoConfigurationOptions,\n  UpdateShippoConfiguration,\n  ShippoConfigurationsQueryResult,\n  ShippoConfigurationsQueryBuilder,\n  UpdateExtendedFieldsOptions,\n  AddDeliveryRegionOptions,\n  RemoveDeliveryRegionIdentifiers,\n  RemoveDeliveryRegionOptions,\n} from './ecom-v1-shippo-configuration-shippo-configurations.universal.js';\nexport {\n  DomesticServiceWithLiterals,\n  CalculationTypeWithLiterals,\n  InternationalServiceWithLiterals,\n  PackageTypeWithLiterals,\n  SortOrderWithLiterals,\n  WebhookIdentityTypeWithLiterals,\n} from './ecom-v1-shippo-configuration-shippo-configurations.universal.js';\n"],"mappings":"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","names":["addDeliveryRegion","createShippoConfiguration","deleteShippoConfiguration","getShippoConfiguration","onShippoConfigurationCreated","onShippoConfigurationDeleted","onShippoConfigurationUpdated","queryShippoConfigurations","removeDeliveryRegion","updateExtendedFields","updateShippoConfiguration","import_rename_all_nested_keys","import_address","import_timestamp","import_transform_paths","import_float","import_timestamp","import_rest_modules","payload","import_address","import_transform_paths","DomesticService","CalculationType","InternationalService","PackageType","SortOrder","WebhookIdentityType","createShippoConfiguration","sdkTransformError","getShippoConfiguration","updateShippoConfiguration","deleteShippoConfiguration","queryShippoConfigurations","updateExtendedFields","addDeliveryRegion","removeDeliveryRegion","createShippoConfiguration","getShippoConfiguration","updateShippoConfiguration","deleteShippoConfiguration","queryShippoConfigurations","updateExtendedFields","addDeliveryRegion","removeDeliveryRegion","import_rest_modules","createShippoConfiguration","getShippoConfiguration","updateShippoConfiguration","deleteShippoConfiguration","queryShippoConfigurations","updateExtendedFields","addDeliveryRegion","removeDeliveryRegion","onShippoConfigurationCreated","onShippoConfigurationDeleted","onShippoConfigurationUpdated"]}