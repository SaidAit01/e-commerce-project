{"version":3,"sources":["../../../src/ecom-v1-orders-settings-orders-settings.public.ts","../../../src/ecom-v1-orders-settings-orders-settings.universal.ts","../../../src/ecom-v1-orders-settings-orders-settings.http.ts","../../../src/ecom-v1-orders-settings-orders-settings.context.ts"],"sourcesContent":["import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  GetOrdersSettingsResponse,\n  OrdersSettings,\n  OrdersSettingsUpdatedEnvelope,\n  UpdateOrdersSettingsResponse,\n  getOrdersSettings as universalGetOrdersSettings,\n  updateOrdersSettings as universalUpdateOrdersSettings,\n} from './ecom-v1-orders-settings-orders-settings.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/ecom' };\n\nexport function getOrdersSettings(\n  httpClient: HttpClient\n): GetOrdersSettingsSignature {\n  return () =>\n    universalGetOrdersSettings(\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetOrdersSettingsSignature {\n  /**\n   * Retrieves the sites' order settings.\n   *\n   *\n   * The `getOrdersSettings()` function returns a Promise that resolves to orders settings.\n   * @returns The requested orders settings.\n   */\n  (): Promise<\n    NonNullablePaths<\n      GetOrdersSettingsResponse,\n      `ordersSettings.inventoryUpdateTrigger`,\n      3\n    >\n  >;\n}\n\nexport function updateOrdersSettings(\n  httpClient: HttpClient\n): UpdateOrdersSettingsSignature {\n  return (ordersSettings: OrdersSettings) =>\n    universalUpdateOrdersSettings(\n      ordersSettings,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateOrdersSettingsSignature {\n  /**\n   * Updates the sites' orders settings.\n   *\n   *\n   * The `updateOrdersSettings()` function returns a Promise that resolves to the newly updated orders settings.\n   * @param - Orders settings to update.\n   * @returns The updated orders settings.\n   */\n  (ordersSettings: OrdersSettings): Promise<\n    NonNullablePaths<\n      UpdateOrdersSettingsResponse,\n      `ordersSettings.inventoryUpdateTrigger`,\n      3\n    >\n  >;\n}\n\nexport const onOrdersSettingsUpdated = EventDefinition(\n  'wix.ecom.v1.orders_settings_updated',\n  true,\n  (event: OrdersSettingsUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<OrdersSettingsUpdatedEnvelope>();\n\nexport {\n  ActionEvent,\n  BaseEventMetadata,\n  DeleteOrdersSettingsRequest,\n  DeleteOrdersSettingsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  GetOrdersSettingsRequest,\n  GetOrdersSettingsResponse,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  InventoryUpdateTrigger,\n  ListOrdersSettingsRequest,\n  ListOrdersSettingsResponse,\n  MessageEnvelope,\n  OrdersSettings,\n  OrdersSettingsUpdatedEnvelope,\n  RestoreInfo,\n  UpdateOrdersSettingsRequest,\n  UpdateOrdersSettingsResponse,\n  WebhookIdentityType,\n} from './ecom-v1-orders-settings-orders-settings.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixEcomV1OrdersSettings from './ecom-v1-orders-settings-orders-settings.http.js';\n\nexport interface OrdersSettings {\n  /**\n   * Defines when to update the store inventory.\n   *\n   * - `ON_ORDER_PAID`: Stock quantities will update only after the payment is approved.\n   *  - `ON_ORDER_PLACED`: Stock quantities will update while the payment is being processed. If the payment did not go through, items will restock.\n   *\n   * Default: `ON_ORDER_PLACED`\n   */\n  inventoryUpdateTrigger?: InventoryUpdateTriggerWithLiterals;\n  /**\n   * Whether to automatically create invoices for every new order paid online.\n   * Default: `false`\n   */\n  createInvoice?: boolean | null;\n  /**\n   * Date and time the orders settings were created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the orders settings were updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Whether to automatically generate invoices for every new paid order.\n   *\n   * > **Notes**:\n   * > + Default: `false`\n   * > + An invoice issued for an order is not a tax invoice and does not reflect refunds. It is your responsibility to ensure that the invoices you issue conform to any relevant legal requirements.\n   * @internal\n   */\n  autoGenerateInvoiceOnPaidOrder?: boolean | null;\n}\n\nexport enum InventoryUpdateTrigger {\n  UNKNOWN_INVENTORY_UPDATE_TRIGGER = 'UNKNOWN_INVENTORY_UPDATE_TRIGGER',\n  /** Stock quantities will update only after the payment is approved. */\n  ON_ORDER_PAID = 'ON_ORDER_PAID',\n  /** Stock quantities will update while the payment is being processed. If the payment did not go through, items will restock. */\n  ON_ORDER_PLACED = 'ON_ORDER_PLACED',\n}\n\n/** @enumType */\nexport type InventoryUpdateTriggerWithLiterals =\n  | InventoryUpdateTrigger\n  | 'UNKNOWN_INVENTORY_UPDATE_TRIGGER'\n  | 'ON_ORDER_PAID'\n  | 'ON_ORDER_PLACED';\n\nexport interface GetOrdersSettingsRequest {}\n\nexport interface GetOrdersSettingsResponse {\n  /** Orders settings. */\n  ordersSettings?: OrdersSettings;\n}\n\nexport interface UpdateOrdersSettingsRequest {\n  /** Orders settings to update. */\n  ordersSettings: OrdersSettings;\n}\n\nexport interface UpdateOrdersSettingsResponse {\n  /** The updated orders settings. */\n  ordersSettings?: OrdersSettings;\n}\n\nexport interface DeleteOrdersSettingsRequest {}\n\nexport interface DeleteOrdersSettingsResponse {}\n\nexport interface ListOrdersSettingsRequest {}\n\nexport interface ListOrdersSettingsResponse {\n  /** List of retrieved orders settings. */\n  ordersSettings?: OrdersSettings[];\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface OrdersSettingsUpdatedEnvelope {\n  entity: OrdersSettings;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when orders settings are updated.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read eCommerce - all read permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM\n * @permissionScope Read Orders\n * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Manage eCommerce - all permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId ECOM.READ_ORDERS_SETTINGS\n * @webhook\n * @eventType wix.ecom.v1.orders_settings_updated\n * @serviceIdentifier wix.ecom.orders_settings.api.v1.OrdersSettingsService\n * @slug updated\n * @documentationMaturity preview\n */\nexport declare function onOrdersSettingsUpdated(\n  handler: (event: OrdersSettingsUpdatedEnvelope) => void | Promise<void>\n): void;\n\n/**\n * Retrieves the sites' order settings.\n *\n *\n * The `getOrdersSettings()` function returns a Promise that resolves to orders settings.\n * @public\n * @documentationMaturity preview\n * @permissionId ECOM.READ_ORDERS_SETTINGS\n * @applicableIdentity APP\n * @returns The requested orders settings.\n * @fqn wix.ecom.orders_settings.api.v1.OrdersSettingsService.GetOrdersSettings\n */\nexport async function getOrdersSettings(): Promise<\n  NonNullablePaths<\n    GetOrdersSettingsResponse,\n    `ordersSettings.inventoryUpdateTrigger`,\n    3\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({});\n\n  const reqOpts = ambassadorWixEcomV1OrdersSettings.getOrdersSettings(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {},\n        singleArgumentUnchanged: false,\n      },\n      []\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates the sites' orders settings.\n *\n *\n * The `updateOrdersSettings()` function returns a Promise that resolves to the newly updated orders settings.\n * @public\n * @documentationMaturity preview\n * @requiredField ordersSettings\n * @param ordersSettings - Orders settings to update.\n * @permissionId ECOM.UPDATE_ORDERS_SETTINGS\n * @applicableIdentity APP\n * @returns The updated orders settings.\n * @fqn wix.ecom.orders_settings.api.v1.OrdersSettingsService.UpdateOrdersSettings\n */\nexport async function updateOrdersSettings(\n  ordersSettings: OrdersSettings\n): Promise<\n  NonNullablePaths<\n    UpdateOrdersSettingsResponse,\n    `ordersSettings.inventoryUpdateTrigger`,\n    3\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    ordersSettings: ordersSettings,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1OrdersSettings.updateOrdersSettings(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { ordersSettings: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['ordersSettings']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcomOrdersSettingsApiV1OrdersSettingsServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/orders-settings',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/orders-settings',\n        destPath: '/v1/orders-settings',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/ecom/v1/orders-settings',\n        destPath: '/v1/orders-settings',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_orders-settings';\n\n/**\n * Retrieves the sites' order settings.\n *\n *\n * The `getOrdersSettings()` function returns a Promise that resolves to orders settings.\n */\nexport function getOrdersSettings(payload: object): RequestOptionsFactory<any> {\n  function __getOrdersSettings({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.orders_settings',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecom.orders_settings.api.v1.OrdersSettingsService.GetOrdersSettings',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrdersSettingsApiV1OrdersSettingsServiceUrl({\n        protoPath: '/v1/orders-settings',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ordersSettings.createdDate' },\n              { path: 'ordersSettings.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getOrdersSettings;\n}\n\n/**\n * Updates the sites' orders settings.\n *\n *\n * The `updateOrdersSettings()` function returns a Promise that resolves to the newly updated orders settings.\n */\nexport function updateOrdersSettings(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateOrdersSettings({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'ordersSettings.createdDate' },\n          { path: 'ordersSettings.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.orders_settings',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.ecom.orders_settings.api.v1.OrdersSettingsService.UpdateOrdersSettings',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomOrdersSettingsApiV1OrdersSettingsServiceUrl({\n        protoPath: '/v1/orders-settings',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ordersSettings.createdDate' },\n              { path: 'ordersSettings.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateOrdersSettings;\n}\n","import {\n  getOrdersSettings as publicGetOrdersSettings,\n  updateOrdersSettings as publicUpdateOrdersSettings,\n} from './ecom-v1-orders-settings-orders-settings.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onOrdersSettingsUpdated as publicOnOrdersSettingsUpdated } from './ecom-v1-orders-settings-orders-settings.public.js';\n\nexport const getOrdersSettings: MaybeContext<\n  BuildRESTFunction<typeof publicGetOrdersSettings> &\n    typeof publicGetOrdersSettings\n> = /*#__PURE__*/ createRESTModule(publicGetOrdersSettings);\nexport const updateOrdersSettings: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateOrdersSettings> &\n    typeof publicUpdateOrdersSettings\n> = /*#__PURE__*/ createRESTModule(publicUpdateOrdersSettings);\n/**\n * Triggered when orders settings are updated.\n */\nexport const onOrdersSettingsUpdated: BuildEventDefinition<\n  typeof publicOnOrdersSettingsUpdated\n> &\n  typeof publicOnOrdersSettingsUpdated = createEventModule(\n  publicOnOrdersSettingsUpdated\n);\n\nexport {\n  InventoryUpdateTrigger,\n  WebhookIdentityType,\n} from './ecom-v1-orders-settings-orders-settings.universal.js';\nexport {\n  OrdersSettings,\n  GetOrdersSettingsRequest,\n  GetOrdersSettingsResponse,\n  UpdateOrdersSettingsRequest,\n  UpdateOrdersSettingsResponse,\n  DeleteOrdersSettingsRequest,\n  DeleteOrdersSettingsResponse,\n  ListOrdersSettingsRequest,\n  ListOrdersSettingsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  OrdersSettingsUpdatedEnvelope,\n} from './ecom-v1-orders-settings-orders-settings.universal.js';\nexport {\n  InventoryUpdateTriggerWithLiterals,\n  WebhookIdentityTypeWithLiterals,\n} from './ecom-v1-orders-settings-orders-settings.universal.js';\n"],"mappings":"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","names":["renameKeysFromRESTResponseToSDKResponse","transformRESTTimestampToSDKTimestamp","transformPaths","payload","InventoryUpdateTrigger","WebhookIdentityType","getOrdersSettings","updateOrdersSettings","getOrdersSettings","updateOrdersSettings","renameKeysFromRESTResponseToSDKResponse","transformPaths","transformRESTTimestampToSDKTimestamp","getOrdersSettings","updateOrdersSettings","onOrdersSettingsUpdated"]}