"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  getSubscriptionContract: () => getSubscriptionContract2,
  querySubscriptionContracts: () => querySubscriptionContracts2
});
module.exports = __toCommonJS(meta_exports);

// src/ecom-subscription-contracts-v1-subscription-contract-subscription-contracts.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixEcomSubscriptionContractsV1SubscriptionContractsUrl(opts) {
  const domainToMappings = {};
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_subscription-contracts";
function getSubscriptionContract(payload) {
  function __getSubscriptionContract({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.subscription_contracts.v1.subscription_contract",
      method: "GET",
      methodFqn: "wix.ecom.subscription_contracts.v1.SubscriptionContracts.GetSubscriptionContract",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomSubscriptionContractsV1SubscriptionContractsUrl({
        protoPath: "/v1/subscription-contracts/{subscriptionContractId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "subscriptionContract.createdDate" },
            { path: "subscriptionContract.updatedDate" },
            { path: "subscriptionContract.subscriptionSettings.startDate" },
            {
              path: "subscriptionContract.lineItems.image.urlExpirationDate"
            },
            {
              path: "subscriptionContract.lineItems.digitalFile.expirationDate"
            },
            {
              path: "subscriptionContract.lineItems.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.deliverByDate"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.deliveryTimeSlot.from"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.deliveryTimeSlot.to"
            }
          ]
        },
        {
          transformFn: import_float.transformRESTFloatToSDKFloat,
          paths: [
            { path: "subscriptionContract.lineItems.image.focalPoint.x" },
            { path: "subscriptionContract.lineItems.image.focalPoint.y" },
            {
              path: "subscriptionContract.lineItems.physicalProperties.weight"
            },
            {
              path: "subscriptionContract.billingInfo.address.geocode.latitude"
            },
            {
              path: "subscriptionContract.billingInfo.address.geocode.longitude"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.shippingDestination.address.geocode.latitude"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.shippingDestination.address.geocode.longitude"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.pickupDetails.address.geocode.latitude"
            },
            {
              path: "subscriptionContract.shippingInfo.logistics.pickupDetails.address.geocode.longitude"
            },
            {
              path: "subscriptionContract.recipientInfo.address.geocode.latitude"
            },
            {
              path: "subscriptionContract.recipientInfo.address.geocode.longitude"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getSubscriptionContract;
}
function querySubscriptionContracts(payload) {
  function __querySubscriptionContracts({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.subscription_contracts.v1.subscription_contract",
      method: "GET",
      methodFqn: "wix.ecom.subscription_contracts.v1.SubscriptionContracts.QuerySubscriptionContracts",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomSubscriptionContractsV1SubscriptionContractsUrl({
        protoPath: "/v1/subscription-contracts/query",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload, true),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "subscriptionContracts.createdDate" },
            { path: "subscriptionContracts.updatedDate" },
            { path: "subscriptionContracts.subscriptionSettings.startDate" },
            {
              path: "subscriptionContracts.lineItems.image.urlExpirationDate"
            },
            {
              path: "subscriptionContracts.lineItems.digitalFile.expirationDate"
            },
            {
              path: "subscriptionContracts.lineItems.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.deliverByDate"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.deliveryTimeSlot.from"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.deliveryTimeSlot.to"
            }
          ]
        },
        {
          transformFn: import_float.transformRESTFloatToSDKFloat,
          paths: [
            { path: "subscriptionContracts.lineItems.image.focalPoint.x" },
            { path: "subscriptionContracts.lineItems.image.focalPoint.y" },
            {
              path: "subscriptionContracts.lineItems.physicalProperties.weight"
            },
            {
              path: "subscriptionContracts.billingInfo.address.geocode.latitude"
            },
            {
              path: "subscriptionContracts.billingInfo.address.geocode.longitude"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.shippingDestination.address.geocode.latitude"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.shippingDestination.address.geocode.longitude"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.pickupDetails.address.geocode.latitude"
            },
            {
              path: "subscriptionContracts.shippingInfo.logistics.pickupDetails.address.geocode.longitude"
            },
            {
              path: "subscriptionContracts.recipientInfo.address.geocode.latitude"
            },
            {
              path: "subscriptionContracts.recipientInfo.address.geocode.longitude"
            }
          ]
        }
      ]),
      fallback: [
        {
          method: "POST",
          url: resolveWixEcomSubscriptionContractsV1SubscriptionContractsUrl({
            protoPath: "/v1/subscription-contracts/query",
            data: payload,
            host
          }),
          data: payload
        }
      ]
    };
    return metadata;
  }
  return __querySubscriptionContracts;
}

// src/ecom-subscription-contracts-v1-subscription-contract-subscription-contracts.meta.ts
function getSubscriptionContract2() {
  const payload = { subscriptionContractId: ":subscriptionContractId" };
  const getRequestOptions = getSubscriptionContract(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/subscription-contracts/{subscriptionContractId}",
    pathParams: { subscriptionContractId: "subscriptionContractId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function querySubscriptionContracts2() {
  const payload = {};
  const getRequestOptions = querySubscriptionContracts(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/subscription-contracts/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getSubscriptionContract,
  querySubscriptionContracts
});
//# sourceMappingURL=meta.js.map