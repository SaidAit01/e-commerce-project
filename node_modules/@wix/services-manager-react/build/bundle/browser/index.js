// ../../node_modules/@preact/signals-core/dist/signals-core.module.js
var i = Symbol.for("preact-signals");
function t() {
  if (!(s > 1)) {
    var i2, t2 = false;
    while (void 0 !== h) {
      var r = h;
      h = void 0;
      f++;
      while (void 0 !== r) {
        var o3 = r.o;
        r.o = void 0;
        r.f &= -3;
        if (!(8 & r.f) && c(r))
          try {
            r.c();
          } catch (r2) {
            if (!t2) {
              i2 = r2;
              t2 = true;
            }
          }
        r = o3;
      }
    }
    f = 0;
    s--;
    if (t2)
      throw i2;
  } else
    s--;
}
var o = void 0;
function n(i2) {
  var t2 = o;
  o = void 0;
  try {
    return i2();
  } finally {
    o = t2;
  }
}
var h = void 0;
var s = 0;
var f = 0;
var v = 0;
function e(i2) {
  if (void 0 !== o) {
    var t2 = i2.n;
    if (void 0 === t2 || t2.t !== o) {
      t2 = { i: 0, S: i2, p: o.s, n: void 0, t: o, e: void 0, x: void 0, r: t2 };
      if (void 0 !== o.s)
        o.s.n = t2;
      o.s = t2;
      i2.n = t2;
      if (32 & o.f)
        i2.S(t2);
      return t2;
    } else if (-1 === t2.i) {
      t2.i = 0;
      if (void 0 !== t2.n) {
        t2.n.p = t2.p;
        if (void 0 !== t2.p)
          t2.p.n = t2.n;
        t2.p = o.s;
        t2.n = void 0;
        o.s.n = t2;
        o.s = t2;
      }
      return t2;
    }
  }
}
function u(i2, t2) {
  this.v = i2;
  this.i = 0;
  this.n = void 0;
  this.t = void 0;
  this.W = null == t2 ? void 0 : t2.watched;
  this.Z = null == t2 ? void 0 : t2.unwatched;
}
u.prototype.brand = i;
u.prototype.h = function() {
  return true;
};
u.prototype.S = function(i2) {
  var t2 = this, r = this.t;
  if (r !== i2 && void 0 === i2.e) {
    i2.x = r;
    this.t = i2;
    if (void 0 !== r)
      r.e = i2;
    else
      n(function() {
        var i3;
        null == (i3 = t2.W) || i3.call(t2);
      });
  }
};
u.prototype.U = function(i2) {
  var t2 = this;
  if (void 0 !== this.t) {
    var r = i2.e, o3 = i2.x;
    if (void 0 !== r) {
      r.x = o3;
      i2.e = void 0;
    }
    if (void 0 !== o3) {
      o3.e = r;
      i2.x = void 0;
    }
    if (i2 === this.t) {
      this.t = o3;
      if (void 0 === o3)
        n(function() {
          var i3;
          null == (i3 = t2.Z) || i3.call(t2);
        });
    }
  }
};
u.prototype.subscribe = function(i2) {
  var t2 = this;
  return E(function() {
    var r = t2.value, n2 = o;
    o = void 0;
    try {
      i2(r);
    } finally {
      o = n2;
    }
  });
};
u.prototype.valueOf = function() {
  return this.value;
};
u.prototype.toString = function() {
  return this.value + "";
};
u.prototype.toJSON = function() {
  return this.value;
};
u.prototype.peek = function() {
  var i2 = o;
  o = void 0;
  try {
    return this.value;
  } finally {
    o = i2;
  }
};
Object.defineProperty(u.prototype, "value", { get: function() {
  var i2 = e(this);
  if (void 0 !== i2)
    i2.i = this.i;
  return this.v;
}, set: function(i2) {
  if (i2 !== this.v) {
    if (f > 100)
      throw new Error("Cycle detected");
    this.v = i2;
    this.i++;
    v++;
    s++;
    try {
      for (var r = this.t; void 0 !== r; r = r.x)
        r.t.N();
    } finally {
      t();
    }
  }
} });
function d(i2, t2) {
  return new u(i2, t2);
}
function c(i2) {
  for (var t2 = i2.s; void 0 !== t2; t2 = t2.n)
    if (t2.S.i !== t2.i || !t2.S.h() || t2.S.i !== t2.i)
      return true;
  return false;
}
function a(i2) {
  for (var t2 = i2.s; void 0 !== t2; t2 = t2.n) {
    var r = t2.S.n;
    if (void 0 !== r)
      t2.r = r;
    t2.S.n = t2;
    t2.i = -1;
    if (void 0 === t2.n) {
      i2.s = t2;
      break;
    }
  }
}
function l(i2) {
  var t2 = i2.s, r = void 0;
  while (void 0 !== t2) {
    var o3 = t2.p;
    if (-1 === t2.i) {
      t2.S.U(t2);
      if (void 0 !== o3)
        o3.n = t2.n;
      if (void 0 !== t2.n)
        t2.n.p = o3;
    } else
      r = t2;
    t2.S.n = t2.r;
    if (void 0 !== t2.r)
      t2.r = void 0;
    t2 = o3;
  }
  i2.s = r;
}
function y(i2, t2) {
  u.call(this, void 0);
  this.x = i2;
  this.s = void 0;
  this.g = v - 1;
  this.f = 4;
  this.W = null == t2 ? void 0 : t2.watched;
  this.Z = null == t2 ? void 0 : t2.unwatched;
}
y.prototype = new u();
y.prototype.h = function() {
  this.f &= -3;
  if (1 & this.f)
    return false;
  if (32 == (36 & this.f))
    return true;
  this.f &= -5;
  if (this.g === v)
    return true;
  this.g = v;
  this.f |= 1;
  if (this.i > 0 && !c(this)) {
    this.f &= -2;
    return true;
  }
  var i2 = o;
  try {
    a(this);
    o = this;
    var t2 = this.x();
    if (16 & this.f || this.v !== t2 || 0 === this.i) {
      this.v = t2;
      this.f &= -17;
      this.i++;
    }
  } catch (i3) {
    this.v = i3;
    this.f |= 16;
    this.i++;
  }
  o = i2;
  l(this);
  this.f &= -2;
  return true;
};
y.prototype.S = function(i2) {
  if (void 0 === this.t) {
    this.f |= 36;
    for (var t2 = this.s; void 0 !== t2; t2 = t2.n)
      t2.S.S(t2);
  }
  u.prototype.S.call(this, i2);
};
y.prototype.U = function(i2) {
  if (void 0 !== this.t) {
    u.prototype.U.call(this, i2);
    if (void 0 === this.t) {
      this.f &= -33;
      for (var t2 = this.s; void 0 !== t2; t2 = t2.n)
        t2.S.U(t2);
    }
  }
};
y.prototype.N = function() {
  if (!(2 & this.f)) {
    this.f |= 6;
    for (var i2 = this.t; void 0 !== i2; i2 = i2.x)
      i2.t.N();
  }
};
Object.defineProperty(y.prototype, "value", { get: function() {
  if (1 & this.f)
    throw new Error("Cycle detected");
  var i2 = e(this);
  this.h();
  if (void 0 !== i2)
    i2.i = this.i;
  if (16 & this.f)
    throw this.v;
  return this.v;
} });
function w(i2, t2) {
  return new y(i2, t2);
}
function _(i2) {
  var r = i2.u;
  i2.u = void 0;
  if ("function" == typeof r) {
    s++;
    var n2 = o;
    o = void 0;
    try {
      r();
    } catch (t2) {
      i2.f &= -2;
      i2.f |= 8;
      b(i2);
      throw t2;
    } finally {
      o = n2;
      t();
    }
  }
}
function b(i2) {
  for (var t2 = i2.s; void 0 !== t2; t2 = t2.n)
    t2.S.U(t2);
  i2.x = void 0;
  i2.s = void 0;
  _(i2);
}
function g(i2) {
  if (o !== this)
    throw new Error("Out-of-order effect");
  l(this);
  o = i2;
  this.f &= -2;
  if (8 & this.f)
    b(this);
  t();
}
function p(i2) {
  this.x = i2;
  this.u = void 0;
  this.s = void 0;
  this.o = void 0;
  this.f = 32;
}
p.prototype.c = function() {
  var i2 = this.S();
  try {
    if (8 & this.f)
      return;
    if (void 0 === this.x)
      return;
    var t2 = this.x();
    if ("function" == typeof t2)
      this.u = t2;
  } finally {
    i2();
  }
};
p.prototype.S = function() {
  if (1 & this.f)
    throw new Error("Cycle detected");
  this.f |= 1;
  this.f &= -9;
  _(this);
  a(this);
  s++;
  var i2 = o;
  o = this;
  return g.bind(this, i2);
};
p.prototype.N = function() {
  if (!(2 & this.f)) {
    this.f |= 2;
    this.o = h;
    h = this;
  }
};
p.prototype.d = function() {
  this.f |= 8;
  if (!(1 & this.f))
    b(this);
};
p.prototype.dispose = function() {
  this.d();
};
function E(i2) {
  var t2 = new p(i2);
  try {
    t2.c();
  } catch (i3) {
    t2.d();
    throw i3;
  }
  var r = t2.d.bind(t2);
  r[Symbol.dispose] = r;
  return r;
}

// ../../node_modules/@preact/signals-react/runtime/dist/runtime.module.js
import { version as e2, useRef as o2, useMemo as u2, useEffect as f2, useLayoutEffect as c2 } from "react";
import { useSyncExternalStore as a2 } from "use-sync-external-store/shim/index.js";
var s2 = e2.split(".").map(Number)[0];
var v2 = Symbol.for(s2 >= 19 ? "react.transitional.element" : "react.element");
var p2;
var m = Symbol.dispose || Symbol.for("Symbol.dispose");
function b2(n2, t2) {
  var r = t2.effect.S();
  p2 = t2;
  return y2.bind(t2, n2, r);
}
function y2(n2, t2) {
  t2();
  p2 = n2;
}
var g2;
var h2;
var _2 = function() {
};
var S = ((g2 = { o: 0, effect: { s: void 0, c: function() {
}, S: function() {
  return _2;
}, d: function() {
} }, subscribe: function() {
  return _2;
}, getSnapshot: function() {
  return 0;
}, S: function() {
}, f: function() {
} })[m] = function() {
}, g2);
var w2 = Promise.prototype.then.bind(Promise.resolve());
function x() {
  if (!h2)
    h2 = w2(j);
}
function j() {
  var n2;
  h2 = void 0;
  null == (n2 = p2) || n2.f();
}
var P = "undefined" != typeof window ? c2 : f2;
function $(n2) {
  if (void 0 === n2)
    n2 = 0;
  x();
  var t2 = o2();
  if (null == t2.current)
    if ("undefined" == typeof window)
      t2.current = S;
    else
      t2.current = function(n3) {
        var t3, r2, e3, o3, u3 = 0, f3 = E(function() {
          r2 = this;
        });
        r2.c = function() {
          u3 = u3 + 1 | 0;
          if (o3)
            o3();
        };
        return (t3 = { o: n3, effect: r2, subscribe: function(n4) {
          o3 = n4;
          return function() {
            u3 = u3 + 1 | 0;
            o3 = void 0;
            f3();
          };
        }, getSnapshot: function() {
          return u3;
        }, S: function() {
          if (null != p2) {
            var n4 = p2.o, t4 = this.o;
            if (0 == n4 && 0 == t4 || 0 == n4 && 1 == t4) {
              p2.f();
              e3 = b2(void 0, this);
            } else if (1 == n4 && 0 == t4 || 2 == n4 && 0 == t4)
              ;
            else
              e3 = b2(p2, this);
          } else
            e3 = b2(void 0, this);
        }, f: function() {
          var n4 = e3;
          e3 = void 0;
          null == n4 || n4();
        } })[m] = function() {
          this.f();
        }, t3;
      }(n2);
  var r = t2.current;
  a2(r.subscribe, r.getSnapshot, r.getSnapshot);
  r.S();
  if (0 === n2)
    P(j);
  return r;
}
Object.defineProperties(u.prototype, { $$typeof: { configurable: true, value: v2 }, type: { configurable: true, value: function(n2) {
  var t2 = n2.data, r = $(1);
  try {
    return t2.value;
  } finally {
    r.f();
  }
} }, props: { configurable: true, get: function() {
  return { data: this };
} }, ref: { configurable: true, value: null } });
function k(n2) {
  return $(n2);
}

// ../sdk-react-context/build/browser/index.mjs
import { createContext } from "react";
if (!globalThis.WixReactContext) {
  globalThis.WixReactContext = createContext(void 0);
}
var WixContext = globalThis.WixReactContext;

// src/index.tsx
import React, {
  createContext as createContext2,
  useContext,
  useState
} from "react";

// ../services-definitions/build/index.js
function defineService(id) {
  return id;
}
function implementService(_3, factory) {
  return factory;
}
implementService.withConfig = function() {
  return function(_3, factory) {
    return factory;
  };
};

// src/core-services/provide-component/definition.ts
var ProvideComponentServiceDefinition = defineService("core:provide-component");

// ../services-definitions/build/core-services/signals/definition.js
var SignalsServiceDefinition = defineService("core:signals");

// ../services-manager/build/core-services/signals/service.js
var SignalsServiceFactory = implementService(SignalsServiceDefinition, () => {
  return {
    signal: (initialValue) => {
      const sig = d(initialValue);
      const signal = {
        get: () => sig.value,
        set: (newValue) => sig.value = newValue,
        peek: () => sig.peek()
      };
      return signal;
    },
    computed: (fn) => {
      const sig = w(fn);
      const signal = {
        get: () => sig.value,
        peek: () => sig.peek()
      };
      return signal;
    },
    effect: E
  };
});

// ../services-manager/build/services-manager.js
function createServicesManager(servicesBindings, parentServicesManager) {
  const coreRegisteredServices = createServicesMap().addService(SignalsServiceDefinition, SignalsServiceFactory);
  const bindingsByDefinition = new Map([
    ...servicesBindings ? servicesBindings.registeredServices : [],
    ...coreRegisteredServices.registeredServices
  ].map((service) => [service.definition.toString(), service]));
  const initializedServices = /* @__PURE__ */ new Map();
  const manager = {
    getService(definition) {
      if (!initializedServices.has(definition.toString())) {
        const service = bindingsByDefinition.get(definition.toString());
        if (!service) {
          if (parentServicesManager) {
            return parentServicesManager.getService(definition);
          }
          throw new Error(`Service ${definition} is not provided`);
        }
        initializedServices.set(definition.toString(), service.impl({
          config: service.config,
          getService: manager.getService
        }));
      }
      return initializedServices.get(definition.toString());
    },
    hasService(definition) {
      return bindingsByDefinition.has(definition.toString());
    },
    addService(definition, impl, config) {
      if (!manager.hasService(definition)) {
        bindingsByDefinition.set(definition.toString(), {
          definition,
          impl,
          config: config || {}
        });
        if (!initializedServices.has(definition.toString())) {
          initializedServices.set(definition.toString(), impl({
            config: config || {},
            getService: manager.getService
          }));
        }
      } else {
        throw new Error(`Service ${definition.toString()} is already provided`);
      }
    },
    addServices(servicesToAdd) {
      servicesToAdd.registeredServices.forEach(({ definition }) => {
        if (manager.hasService(definition)) {
          throw new Error(`Service ${definition.toString()} is already provided`);
        }
      });
      servicesToAdd.registeredServices.forEach(({ definition, impl, config }) => {
        bindingsByDefinition.set(definition.toString(), {
          definition,
          impl,
          config: config || {}
        });
      });
      servicesToAdd.registeredServices.forEach(({ definition, impl, config }) => {
        if (!initializedServices.has(definition.toString())) {
          initializedServices.set(definition.toString(), impl({
            config: config || {},
            getService: manager.getService
          }));
        }
      });
    }
  };
  bindingsByDefinition.forEach(({ definition, impl, config }) => {
    if (!initializedServices.has(definition.toString())) {
      initializedServices.set(definition, impl({
        config: config || {},
        getService: manager.getService
      }));
    }
  });
  return manager;
}
function createServicesMap(registeredServices = []) {
  return {
    registeredServices,
    addService(definition, impl, config) {
      return createServicesMap([
        ...registeredServices,
        { definition, impl, config }
      ]);
    }
  };
}

// src/index.tsx
function ServicesManagerProvider({
  servicesManager,
  children
}) {
  const getProvidedComponent = () => {
    const provideComponentService = servicesManager.hasService(
      ProvideComponentServiceDefinition
    ) ? servicesManager.getService(ProvideComponentServiceDefinition) : {
      getAllTopComponents: () => null,
      getAllBottomComponents: () => null
    };
    return {
      TopComponents: provideComponentService?.getAllTopComponents(),
      BottomComponents: provideComponentService?.getAllBottomComponents()
    };
  };
  const { TopComponents, BottomComponents } = getProvidedComponent();
  return /* @__PURE__ */ React.createElement(
    WixContext.Provider,
    {
      value: {
        getService: servicesManager.getService
      }
    },
    TopComponents && /* @__PURE__ */ React.createElement(TopComponents, null),
    children,
    BottomComponents && /* @__PURE__ */ React.createElement(BottomComponents, null)
  );
}
function useGetService() {
  const maybeContext = useContext(WixContext);
  if (!maybeContext) {
    throw new Error(
      "No ServiceManagerProvider found in the component tree, make sure to wrap your app with ServicesManagerProvider"
    );
  }
  return maybeContext.getService;
}
function useService(service) {
  const getService = useGetService();
  k();
  return getService(service);
}
function useServices(services) {
  const getService = useGetService();
  if (!getService) {
    throw new Error(
      "No ServiceManagerProvider found in the component tree, make sure to wrap your app with ServicesManagerProvider"
    );
  }
  return services.map((service) => getService(service));
}
var InternalServicesManagerContext = createContext2(void 0);
function WixServices(props) {
  const parentServicesManager = useContext(
    InternalServicesManagerContext
  );
  const [servicesManager] = useState(
    () => createServicesManager(props.servicesMap, parentServicesManager)
  );
  return /* @__PURE__ */ React.createElement(InternalServicesManagerContext.Provider, { value: servicesManager }, /* @__PURE__ */ React.createElement(ServicesManagerProvider, { servicesManager }, props.children));
}
export {
  ServicesManagerProvider,
  WixServices,
  useGetService,
  useService,
  useServices
};
