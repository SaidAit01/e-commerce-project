"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServicesManagerProvider = ServicesManagerProvider;
exports.useGetService = useGetService;
exports.useService = useService;
exports.useServices = useServices;
exports.WixServices = WixServices;
const runtime_1 = require("@preact/signals-react/runtime");
const sdk_react_context_1 = require("@wix/sdk-react-context");
const react_1 = __importStar(require("react"));
const index_js_1 = require("./core-services/provide-component/index.js");
const services_manager_1 = require("@wix/services-manager");
function ServicesManagerProvider({ servicesManager, children, }) {
    const getProvidedComponent = () => {
        const provideComponentService = servicesManager.hasService(index_js_1.ProvideComponentServiceDefinition)
            ? servicesManager.getService(index_js_1.ProvideComponentServiceDefinition)
            : {
                getAllTopComponents: () => null,
                getAllBottomComponents: () => null,
            };
        return {
            TopComponents: provideComponentService?.getAllTopComponents(),
            BottomComponents: provideComponentService?.getAllBottomComponents(),
        };
    };
    const { TopComponents, BottomComponents } = getProvidedComponent();
    return (react_1.default.createElement(sdk_react_context_1.WixContext.Provider, { value: {
            getService: servicesManager.getService,
        } },
        TopComponents && react_1.default.createElement(TopComponents, null),
        children,
        BottomComponents && react_1.default.createElement(BottomComponents, null)));
}
function useGetService() {
    const maybeContext = (0, react_1.useContext)(sdk_react_context_1.WixContext);
    if (!maybeContext) {
        throw new Error('No ServiceManagerProvider found in the component tree, make sure to wrap your app with ServicesManagerProvider');
    }
    return maybeContext.getService;
}
function useService(service) {
    const getService = useGetService();
    (0, runtime_1.useSignals)();
    return getService(service);
}
function useServices(services) {
    const getService = useGetService();
    if (!getService) {
        throw new Error('No ServiceManagerProvider found in the component tree, make sure to wrap your app with ServicesManagerProvider');
    }
    return services.map((service) => getService(service));
}
const InternalServicesManagerContext = (0, react_1.createContext)(undefined);
function WixServices(props) {
    const parentServicesManager = (0, react_1.useContext)(InternalServicesManagerContext);
    const [servicesManager] = (0, react_1.useState)(() => (0, services_manager_1.createServicesManager)(props.servicesMap, parentServicesManager));
    return (react_1.default.createElement(InternalServicesManagerContext.Provider, { value: servicesManager },
        react_1.default.createElement(ServicesManagerProvider, { servicesManager: servicesManager }, props.children)));
}
