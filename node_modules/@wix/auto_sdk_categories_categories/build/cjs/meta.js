"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  bulkAddItemToCategories: () => bulkAddItemToCategories2,
  bulkAddItemsToCategory: () => bulkAddItemsToCategory2,
  bulkRemoveItemFromCategories: () => bulkRemoveItemFromCategories2,
  bulkRemoveItemsFromCategory: () => bulkRemoveItemsFromCategory2,
  bulkSetItemCategories: () => bulkSetItemCategories2,
  bulkShowCategories: () => bulkShowCategories2,
  bulkUpdateCategories: () => bulkUpdateCategories2,
  countCategories: () => countCategories2,
  createCategory: () => createCategory2,
  deleteCategory: () => deleteCategory2,
  getArrangedItems: () => getArrangedItems2,
  getCategory: () => getCategory2,
  listCategoriesForItem: () => listCategoriesForItem2,
  listCategoriesForItems: () => listCategoriesForItems2,
  listItemsInCategory: () => listItemsInCategory2,
  listTrees: () => listTrees2,
  moveCategory: () => moveCategory2,
  queryCategories: () => queryCategories2,
  searchCategories: () => searchCategories2,
  setArrangedItems: () => setArrangedItems2,
  updateCategory: () => updateCategory2,
  updateCategoryVisibility: () => updateCategoryVisibility2
});
module.exports = __toCommonJS(meta_exports);

// src/categories-v1-category-categories.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixCategoriesApiV1CategoriesServiceUrl(opts) {
  const domainToMappings = {
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/categories",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/categories/v1/bulk/categories",
        destPath: "/v1/bulk/categories"
      },
      {
        srcPath: "/categories/v1/categories",
        destPath: "/v1/categories"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/categories",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/categories-service",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/categories-service",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/categories-service",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/categories/v1/bulk/categories",
        destPath: "/v1/bulk/categories"
      },
      {
        srcPath: "/categories/v1/categories",
        destPath: "/v1/categories"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_categories_categories";
function createCategory(payload) {
  function __createCategory({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "category.createdDate" },
          { path: "category.updatedDate" },
          { path: "category.image.urlExpirationDate" },
          { path: "category.richContentDescription.metadata.createdTimestamp" },
          { path: "category.richContentDescription.metadata.updatedTimestamp" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "category.richContentDescription.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "category.richContentDescription.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "category.richContentDescription.nodes.galleryData.options.item.ratio"
          },
          {
            path: "category.richContentDescription.nodes.imageData.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.mapData.mapSettings.lat"
          },
          {
            path: "category.richContentDescription.nodes.mapData.mapSettings.lng"
          },
          {
            path: "category.richContentDescription.nodes.pollData.poll.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.appEmbedData.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.videoData.video.duration"
          },
          {
            path: "category.richContentDescription.nodes.videoData.thumbnail.duration"
          },
          {
            path: "category.richContentDescription.nodes.audioData.audio.duration"
          },
          {
            path: "category.richContentDescription.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.CreateCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "category.createdDate" },
            { path: "category.updatedDate" },
            { path: "category.image.urlExpirationDate" },
            {
              path: "category.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "category.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "category.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "category.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createCategory;
}
function getCategory(payload) {
  function __getCategory({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "GET",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.GetCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{categoryId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "category.createdDate" },
            { path: "category.updatedDate" },
            { path: "category.image.urlExpirationDate" },
            {
              path: "category.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "category.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "category.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "category.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCategory;
}
function updateCategory(payload) {
  function __updateCategory({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "category.createdDate" },
          { path: "category.updatedDate" },
          { path: "category.image.urlExpirationDate" },
          { path: "category.richContentDescription.metadata.createdTimestamp" },
          { path: "category.richContentDescription.metadata.updatedTimestamp" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "category.richContentDescription.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "category.richContentDescription.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "category.richContentDescription.nodes.galleryData.options.item.ratio"
          },
          {
            path: "category.richContentDescription.nodes.imageData.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.mapData.mapSettings.lat"
          },
          {
            path: "category.richContentDescription.nodes.mapData.mapSettings.lng"
          },
          {
            path: "category.richContentDescription.nodes.pollData.poll.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.appEmbedData.image.duration"
          },
          {
            path: "category.richContentDescription.nodes.videoData.video.duration"
          },
          {
            path: "category.richContentDescription.nodes.videoData.thumbnail.duration"
          },
          {
            path: "category.richContentDescription.nodes.audioData.audio.duration"
          },
          {
            path: "category.richContentDescription.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "PATCH",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.UpdateCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{category.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "category.createdDate" },
            { path: "category.updatedDate" },
            { path: "category.image.urlExpirationDate" },
            {
              path: "category.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "category.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "category.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "category.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCategory;
}
function deleteCategory(payload) {
  function __deleteCategory({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "DELETE",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.DeleteCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{categoryId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteCategory;
}
function queryCategories(payload) {
  function __queryCategories({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.QueryCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "categories.createdDate" },
            { path: "categories.updatedDate" },
            { path: "categories.image.urlExpirationDate" },
            {
              path: "categories.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "categories.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "categories.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "categories.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "categories.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "categories.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "categories.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "categories.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "categories.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "categories.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "categories.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "categories.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryCategories;
}
function searchCategories(payload) {
  function __searchCategories({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "search.aggregations.range.buckets.from" },
          { path: "search.aggregations.range.buckets.to" },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.from"
          },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.to"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.SearchCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/search",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "categories.createdDate" },
            { path: "categories.updatedDate" },
            { path: "categories.image.urlExpirationDate" },
            {
              path: "categories.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "categories.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "categories.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "categories.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "categories.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "categories.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "categories.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "categories.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "categories.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "categories.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "categories.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "categories.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "categories.richContentDescription.nodes.audioData.coverImage.duration"
            },
            { path: "aggregationData.results.ranges.results.from" },
            { path: "aggregationData.results.ranges.results.to" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from"
            },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.from"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.to"
            },
            { path: "aggregationData.results.scalar.value" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.scalar.value"
            },
            {
              path: "aggregationData.results.nested.results.results.*.scalar.value"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __searchCategories;
}
function countCategories(payload) {
  function __countCategories({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.CountCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/count",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __countCategories;
}
function moveCategory(payload) {
  function __moveCategory({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.MoveCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{categoryId}/move",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __moveCategory;
}
function bulkUpdateCategories(payload) {
  function __bulkUpdateCategories({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "categories.fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "categories.category.createdDate" },
          { path: "categories.category.updatedDate" },
          { path: "categories.category.image.urlExpirationDate" },
          {
            path: "categories.category.richContentDescription.metadata.createdTimestamp"
          },
          {
            path: "categories.category.richContentDescription.metadata.updatedTimestamp"
          }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "categories.category.richContentDescription.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.galleryData.options.item.ratio"
          },
          {
            path: "categories.category.richContentDescription.nodes.imageData.image.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.mapData.mapSettings.lat"
          },
          {
            path: "categories.category.richContentDescription.nodes.mapData.mapSettings.lng"
          },
          {
            path: "categories.category.richContentDescription.nodes.pollData.poll.image.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.appEmbedData.image.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.videoData.video.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.videoData.thumbnail.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.audioData.audio.duration"
          },
          {
            path: "categories.category.richContentDescription.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkUpdateCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.category.createdDate" },
            { path: "results.category.updatedDate" },
            { path: "results.category.image.urlExpirationDate" },
            {
              path: "results.category.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "results.category.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "results.category.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "results.category.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "results.category.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "results.category.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateCategories;
}
function updateCategoryVisibility(payload) {
  function __updateCategoryVisibility({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "PATCH",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.UpdateCategoryVisibility",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/visibility",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "category.createdDate" },
            { path: "category.updatedDate" },
            { path: "category.image.urlExpirationDate" },
            {
              path: "category.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "category.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "category.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "category.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "category.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "category.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "category.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCategoryVisibility;
}
function bulkShowCategories(payload) {
  function __bulkShowCategories({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkShowCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/show",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.category.createdDate" },
            { path: "results.category.updatedDate" },
            { path: "results.category.image.urlExpirationDate" },
            {
              path: "results.category.richContentDescription.metadata.createdTimestamp"
            },
            {
              path: "results.category.richContentDescription.metadata.updatedTimestamp"
            }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "results.category.richContentDescription.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.galleryData.options.item.ratio"
            },
            {
              path: "results.category.richContentDescription.nodes.imageData.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.mapData.mapSettings.lat"
            },
            {
              path: "results.category.richContentDescription.nodes.mapData.mapSettings.lng"
            },
            {
              path: "results.category.richContentDescription.nodes.pollData.poll.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.appEmbedData.image.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.videoData.video.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.videoData.thumbnail.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.audioData.audio.duration"
            },
            {
              path: "results.category.richContentDescription.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkShowCategories;
}
function bulkAddItemsToCategory(payload) {
  function __bulkAddItemsToCategory({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkAddItemsToCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/{categoryId}/add-items",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkAddItemsToCategory;
}
function bulkAddItemToCategories(payload) {
  function __bulkAddItemToCategories({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkAddItemToCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/add-item",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkAddItemToCategories;
}
function bulkRemoveItemsFromCategory(payload) {
  function __bulkRemoveItemsFromCategory({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkRemoveItemsFromCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/{categoryId}/remove-items",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkRemoveItemsFromCategory;
}
function bulkRemoveItemFromCategories(payload) {
  function __bulkRemoveItemFromCategories({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkRemoveItemFromCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/remove-item",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkRemoveItemFromCategories;
}
function listItemsInCategory(payload) {
  function __listItemsInCategory({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "GET",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.ListItemsInCategory",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{categoryId}/list-items",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      fallback: [
        {
          method: "POST",
          url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
            protoPath: "/v1/categories/{categoryId}/list-items",
            data: payload,
            host
          }),
          data: payload
        }
      ]
    };
    return metadata;
  }
  return __listItemsInCategory;
}
function listCategoriesForItem(payload) {
  function __listCategoriesForItem({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "GET",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.ListCategoriesForItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/list-categories-for-item",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      fallback: [
        {
          method: "POST",
          url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
            protoPath: "/v1/categories/list-categories-for-item",
            data: payload,
            host
          }),
          data: payload
        }
      ]
    };
    return metadata;
  }
  return __listCategoriesForItem;
}
function listCategoriesForItems(payload) {
  function __listCategoriesForItems({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "GET",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.ListCategoriesForItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/list-categories-for-items",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      fallback: [
        {
          method: "POST",
          url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
            protoPath: "/v1/categories/list-categories-for-items",
            data: payload,
            host
          }),
          data: payload
        }
      ]
    };
    return metadata;
  }
  return __listCategoriesForItems;
}
function listTrees(payload) {
  function __listTrees({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "GET",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.ListTrees",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/list-trees",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listTrees;
}
function setArrangedItems(payload) {
  function __setArrangedItems({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.SetArrangedItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{categoryId}/set-arranged-items",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __setArrangedItems;
}
function getArrangedItems(payload) {
  function __getArrangedItems({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "GET",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.GetArrangedItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/categories/{categoryId}/arranged-items",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __getArrangedItems;
}
function bulkSetItemCategories(payload) {
  function __bulkSetItemCategories({ host }) {
    const metadata = {
      entityFqdn: "wix.categories.v1.category",
      method: "POST",
      methodFqn: "com.wix.categories.api.v1.CategoriesService.BulkSetItemCategories",
      packageName: PACKAGE_NAME,
      url: resolveComWixCategoriesApiV1CategoriesServiceUrl({
        protoPath: "/v1/bulk/categories/set-item-categories",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkSetItemCategories;
}

// src/categories-v1-category-categories.meta.ts
function createCategory2() {
  const payload = {};
  const getRequestOptions = createCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/categories",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCategory2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = getCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/categories/{categoryId}",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCategory2() {
  const payload = { category: { id: ":categoryId" } };
  const getRequestOptions = updateCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/categories/{category.id}",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteCategory2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = deleteCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/categories/{categoryId}",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryCategories2() {
  const payload = {};
  const getRequestOptions = queryCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/categories/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function searchCategories2() {
  const payload = {};
  const getRequestOptions = searchCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/categories/search",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function countCategories2() {
  const payload = {};
  const getRequestOptions = countCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/categories/count",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function moveCategory2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = moveCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/categories/{categoryId}/move",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateCategories2() {
  const payload = {};
  const getRequestOptions = bulkUpdateCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCategoryVisibility2() {
  const payload = {};
  const getRequestOptions = updateCategoryVisibility(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/categories/visibility",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkShowCategories2() {
  const payload = {};
  const getRequestOptions = bulkShowCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/show",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkAddItemsToCategory2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = bulkAddItemsToCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/{categoryId}/add-items",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkAddItemToCategories2() {
  const payload = {};
  const getRequestOptions = bulkAddItemToCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/add-item",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkRemoveItemsFromCategory2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = bulkRemoveItemsFromCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/{categoryId}/remove-items",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkRemoveItemFromCategories2() {
  const payload = {};
  const getRequestOptions = bulkRemoveItemFromCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/remove-item",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listItemsInCategory2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = listItemsInCategory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/categories/{categoryId}/list-items",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listCategoriesForItem2() {
  const payload = {};
  const getRequestOptions = listCategoriesForItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/categories/list-categories-for-item",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listCategoriesForItems2() {
  const payload = {};
  const getRequestOptions = listCategoriesForItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/categories/list-categories-for-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listTrees2() {
  const payload = {};
  const getRequestOptions = listTrees(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/categories/list-trees",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function setArrangedItems2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = setArrangedItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/categories/{categoryId}/set-arranged-items",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getArrangedItems2() {
  const payload = { categoryId: ":categoryId" };
  const getRequestOptions = getArrangedItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/categories/{categoryId}/arranged-items",
    pathParams: { categoryId: "categoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkSetItemCategories2() {
  const payload = {};
  const getRequestOptions = bulkSetItemCategories(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/bulk/categories/set-item-categories",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bulkAddItemToCategories,
  bulkAddItemsToCategory,
  bulkRemoveItemFromCategories,
  bulkRemoveItemsFromCategory,
  bulkSetItemCategories,
  bulkShowCategories,
  bulkUpdateCategories,
  countCategories,
  createCategory,
  deleteCategory,
  getArrangedItems,
  getCategory,
  listCategoriesForItem,
  listCategoriesForItems,
  listItemsInCategory,
  listTrees,
  moveCategory,
  queryCategories,
  searchCategories,
  setArrangedItems,
  updateCategory,
  updateCategoryVisibility
});
//# sourceMappingURL=meta.js.map