import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { CollectionsQueryBuilder, Collection, GetCollectionBySlugResponse } from './index.typings.js';
export { CollectionsQueryResult, CursorPaging, Cursors, GetCollectionBySlugRequest, GetCollectionRequest, GetCollectionResponse, Keyword, Media, MediaItem, MediaItemItemOneOf, MediaItemType, MediaItemTypeWithLiterals, MediaItemUrlAndSize, MediaItemVideo, PlatformPaging, PlatformPagingMetadata, PlatformQuery, PlatformQueryPagingMethodOneOf, QueryCollectionsRequest, QueryCollectionsResponse, SeoSchema, Settings, SortOrder, SortOrderWithLiterals, Sorting, Tag } from './index.typings.js';

declare function queryCollections$1(httpClient: HttpClient): QueryCollectionsSignature;
interface QueryCollectionsSignature {
    /**
     * Retrieves a list of up to 100 collections, given the provided paging, sorting and filtering.
     * See [Stores Pagination](https://dev.wix.com/api/rest/wix-stores/pagination) for more information.
     */
    (): CollectionsQueryBuilder;
}
declare function getCollection$1(httpClient: HttpClient): GetCollectionSignature;
interface GetCollectionSignature {
    /**
     * Retrieves a collection with the provided ID.
     * @param - Requested collection ID.
     */
    (_id: string): Promise<NonNullablePaths<Collection, `media.mainMedia.image.url` | `media.mainMedia.image.width` | `media.mainMedia.image.height` | `media.mainMedia.video.files` | `media.mainMedia.video.stillFrameMediaId` | `media.mainMedia.mediaType` | `media.mainMedia.title` | `media.mainMedia._id` | `media.items` | `numberOfProducts`, 5>>;
}
declare function getCollectionBySlug$1(httpClient: HttpClient): GetCollectionBySlugSignature;
interface GetCollectionBySlugSignature {
    /**
     * Retrieves a collection with the provided slug.
     * @param - Slug of the collection to retrieve.
     */
    (slug: string): Promise<NonNullablePaths<GetCollectionBySlugResponse, `collection.media.mainMedia.image.url` | `collection.media.mainMedia.image.width` | `collection.media.mainMedia.image.height` | `collection.media.mainMedia.video.files` | `collection.media.mainMedia.video.stillFrameMediaId` | `collection.media.mainMedia.mediaType` | `collection.media.mainMedia.title` | `collection.media.mainMedia._id` | `collection.media.items` | `collection.numberOfProducts`, 6>>;
}

declare const queryCollections: MaybeContext<BuildRESTFunction<typeof queryCollections$1> & typeof queryCollections$1>;
declare const getCollection: MaybeContext<BuildRESTFunction<typeof getCollection$1> & typeof getCollection$1>;
declare const getCollectionBySlug: MaybeContext<BuildRESTFunction<typeof getCollectionBySlug$1> & typeof getCollectionBySlug$1>;

export { Collection, CollectionsQueryBuilder, GetCollectionBySlugResponse, getCollection, getCollectionBySlug, queryCollections };
