// src/tips-staff-v1-staff-tippable-staff.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/tips-staff-v1-staff-tippable-staff.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixTipsStaffV1TipStaffServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/tips-staff-service",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/tips-staff-service",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/tips-staff-service",
        destPath: ""
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/tips-staff-service",
        destPath: ""
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/_api/tips-staff-service",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/tips-staff",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tippable-staff";
function listTippableStaff(payload) {
  function __listTippableStaff({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.staff.v1.staff",
      method: "GET",
      methodFqn: "wix.tips.staff.v1.TipStaffService.ListTippableStaff",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsStaffV1TipStaffServiceUrl({
        protoPath: "/v1/eligible-staff",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listTippableStaff;
}

// src/tips-staff-v1-staff-tippable-staff.universal.ts
var IdentityType = /* @__PURE__ */ ((IdentityType2) => {
  IdentityType2["UNKNOWN"] = "UNKNOWN";
  IdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  IdentityType2["MEMBER"] = "MEMBER";
  IdentityType2["WIX_USER"] = "WIX_USER";
  IdentityType2["APP"] = "APP";
  return IdentityType2;
})(IdentityType || {});
async function listTippableStaff2(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    includeWixUsers: options?.includeWixUsers,
    filterByName: options?.filterByName,
    filterByIds: options?.filterByIds
  });
  const reqOpts = listTippableStaff(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          includeWixUsers: "$[0].includeWixUsers",
          filterByName: "$[0].filterByName",
          filterByIds: "$[0].filterByIds"
        },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
export {
  IdentityType,
  listTippableStaff2 as listTippableStaff
};
//# sourceMappingURL=index.typings.mjs.map