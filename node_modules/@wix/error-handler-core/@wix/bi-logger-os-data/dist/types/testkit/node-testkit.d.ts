import { TestkitBase } from '@wix/wix-testkit-base';
import { DateTime, GUID, Url } from '../types';
import { EventsFilter, validateSingleEvent } from './common';
export declare class WixBiSchemaNodeTestkit extends TestkitBase {
    private _biTestkit;
    private allFieldsAreMandatory;
    constructor(logDir?: string);
    doStart(): any;
    doStop(): any;
    private validate;
    util: {
        /**
         * @description This function returns all sent events directly from 'biLoggerTestkit', without typechecking.
         */
        getRawEvents: () => any;
        /**
         * This function will assert that all sent bi events have correct types in afterEach() phase of tests
         * @param timeout
         */
        assertAllEventsCorrectTypes: (timeout?: number) => void;
        /**
         * This function will mark all fields as mandatory in the next assertion
         * @param timeout
         */
        makeAllFieldsMandatory: (value: boolean) => void;
    };
    get wixPatternsSummaryBarIsShownSrc144Evid1(): EventsFilter<{
        artifactId: string;
        cairoVersion: string;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
        summaryBarList: string;
        featureStatus: string;
        hostingPlatformContextId: string;
    }>;
    get wixPatternsPageInteractiveSrc144Evid1000(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        url: Url;
        cairoVersion: string;
        domain: string;
        componentName: string;
        componentType: string;
        resource: string;
        loadingTime: number;
        appId: string;
        product: string;
        route: string;
        hostingPlatformContextId: string;
        routerUsage: boolean;
    }>;
    get wixPatternsFullPageLoadCompletedSrc144Evid1001(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        url: Url;
        cairoVersion: string;
        domain: string;
        componentName: string;
        componentType: string;
        resource: string;
        loadingTime: number;
        appId: string;
        product: string;
        route: string;
        hostingPlatformContextId: string;
        routerUsage: boolean;
    }>;
    get pickerModalUsability(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        searchResultsCnt: number;
        domain: string;
        searchTerm: string;
        itemsLoadedCnt: number;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        maxItems: number;
        componentType: string;
        itemsCnt: number;
        pickSource: string;
        resource: string;
        loadingTime: number;
        itemId: string;
        type: string;
        appId: string;
        filteredListSize: number;
        action: string;
        product: string;
    }>;
    get pickerPickModalCtaButtonClickOrImmediateCta(): EventsFilter<{
        artifactId: string;
        initialItems: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        maxItems: number;
        componentType: string;
        itemsCnt: number;
        resource: string;
        isImmediate: boolean;
        type: string;
        appId: string;
        filteredListSize: number;
        product: string;
    }>;
    get pickerPickerOpenButton(): EventsFilter<{
        artifactId: string;
        initialItems: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        maxItems: number;
        componentType: string;
        resource: string;
        type: string;
        appId: string;
        filteredListSize: number;
        action: string;
        product: string;
    }>;
    get newItemCreationStart(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        numSelectedItems: number;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        maxItems: number;
        currentSortOrder: string;
        componentType: string;
        numSortedColumns: number;
        currentFilters: string;
        numColumns: number;
        resource: string;
        visibleColumnsOrder: string;
        origin: string;
        numFiltersActive: number;
        type: string;
        appId: string;
        filteredListSize: number;
        product: string;
        consumerArtifactId: string;
    }>;
    get newItemCreationEnd(): EventsFilter<{
        resultType: string;
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        numSelectedItems: number;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        maxItems: number;
        currentSortOrder: string;
        componentType: string;
        numSortedColumns: number;
        currentFilters: string;
        numColumns: number;
        resource: string;
        visibleColumnsOrder: string;
        origin: string;
        itemId: string;
        numFiltersActive: number;
        type: string;
        appId: string;
        filteredListSize: number;
        product: string;
        consumerArtifactId: string;
    }>;
    get pikachuCategoriesDropdownButtonClicked(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
        providerName: string;
        providerId: string;
        url: string;
    }>;
    get pikachuItemCategorySelected(): EventsFilter<{
        artifactId: string;
        itemCategory: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
        url: string;
    }>;
    get loadStart(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        featuresAvailability: string;
        url: Url;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        currentFilters: string;
        resource: string;
        additionalFeaturesAvailability: string;
        currentView: string;
        appId: string;
        product: string;
        providerId: string;
        providerName: string;
        hostingPlatformContextId: string;
        theme: string;
        consumerId: string;
        consumerArtifactId: string;
        routerUsage: boolean;
        isCurrentViewCustomMade: boolean;
        artifactIdNew: string;
        currentViewType: string;
        componentIdNew: string;
        componentNameNew: string;
    }>;
    get loadEnd(): EventsFilter<{
        componentStatus: string;
        artifactId: string;
        initialItems: number;
        csid: GUID;
        url: Url;
        cairoVersion: string;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        currentFilters: string;
        resource: string;
        loadingTime: number;
        currentView: string;
        appId: string;
        isInternalPage: boolean;
        filteredListSize: number;
        product: string;
        preLoadToolbarUsed: boolean;
        providerName: string;
        providerId: string;
        hostingPlatformContextId: string;
        theme: string;
        consumerId: string;
        consumerArtifactId: string;
        route: string;
        routerUsage: boolean;
        isCurrentViewCustomMade: boolean;
        artifactIdNew: string;
        currentViewType: string;
        componentNameNew: string;
        componentIdNew: string;
    }>;
    get loadMore(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        currentFilters: string;
        resource: string;
        loadingTime: number;
        currentView: string;
        appId: string;
        filteredListSize: number;
        loadedItems: number;
        product: string;
    }>;
    get componentDismissed(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        origin: string;
        appId: string;
        product: string;
        url: string;
    }>;
    get cairoItemSelectionToggled(): EventsFilter<{
        artifactId: string;
        searchQuery: string;
        currentStep: string;
        initialItems: number;
        location: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        numItemsAfter: number;
        isSelectAll: boolean;
        isTPA: boolean;
        clickType: string;
        componentName: string;
        currentTab: string;
        maxItems: number;
        currentSortOrder: string;
        componentType: string;
        numLevels: number;
        currentFilters: string;
        resource: string;
        timeFromAction: number;
        itemId: string;
        itemIndex: number;
        currentView: string;
        numItemsBefore: number;
        currentLevel: number;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        product: string;
        url: string;
    }>;
    get cairoCtaClicked(): EventsFilter<{
        artifactId: string;
        location: string;
        csid: GUID;
        moreActionsIndex: number;
        cairoVersion: string;
        domain: string;
        isSelectAll: boolean;
        isTPA: boolean;
        componentName: string;
        ctaIndex: number;
        maxItems: number;
        componentType: string;
        numLevels: number;
        numCtas: number;
        ctaName: string;
        localizedCtaName: string;
        resource: string;
        timeFromAction: number;
        itemId: string;
        itemIndex: number;
        currentLevel: number;
        numItems: number;
        appId: string;
        filteredListSize: number;
        product: string;
        hostingPlatformContextId: string;
        url: string;
    }>;
    get cairoSearchResults(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        searchResultsCnt: number;
        domain: string;
        searchTerm: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        loadingTime: number;
        appId: string;
        product: string;
        hostingPlatformContextId: string;
    }>;
    get cairoFilterToggled(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        filterValue: string;
        cairoVersion: string;
        domain: string;
        filterName: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        currentFilters: string;
        actionType: string;
        resource: string;
        origin: string;
        numFiltersActive: number;
        appId: string;
        filteredListSize: number;
        product: string;
        preLoadToolbarUsed: boolean;
        filterType: string;
        isCustomField: boolean;
    }>;
    get cairoAllFiltersCleared(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        filterNames: string;
        componentType: string;
        resource: string;
        origin: string;
        numFiltersCleared: number;
        appId: string;
        filteredListSize: number;
        product: string;
        hostingPlatformContextId: string;
    }>;
    get cairoFiltersPanelUsed(): EventsFilter<{
        artifactId: string;
        isPredefined: boolean;
        feature: string;
        csid: GUID;
        isOpened: boolean;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentSortOrder: string;
        componentType: string;
        numSortedColumns: number;
        numColumns: number;
        numFiltersInView: number;
        resource: string;
        visibleColumnsOrder: string;
        timeFromAction: number;
        origin: string;
        numFiltersActive: number;
        currentView: string;
        appId: string;
        product: string;
        hostingPlatformContextId: string;
        filterTypes: string;
    }>;
    get cairoComponentSorted(): EventsFilter<{
        artifactId: string;
        prevSortOrder: string;
        numSortingColumns: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        origin: string;
        newSortedColumn: string;
        newSortingOrder: string;
        itemIndex: number;
        prevSortingOrder: string;
        newSortOrder: string;
        appId: string;
        isAddNewSort: boolean;
        prevSortedColumn: string;
        filteredListSize: number;
        prevNumSortingColumns: number;
        product: string;
    }>;
    get cairoTabSelected(): EventsFilter<{
        artifactId: string;
        numTabs: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        prevTabIndex: number;
        componentName: string;
        componentType: string;
        hasAllTab: boolean;
        prevTabId: string;
        resource: string;
        newTabId: string;
        newTabIndex: number;
        appId: string;
        filteredListSize: number;
        product: string;
    }>;
    get cairoViewSaved(): EventsFilter<{
        artifactId: string;
        viewId: string;
        isPredefined: boolean;
        searchQuery: string;
        csid: GUID;
        numColumnsInView: number;
        cairoVersion: string;
        domain: string;
        viewFilters: string;
        newViewName: string;
        isTPA: boolean;
        componentName: string;
        currentSortOrder: string;
        changedAttributes: string;
        componentType: string;
        numFiltersInView: number;
        resource: string;
        visibleColumnsOrder: string;
        origin: string;
        prevName: string;
        appId: string;
        isDefault: boolean;
        saveType: string;
        product: string;
    }>;
    get cairoViewSelected(): EventsFilter<{
        artifactId: string;
        isPredefined: boolean;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        newViewName: string;
        prevViewName: string;
        isTPA: boolean;
        componentName: string;
        prevFilters: string;
        componentType: string;
        currentFilters: string;
        resource: string;
        isFromSearchView: boolean;
        numFiltersActive: number;
        currentView: string;
        appId: string;
        filteredListSize: number;
        isDefault: boolean;
        product: string;
    }>;
    get wixPatternsViewSelectedLoadEndSrc144Evid1234(): EventsFilter<{
        artifactId: string;
        isPredefined: boolean;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        newViewName: string;
        prevViewName: string;
        isTPA: boolean;
        componentName: string;
        prevFilters: string;
        componentType: string;
        currentFilters: string;
        resource: string;
        isFromSearchView: boolean;
        numFiltersActive: number;
        currentView: string;
        appId: string;
        filteredListSize: number;
        isDefault: boolean;
        product: string;
        loadingTime: number;
    }>;
    get cairoViewDeleted(): EventsFilter<{
        artifactId: string;
        viewId: string;
        viewName: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        viewFilters: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numFiltersInView: number;
        resource: string;
        wasSelected: boolean;
        appId: string;
        isDefault: boolean;
        product: string;
    }>;
    get cairoExportCtaClicked(): EventsFilter<{
        artifactId: string;
        exportId: string;
        csid: GUID;
        cairoVersion: string;
        numSelectedItems: number;
        domain: string;
        availableExportTypes: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        filteredListSize: number;
        defaultExportType: string;
        product: string;
        hostingPlatformContextId: string;
    }>;
    get cairoItemToggledInExportModal(): EventsFilter<{
        artifactId: string;
        exportId: string;
        prevSelectedExportType: string;
        newSelectedExportType: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        availableExportTypes: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        filteredListSize: number;
        product: string;
    }>;
    get cairoExportModalCtaClicked(): EventsFilter<{
        artifactId: string;
        exportId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        availableExportTypes: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        supportsTotal: boolean;
        selectedExportType: string;
        resource: string;
        origin: string;
        numItems: number;
        appId: string;
        action: string;
        product: string;
        hostingPlatformContextId: string;
    }>;
    get cairoExportProcessStart(): EventsFilter<{
        artifactId: string;
        exportId: string;
        try: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        supportsTotal: boolean;
        selectedExportType: string;
        resource: string;
        numItems: number;
        appId: string;
        product: string;
    }>;
    get cairoUserAttemptsToCancelTheExport(): EventsFilter<{
        artifactId: string;
        duration: number;
        exportId: string;
        try: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        numItemsExported: number;
        componentType: string;
        supportsTotal: boolean;
        selectedExportType: string;
        resource: string;
        origin: string;
        numItems: number;
        appId: string;
        product: string;
    }>;
    get cairoCancelExportModalCtaClicked(): EventsFilter<{
        artifactId: string;
        duration: number;
        exportId: string;
        modalType: string;
        try: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        numItemsExported: number;
        componentType: string;
        ctaName: string;
        supportsTotal: boolean;
        selectedExportType: string;
        resource: string;
        numItems: number;
        appId: string;
        product: string;
    }>;
    get cairoExportProcessEnd(): EventsFilter<{
        artifactId: string;
        duration: number;
        exportId: string;
        try: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        result: string;
        isTPA: boolean;
        fileName: string;
        componentName: string;
        numItemsExported: number;
        componentType: string;
        supportsTotal: boolean;
        selectedExportType: string;
        resource: string;
        numItems: number;
        appId: string;
        product: string;
    }>;
    get cairoFileDownloadToastDisplayed(): EventsFilter<{
        artifactId: string;
        exportType: string;
        exportId: string;
        try: number;
        csid: GUID;
        cairoVersion: string;
        numSelectedItems: number;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
    }>;
    get cairoFileDownloadToastDismissed(): EventsFilter<{
        artifactId: string;
        exportType: string;
        duration: number;
        exportId: string;
        csid: GUID;
        cairoVersion: string;
        numSelectedItems: number;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        dismissMode: string;
        resource: string;
        appId: string;
        product: string;
    }>;
    get cairoFileDownloadToastDownloadButtonClicked(): EventsFilter<{
        artifactId: string;
        exportType: string;
        duration: number;
        exportId: string;
        csid: GUID;
        cairoVersion: string;
        numSelectedItems: number;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
    }>;
    get cairoExportFailedModalCtaClicked(): EventsFilter<{
        artifactId: string;
        exportId: string;
        try: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        numItemsExported: number;
        componentType: string;
        ctaName: string;
        supportsTotal: boolean;
        selectedExportType: string;
        resource: string;
        numItems: number;
        appId: string;
        product: string;
    }>;
    get cairoTableTopNotificationDisplayed(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        notificationText: string;
        appId: string;
        filteredListSize: number;
        product: string;
    }>;
    get cairoTableTopNotificationDismissed(): EventsFilter<{
        artifactId: string;
        duration: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        dismissMode: string;
        resource: string;
        notificationText: string;
        appId: string;
        filteredListSize: number;
        product: string;
    }>;
    get cairoDragItem(): EventsFilter<{
        artifactId: string;
        searchQuery: string;
        initialItems: number;
        csid: GUID;
        dragAndDropID: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        isFromHandle: boolean;
        componentType: string;
        currentFilters: string;
        resource: string;
        itemId: string;
        itemIndex: number;
        currentView: string;
        numItemsBefore: number;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        product: string;
        itemLevel: number;
        hierarchyPathIndex: string;
    }>;
    get cairoDragItemEndDrop(): EventsFilter<{
        artifactId: string;
        duration: number;
        searchQuery: string;
        initialItems: number;
        csid: GUID;
        dragAndDropID: GUID;
        itemIndexBefore: number;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        isFromHandle: boolean;
        componentType: string;
        itemIndexAfter: number;
        currentFilters: string;
        resource: string;
        itemId: string;
        endType: string;
        currentView: string;
        numItemsBefore: number;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        product: string;
        itemLevelBefore: number;
        itemLevelAfter: number;
        hierarchyPathIndexBefore: string;
        hierarchyPathIndexAfter: string;
    }>;
    get cairoDragActionUnsuccessfulUpdateInServer(): EventsFilter<{
        artifactId: string;
        searchQuery: string;
        csid: GUID;
        dragAndDropID: GUID;
        itemIndexBefore: number;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        numOfWaitingUpdates: number;
        componentName: string;
        componentType: string;
        itemIndexAfter: number;
        currentFilters: string;
        errorType: string;
        numItemsBeforeFailed: number;
        resource: string;
        filtersApplied: string;
        timeFromEndDrag: number;
        viewShown: string;
        itemId: string;
        filteredListSizeShown: number;
        numItemsBefore: number;
        appId: string;
        filteredListSize: number;
        sortOrderApplied: string;
        tabShown: string;
        wasFromHandle: boolean;
        product: string;
    }>;
    get cairoTryAgainClicked(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        numOfWaitingUpdates: number;
        componentName: string;
        componentType: string;
        loaction: string;
        resource: string;
        actionName: string;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        product: string;
        url: string;
    }>;
    get cairoManageViewClicked(): EventsFilter<{
        artifactId: string;
        isPredefined: boolean;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numFiltersInView: number;
        resource: string;
        currentView: string;
        appId: string;
        product: string;
    }>;
    get cairoManageViewActionSelected(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numActions: number;
        resource: string;
        actionIndex: number;
        actionName: string;
        currentView: string;
        appId: string;
        product: string;
    }>;
    get cairoUndoClicked(): EventsFilter<{
        artifactId: string;
        viewId: string;
        viewNameApplied: string;
        viewName: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        changedAttributes: string;
        componentType: string;
        currentFilters: string;
        resource: string;
        actionName: string;
        filteredListSizeShown: number;
        currentView: string;
        appId: string;
        filteredListSize: number;
        sortOrderApplied: string;
        product: string;
    }>;
    get cairoViewsUnsuccessfulUpdateInServer(): EventsFilter<{
        artifactId: string;
        viewId: string;
        searchQuery: string;
        csid: GUID;
        timeFromEndAction: number;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        numOfWaitingUpdates: number;
        componentName: string;
        currentTab: string;
        componentType: string;
        currentFilters: string;
        errorType: string;
        resource: string;
        filtersApplied: string;
        actionName: string;
        filteredListSizeShown: number;
        currentView: string;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        product: string;
    }>;
    get cairoSortPanelUsed(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        isOpened: boolean;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentSortOrder: string;
        componentType: string;
        numSortedColumns: number;
        resource: string;
        appId: string;
        product: string;
    }>;
    get cairoReorderingSortColumns(): EventsFilter<{
        artifactId: string;
        prevSortOrder: string;
        numSortingColumns: number;
        csid: GUID;
        columnIndexBefore: number;
        cairoVersion: string;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        timeFromAction: number;
        columnIndexAfter: number;
        newSortOrder: string;
        appId: string;
        filteredListSize: number;
        sortingColumn: string;
        product: string;
    }>;
    get cairoSortUnsuccessfulUpdateInServer(): EventsFilter<{
        artifactId: string;
        searchQuery: string;
        csid: GUID;
        timeFromEndAction: number;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        numOfWaitingUpdates: number;
        componentName: string;
        currentTab: string;
        componentType: string;
        currentFilters: string;
        errorType: string;
        resource: string;
        filtersApplied: string;
        visibleColumnsOrder: string;
        origin: string;
        viewShown: string;
        actionName: string;
        filteredListSizeShown: number;
        currentView: string;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        sortOrderApplied: string;
        tabShown: string;
        sortingColumn: string;
        product: string;
    }>;
    get cairoApiRequestDataLoadEnd(): EventsFilter<{
        artifactId: string;
        duration: number;
        initialItems: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        currentFilters: string;
        errorType: string;
        resource: string;
        pageType: string;
        route: string;
        currentView: string;
        appId: string;
        filteredListSize: number;
        product: string;
        url: string;
    }>;
    get cairoPageCtaClicked(): EventsFilter<{
        artifactId: string;
        location: string;
        csid: GUID;
        isValid: boolean;
        moreActionsIndex: number;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        ctaType: string;
        section: string;
        componentType: string;
        numCtas: number;
        ctaName: string;
        resource: string;
        pageType: string;
        appId: string;
        product: string;
        url: string;
        origin: string;
    }>;
    get cairoSearchViewInViews(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        searchResultsCnt: number;
        domain: string;
        searchTerm: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numCategoriesInResults: number;
        numViews: number;
        resource: string;
        endType: string;
        appId: string;
        product: string;
    }>;
    get cairoPageBackOrBreadcrumbClicked(): EventsFilter<{
        artifactId: string;
        destination_page_type: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        section: string;
        componentType: string;
        resource: string;
        buttonName: string;
        pageType: string;
        appId: string;
        product: string;
    }>;
    get cairoSectionCtaClicked(): EventsFilter<{
        loaction: string;
        artifactId: string;
        sectionType: string;
        location: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        ctaType: string;
        componentType: string;
        ctaName: string;
        localizedCtaName: string;
        resource: string;
        ctaId: string;
        appId: string;
        product: string;
    }>;
    get cairoTpaSCtaClicked(): EventsFilter<{
        artifactId: string;
        location: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        tpaComponentId: string;
        isTPA: boolean;
        componentName: string;
        ctaIndex: number;
        componentType: string;
        numCtas: number;
        ctaName: string;
        resource: string;
        appId: GUID;
        product: string;
    }>;
    get cairoDataExAddCustomField(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numColumns: number;
        resource: string;
        visibleColumnsOrder: string;
        origin: string;
        appId: string;
        product: string;
        customOrigin: string;
    }>;
    get cairoDataExCustomFieldEndProcess(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        changedFields: string;
        cairoVersion: string;
        domain: string;
        permissions: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        key: string;
        numAdded: number;
        resource: string;
        fieldName: string;
        origin: string;
        numDropdownOptions: number;
        actionName: string;
        endType: string;
        fieldType: string;
        appId: string;
        currentDropdownOptions: string;
        product: string;
        customOrigin: string;
    }>;
    get cairoDataExCustomFieldAdvancesSettings(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        origin: string;
        actionName: string;
        appId: string;
        product: string;
    }>;
    get cairoLearnMore(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        origin: string;
        appId: string;
        product: string;
    }>;
    get cairoApplyButtonClicked(): EventsFilter<{
        artifactId: string;
        changedLevels: string;
        feature: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        listSize: number;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        numOfActions: number;
        origin: string;
        numOptionalFields: number;
        numActiveFields: number;
        appId: string;
        filteredListSize: number;
        product: string;
        currentStatus: string;
    }>;
    get cairoChangesBeforeApply(): EventsFilter<{
        artifactId: string;
        isClearButton: boolean;
        feature: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        fieldValue: string;
        resource: string;
        fieldName: string;
        numActiveFields: number;
        appId: string;
        product: string;
    }>;
    get cairoDiscardChangesBeforeApply(): EventsFilter<{
        artifactId: string;
        feature: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        numOfActions: number;
        origin: string;
        numOptionalFields: number;
        numActiveFields: number;
        appId: string;
        product: string;
        currentStatus: string;
    }>;
    get cairoModalCtaClicked(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        ctaName: string;
        localizedCtaName: string;
        resource: string;
        appId: string;
        modalName: string;
        product: string;
    }>;
    get cairoDataExtensionUnsuccessfulUpdateInServer(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        permissions: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        key: string;
        errorType: string;
        resource: string;
        fieldName: string;
        origin: string;
        actionName: string;
        fieldType: string;
        appId: string;
        product: string;
    }>;
    get cairoErrorInLoadingAComponent(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        featuresAvailability: string;
        url: Url;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        currentFilters: string;
        errorType: string;
        resource: string;
        currentView: string;
        appId: string;
        product: string;
    }>;
    get cairoNestedTableCollapseAndExpand(): EventsFilter<{
        artifactId: string;
        searchQuery: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isSelectAll: boolean;
        isTPA: boolean;
        clickType: string;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        numLevels: number;
        countItems: number;
        currentFilters: string;
        resource: string;
        itemId: string;
        itemIndex: number;
        currentView: string;
        currentLevel: number;
        appId: string;
        filteredListSize: number;
        isFromSearch: boolean;
        product: string;
    }>;
    get cairoTagsModalStartLoad(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numTags: number;
        resource: string;
        origin: string;
        appId: string;
        product: string;
    }>;
    get cairoTagsModalEndProcess(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numTags: number;
        resource: string;
        origin: string;
        endType: string;
        appId: string;
        product: string;
    }>;
    get cairoTagsAddDeleteTag(): EventsFilter<{
        artifactId: string;
        tagName: string;
        previousName: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numTags: number;
        resource: string;
        origin: string;
        actionName: string;
        appId: string;
        isFromSearch: boolean;
        product: string;
        tagSubOrigin: string;
    }>;
    get cairoTagsUnsuccessfulUpdateInServer(): EventsFilter<{
        artifactId: string;
        tagName: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        errorType: string;
        numTags: number;
        resource: string;
        origin: string;
        actionName: string;
        appId: string;
        product: string;
    }>;
    get cairoSearchForTags(): EventsFilter<{
        artifactId: string;
        location: string;
        csid: GUID;
        cairoVersion: string;
        searchResultsCnt: number;
        domain: string;
        searchTerm: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        endType: string;
        appId: string;
        product: string;
    }>;
    get cairoTagsWidgetLoaded(): EventsFilter<{
        artifactId: string;
        numTagsAssigned: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numTags: number;
        resource: string;
        itemId: string;
        appId: string;
        product: string;
        theme: string;
    }>;
    get cairoTagsWidgetClickOnCta(): EventsFilter<{
        artifactId: string;
        numTagsAssigned: number;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numTags: number;
        resource: string;
        actionName: string;
        itemId: string;
        appId: string;
        product: string;
        theme: string;
    }>;
    get cairoTagsAssignTag(): EventsFilter<{
        artifactId: string;
        numTagsAssigned: number;
        tagName: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numTags: number;
        resource: string;
        origin: string;
        actionName: string;
        itemId: string;
        numItems: number;
        appId: string;
        isFromSearch: boolean;
        product: string;
        theme: string;
    }>;
    get cairoPageDiscardChangesBeforeSave(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        numOfActions: number;
        origin: string;
        numOfFields: number;
        pageType: string;
        appId: string;
        product: string;
        url: string;
    }>;
    get cairoAssignTagsToEntities(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        assignedTags: string;
        componentType: string;
        unAssignedTags: string;
        resource: string;
        origin: string;
        actionName: string;
        itemIds: string;
        numItems: number;
        appId: string;
        isFromSearch: boolean;
        product: string;
    }>;
    get cairoReloadErrorState(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        featuresAvailability: string;
        url: Url;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        currentFilters: string;
        errorType: string;
        resource: string;
        cta: string;
        currentView: string;
        appId: string;
        product: string;
    }>;
    get cairoCustomizeColumnsInSidePanel(): EventsFilter<{
        artifactId: string;
        isPredefined: boolean;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        numSortedColumns: number;
        numColumns: number;
        numFiltersInView: number;
        resource: string;
        visibleColumnsOrder: string;
        actionName: string;
        numFiltersActive: number;
        currentView: string;
        appId: string;
        product: string;
    }>;
    get wixPatternsNestedTableCollapseAndExpandAllSrc144Evid178(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        clickType: string;
        componentName: string;
        currentTab: string;
        currentSortOrder: string;
        componentType: string;
        numLevels: number;
        currentFilters: string;
        resource: string;
        appId: string;
        filteredListSize: number;
        product: string;
    }>;
    get wixPatternsSectionHeaderPrimaryActionClicked(): EventsFilter<{
        artifactId: string;
        cairoVersion: string;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
        summaryBarList: string;
        featureStatus: string;
        cta: string;
        sectionId: string;
    }>;
    get wixPatternsAppWasInstalledSrc144Evid200(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        pageType: string;
        appId: string;
        product: string;
        appName: string;
        url: string;
    }>;
    get wixPatternsItemCreatedWithAiSrc144Evid3(): EventsFilter<{
        artifactId: string;
        url: Url;
        cairoVersion: string;
        domain: string;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
        itemName: string;
        itemId: string;
        hostingPlatformContextId: string;
        csid: GUID;
    }>;
    get wixPatternsClickOnViewDropdownSrc144Evid4(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        resource: string;
        appId: string;
        product: string;
        hostingPlatformContextId: string;
    }>;
    get wixPatternsMappingPagesSrc144Evid5(): EventsFilter<{
        artifactId: string;
        componentName: string;
        componentType: string;
        appId: string;
        components: string;
        pageType: string;
        componentId: string;
        isSinglePage: boolean;
    }>;
    get wixPatternsSelectAProviderSrc144Evid6(): EventsFilter<{
        artifactId: string;
        csid: GUID;
        cairoVersion: string;
        domain: string;
        isTPA: boolean;
        componentName: string;
        componentType: string;
        providerName: string;
        resource: string;
        appId: string;
        product: string;
        providerId: string;
        origin: string;
        customOrigin: string;
        url: string;
    }>;
    get httpClientErrorMappingSrc176Evid100(): EventsFilter<{
        session_id: string;
        is_override_error: string;
        translated_message: string;
        error_opt_out: boolean;
    }>;
    get getResolvedErrorSrc176Evid101(): EventsFilter<{
        session_id: string;
        isEn: boolean;
        mapped_error_not_available: string;
        translated_message: string;
        action_text: string;
        common_errors_load_failed: string;
        is_consumer_resolved_error: boolean;
    }>;
    get showErrorSrc176Evid102(): EventsFilter<{
        session_id: string;
        isEn: boolean;
        displayed_message: string;
        displayed_action: string;
        action_was_provided: string;
    }>;
    get retryErrorSrc176Evid103(): EventsFilter<{
        session_id: string;
    }>;
    get httpClientErrorSrc176Evid404(): EventsFilter<{
        request_id: string;
        panorama_guid: string;
        artifact_id: string;
        hosting_platform: string;
        app_id: string;
        error_code: number;
        is_override_error: string;
        is_override_error_state_function: string;
        error_json: string;
        artifactVersion: string;
        translated_message: string;
        method: string;
        error_message: string;
        exception_message: string;
        client_error_code: string;
        error_type: string;
        is_consumer_resolved_error: boolean;
        full_artifact_id: string;
        url: string;
        serverUrl: string;
        pageUrl: string;
        hostingEnvironment: string;
        hasInternetConnection: boolean;
        session_id: string;
        entity_fqdn: string;
        method_fqn: string;
        server_artifactid: string;
    }>;
    get pingMarketingConsentUnsubscribeClickSrc19Evid10001(): EventsFilter<{
        msid: string;
        appDefId: string;
        hashed_email: string;
        metadata: string;
    }>;
    get unsubscribeEmailPageView(): EventsFilter<{
        date_created: DateTime;
        _artificial_ts: DateTime;
        uuid: string;
        topic_id: string;
        contact_id: string;
    }>;
    get unsubscribeEmailPageClick(): EventsFilter<{
        date_created: DateTime;
        _artificial_ts: DateTime;
        uuid: string;
        topic_id: string;
        cta: string;
        contact_id: string;
    }>;
    get unsubscribeEmailPersonalizePreferencesClick(): EventsFilter<{
        date_created: DateTime;
        _artificial_ts: DateTime;
        prev_value: string;
        topic_id: string;
        new_value: string;
        contact_id: string;
    }>;
    get pushNotificationNotificationSentToAssure(): EventsFilter<{
        app_id: string;
        azureMessageId: string;
        messagePlatform: string;
        isMuted: boolean;
        mobileTenant: string;
        activityType: string;
        messageId: GUID;
        correlationId: string;
        appId: string;
    }>;
    get pushNotificationNotificationSentToDevice(): EventsFilter<{
        app_id: string;
        platform: string;
        azureMessageId: string;
        messagePlatform: string;
        state: string;
        isMuted: boolean;
        completedCount: number;
        errorCount: number;
        mobileTenant: string;
        activityType: string;
        messageId: GUID;
        appId: string;
        dMessageId: GUID;
    }>;
    get homeNotificationCreatedNew(): EventsFilter<{
        channel: string;
        is_incognito: boolean;
        is_muted: boolean;
        correlation_id: string;
        initiator_type: string;
        notification_id: string;
        initiator_id: string;
        notification_urgency: string;
        app_id: string;
        topic: string;
        contact_id: string;
        msid: GUID;
        template_id: string;
    }>;
    get notificationsResolveAlertNotificationSrc19Evid1128(): EventsFilter<{
        resolve_type: string;
        notification_id: string;
        template_id: string;
    }>;
    get pingNotificationCreationRequest(): EventsFilter<{
        template_component_id: string;
        channel: string;
        template_name: string;
        is_incognito: boolean;
        correlation_id: string;
        app_version: string;
        initiator_type: string;
        notification_id: string;
        initiator_id: string;
        setting_group: string;
        app_id: string;
        topic: string;
        contact_id: string;
        ping_template_id: string;
        template_description: string;
        msid: GUID;
        template_id: string;
    }>;
    get pingNotificationSend(): EventsFilter<{
        channel: string;
        provider: string;
        subaccount_id: string;
        correlation_id: string;
        app_version: string;
        notification_id: string;
        token: string;
        app_id: string;
        target: string;
        contact_id: string;
        os_category: string;
        groupNotificationId: string;
    }>;
    get pingNotificationFiltered(): EventsFilter<{
        channel: string;
        correlation_id: string;
        initiator_type: string;
        reason: string;
        notification_id: string;
        isFilter: boolean;
        initiator_id: string;
        token: string;
        app_id: string;
        topic: string;
        contact_id: string;
        msid: GUID;
        template_id: string;
    }>;
    get androidNotificationReceivedSrc19Evid1134(): EventsFilter<{
        correlation_id: string;
        audience_id: string;
        initiator_type: string;
        initiator_id: string;
        topic: string;
        msid: GUID;
        template_id: string;
    }>;
    get androidNotificationReceived(): EventsFilter<{
        pushApproved: boolean;
        is_muted: boolean;
        is_displayed: boolean;
        payload: string;
        correlation_id: string;
        reason: string;
        notification_id: string;
    }>;
    get pingReviewSendingList(): EventsFilter<{
        is_multilingual: boolean;
        correlation_id: string;
        audience_id: string;
        result: string;
        initiator_type: string;
        reason: string;
        initiator_id: string;
        language: string;
        topic: string;
        contact_id: string;
        template_id: string;
    }>;
    get pingNotificationFilteredBeforeCreatedStage(): EventsFilter<{
        recipient_uuid: GUID;
        channel: string;
        correlation_id: string;
        initiator_type: string;
        reason: string;
        notification_id: string;
        initiator_id: string;
        token: string;
        recipient_contact_id: string;
        app_id: string;
        topic: string;
        msid: GUID;
        template_id: string;
    }>;
    get dummyNameSrc19Evid1256700(): EventsFilter<{}>;
    get mobileAppSettingsChangeStatusOfNotificationCategoryInOsNotificationsSettings(): EventsFilter<{
        uuid: string;
        newStatus: string;
        pushPermissionDetailed: string;
        mobileApp: string;
        category: string;
        contact_id: string;
    }>;
    get contactIsUnsubscribedFromEmailsSms(): EventsFilter<{
        channel: string;
        hashed_phone: string;
        hashed_email: string;
        app_id: string;
        flow_id: string;
        msid: string;
    }>;
    get smsStatusDeliveredToPingByTwilio(): EventsFilter<{
        recipient_uuid: GUID;
        segments_number: number;
        subaccount_id: string;
        initiator_type: string;
        notification_id: string;
        initiator_id: string;
        cost: number;
        error_msg: string;
        app_id: string;
        contact_id: GUID;
        notification_status: string;
        sms_country_code: string;
        sms_id: string;
        template_id: string;
    }>;
    get errorEvent(): EventsFilter<{
        dsc: string;
        response_time: number;
        is_rollout: boolean;
        initiator_name: string;
        builderType: string;
        errscp: string;
        site_id: GUID;
        errn: string;
        p4: string;
        majorver: string;
        trgt: string;
        isLiveEditor: boolean;
        ts: number;
        playerVersion: string;
        artifactVersion: string;
        usersOnPageCount: number;
        viewmode: string;
        error_description_short: string;
        data_center: string;
        screenResolution: string;
        p3: string;
        did: GUID;
        isSg: boolean;
        dsOrigin: string;
        p2: string;
        token: string;
        sessionId: string;
        errc: number;
        stack: string;
        viewerName: string;
        app_id: string;
        sev: number;
        cat: number;
        errormsg: string;
        usersOnSiteCount: number;
        p1: string;
        msid: GUID;
        base_version: number;
        iss: number;
    }>;
    get dashboardDeleteAndRestoreSiteOpenPopup(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
        popup_name: string;
    }>;
    get pageClassifierSrc5Evid10000(): EventsFilter<{
        page_id: string;
        page_name: string;
        route: string;
        uuid: string;
        msid: string;
        revision: number;
        pageType: string;
        score: number;
        url: Url;
        previewUrl: string;
        isPatternsPage: boolean;
        fullRoute: string;
    }>;
    get dashboardDeleteAndRestoreSiteRestoreSiteClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsHoverYourFormFields(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsHoverFieldsInContactList(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsClickOnDropdownField(): EventsFilter<{
        choose: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmitButtonSettingsUpdateValueOfSubmitButton(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderFormSubmitSettingsClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsDisplayErrorPage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        tabName: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsErrorPageTryAgainClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        tabName: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsCreateEmailMarketing(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        email_marketing_type: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSubscriberDoubleOptIn(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSubscriberDoubleOptInLearnMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get dashboardSiteActivityCenterClickDeleteItem(): EventsFilter<{
        name: string;
        item_id: GUID;
        source: string;
        is_deleted: boolean;
        view_type: string;
        origin: string;
        items_count: number;
        type: string;
        platform: string;
        msid: GUID;
        is_archived: boolean;
        feed_id: GUID;
    }>;
    get formBuilderFormSettingsSubscriberDoubleOptInEnable(): EventsFilter<{
        builderOrigin: string;
        toggle: boolean;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSubscriberDoubleOptInSubmitMessage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInboxOptInOutWhoToNotify(): EventsFilter<{
        choose: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInboxOptInOutUpdateEmail(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInboxOptInOutLearnMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        current_option: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInboxOptInOutAreYouSure(): EventsFilter<{
        choose: string;
        builderOrigin: string;
        visitor_id: GUID;
        checkbox: boolean;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInboxOptInOutFindOutMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsEmailNotificationAddContributer(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsEmailNotificationAddNewEmail(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsEmailNotificationWantToNotifyDonTShowThisAgain(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get dashboardSiteActivityCenterClickUndoDeletedItem(): EventsFilter<{
        item_id: GUID;
        source: string;
        is_deleted: boolean;
        view_type: string;
        action_url: string;
        referral: string;
        action_desc: string;
        origin: string;
        items_count: number;
        expire: number;
        type: string;
        platform: string;
        msid: GUID;
        is_archived: boolean;
        feed_id: GUID;
    }>;
    get workflowsSettingsClick(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsShowArchive(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsHideArchive(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsSetAutomations(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        origin: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsDeleteWorkflowClick(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsDeleteWorkflowConfirmation(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsAddNewWorkflow(): EventsFilter<{
        uuid: GUID;
        new_workflow_id: GUID;
        origin: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsBoardUpdateBoardNameIconClick(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsBoardUpdateBoardNameComplete(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsBoardDropdownIconClick(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get dashboardSiteActivityCenterClickOnArchiveItem(): EventsFilter<{
        item_id: GUID;
        source: string;
        is_deleted: boolean;
        view_type: string;
        action_url: string;
        referral: string;
        action_desc: string;
        origin: string;
        items_count: number;
        expire: number;
        type: string;
        platform: string;
        msid: GUID;
        is_archived: boolean;
        feed_id: GUID;
    }>;
    get workflowsAddNewPhaseClick(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        origin: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsAddNewPhaseSave(): EventsFilter<{
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsAddNewCardClick(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        origin: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsAddNewCardSave(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsPhaseSettingsClick(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsPhaseSettingsCreateAutomation(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsPhaseSettingsRenameStepClick(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        origin: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsPhaseSettingsRenameStepComplete(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsPhaseSettingsDeleteStepClick(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsPhaseSettingsDeleteStepConfirm(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get dashboardUserClickedOnContactSNameFromUserActivity(): EventsFilter<{
        name: string;
        item_id: GUID;
        source: string;
        view_type: string;
        origin: string;
        type: string;
        platform: string;
        msid: GUID;
        feed_id: GUID;
    }>;
    get workflowsCardSettingsClick(): EventsFilter<{
        phase_id: GUID;
        uuid: GUID;
        workflow_name: string;
        card_id: GUID;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsCardSettingsCardActions(): EventsFilter<{
        phase_id: GUID;
        uuid: GUID;
        workflow_name: string;
        origin: string;
        card_id: GUID;
        workflow_id: GUID;
        msid: GUID;
        action: string;
    }>;
    get workflowsCardSettingsEditCardNameComplete(): EventsFilter<{
        phase_id: GUID;
        uuid: GUID;
        workflow_name: string;
        origin: string;
        card_id: GUID;
        cardName: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsBoardSelectABoard(): EventsFilter<{
        previous_workflow_id: GUID;
        uuid: GUID;
        workflow_name: string;
        previous_workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsSettingsLearnMoreClick(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsIntroStep1WorkSmarterWithWorkflows(): EventsFilter<{
        step_no: number;
        is_final_step: boolean;
        msid: GUID;
        action: string;
    }>;
    get workflowsIntroStep2HowItWorks(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsIntroStep3MoveCardsAsYouGo(): EventsFilter<{
        uuid: GUID;
        isSuccessful: boolean;
        msid: GUID;
    }>;
    get workflowsIntroStep4SaveTimeWithAutomations(): EventsFilter<{
        uuid: GUID;
        tooltip_type: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get workflowsIntroStep5CompleteSatisfaction(): EventsFilter<{
        uuid: GUID;
        error_type: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get clickOnSidebarSHeader(): EventsFilter<{
        name: string;
        view_type: string;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get workflowsIntroStep6ThatSIt(): EventsFilter<{
        phase_id: GUID;
        phase_name: string;
        uuid: GUID;
        workflow_name: string;
        workflow_id: GUID;
        msid: GUID;
    }>;
    get dummyNameSrc5Evid10600(): EventsFilter<{}>;
    get workflowsGoToBoardFromContactPanel(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        card_id: GUID;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsConnectContactToWorkflowFromContactPanel(): EventsFilter<{
        uuid: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsClickUpdateContactInWfFromContactPanel(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        card_id: GUID;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsClickOnCompletedArchivedFlowsInContactPanel(): EventsFilter<{
        uuid: GUID;
        click_action: string;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsErrorCardCannotBeRemovedInContactPanel(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        card_id: GUID;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsChangePhaseInContactPanel(): EventsFilter<{
        to_phase_name: string;
        uuid: GUID;
        workflow_name: string;
        origin: string;
        card_id: GUID;
        from_phase_name: string;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsClickOnSaveChangesInContactPanel(): EventsFilter<{
        uuid: GUID;
        workflow_name: string;
        card_id: GUID;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsMoveCard(): EventsFilter<{
        moving_type: string;
        uuid: GUID;
        workflow_name: string;
        origin: string;
        card_id: GUID;
        move_to_step: string;
        workflow_id: GUID;
        contact_id: string;
        msid: GUID;
    }>;
    get workflowsEmptyStatePageLoaded(): EventsFilter<{
        msid: GUID;
        uuid: GUID;
    }>;
    get sidebarState107(): EventsFilter<{
        sub_section_name: string;
        hosting_platform: string;
        section_name: string;
        category_items_list: string;
        items_below_fold: string;
        referral_info: string;
        view_type: string;
        active_item: string;
        prev_page_id: string;
        page_id: string;
        active_item_cta: string;
        sub_category_items_list: string;
        second_sub_category_items_list: string;
        platform: string;
        items_above_fold: string;
        hosting_platform_context_id: string;
        hosting: string;
        msid: GUID;
        view: string;
    }>;
    get workflowsEmptyStateClickOnGetStarted(): EventsFilter<{
        msid: GUID;
        uuid: GUID;
    }>;
    get workflowsTemplatesModalIsPresented(): EventsFilter<{
        msid: GUID;
        uuid: GUID;
    }>;
    get workflowsClickOnUseTemplateOrStartFromScratchOnTemplatesModal(): EventsFilter<{
        template_name: string;
        uuid: GUID;
        msid: GUID;
        template_id: GUID;
    }>;
    get workflowsClickOnDismissTemplatesModal(): EventsFilter<{
        msid: GUID;
        uuid: GUID;
    }>;
    get cookiesBannerUouUserClickOnVisitorDataOption(): EventsFilter<{
        action: string;
    }>;
    get cookiesBannerUouUserHoverOverTooltip(): EventsFilter<{
        name: string;
    }>;
    get cookiesBannerUouCookieConsentBannerGetStartedClick(): EventsFilter<{
        action: string;
    }>;
    get cookiesBannerUouDisplayCookieBannerOnSiteCta(): EventsFilter<{
        toggle: boolean;
    }>;
    get cookiesBannerUouUserClickedOnAdvancedOption(): EventsFilter<{}>;
    get cookiesBannerUouUserClickedOnTheGeneralXButton(): EventsFilter<{}>;
    get mobileDashboardCreateNewSite(): EventsFilter<{
        view_type: string;
        platform: string;
        view: string;
    }>;
    get cookiesBannerUouSavePublishClick(): EventsFilter<{
        general_text: string;
        essential_cookies_text: string;
        url_privacy_policy: Url;
        changed_button_style: string;
        custom_font_changed: string;
        custom_text_size_changed: string;
        audience: string;
        settings_button_text: string;
        banner_color: string;
        custom_colors_contrast_ratio: string;
        functional_cookies_text: string;
        changed_second_color: string;
        decline_all_button: string;
        link_option: string;
        consent_button_text: string;
        custom_color_accessible: string;
        revisit_settings_button_location: string;
        save_button_text: string;
        revisit_settings_button: string;
        privacy_policy_link_text: string;
        cookie_status: string;
        analytics_cookies_text: string;
        marketing_cookies_text: string;
        changed_main_color: string;
    }>;
    get cookiesBannerUouUserWithPopUpCta(): EventsFilter<{
        action: string;
        pop_up_type: string;
    }>;
    get cookiesBannerUouAdvancedOptionsCta(): EventsFilter<{
        action: string;
    }>;
    get cookiesBannerUouSetUpAPrivacyPolicyClicks(): EventsFilter<{
        action: string;
    }>;
    get cookiesBannerUouAddADoNotSellDateLinkClick(): EventsFilter<{}>;
    get cookiesBannerUouUouClickOnDoNotSellMyDataLink(): EventsFilter<{}>;
    get cookiesBannerUouUouDisableDataTransfersPopUpIsDisplay(): EventsFilter<{}>;
    get cookiesBannerUouUouWithDisableDataTransfersPopUp(): EventsFilter<{
        action: string;
    }>;
    get cookiesBannerUouUserConsentLogCta(): EventsFilter<{
        action: string;
    }>;
    get cookiesBannerUouExportConsentLogCta(): EventsFilter<{
        action: string;
        time_option: string;
    }>;
    get cookiesBannerUouAPopUpIsDisplay(): EventsFilter<{
        pop_up_type: string;
    }>;
    get cookiesBannerUouSearchMembersById(): EventsFilter<{
        member_id_filled: string;
    }>;
    get cookiesBannerUouReviewRequirementsAlert(): EventsFilter<{}>;
    get formBuilderFormAddNewFieldInnerTabsClick(): EventsFilter<{
        builderOrigin: string;
        tab_name: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderEditorXAddASubscribeCheckbox(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderMigratedFormContactFormToWixFormSuccess(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderConditionalFormAddNewRule(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormLearnMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormIfClickOnDropdown(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormIfChooseFromDropdown(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        fieldType: string;
        msid: GUID;
    }>;
    get accountManagerStartLoadingAccountManager(): EventsFilter<{
        referral_info: string;
        view_type: string;
        initial_load: boolean;
        platform: string;
    }>;
    get formBuilderConditionalFormIfFilledNotFilled(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        filledOption: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormIfFilledSelectionOption(): EventsFilter<{
        count: number;
        choose: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormThenClickOnDropdown(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormThenChooseFromDropdown(): EventsFilter<{
        count: number;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormIsClickOnDropdown(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormIsChooseFromDropdown(): EventsFilter<{
        builderOrigin: string;
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormSaveRule(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormMoreActionClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormMoreActionChoose(): EventsFilter<{
        choose: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormContradictingRuleWarning(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get accountManagerFinishLoadingAccountManager(): EventsFilter<{
        referral_info: string;
        view_type: string;
        initial_load: boolean;
        platform: string;
        loading_time: number;
    }>;
    get formBuilderConditionalFormSaveRuleError(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        reason: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderMigratedFormContactFormToWixFormPhoneNumberIssue(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderConditionalFormViewRuleFromFieldSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderConditionalFormLearnMoreFromTooltipFieldSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get crmHomeIntegrationsMarketingConnect(): EventsFilter<{
        view_type: string;
        connectTab: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeIntegrationsFinanceViewAll(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeIntegrationsFinanceConnect(): EventsFilter<{
        view_type: string;
        connectTab: string;
        platform: string;
        msid: GUID;
    }>;
    get accountSettingsDisableSocialAccountConfirmationModalLoad(): EventsFilter<{
        provider_id: string;
        view_type: string;
        platform: string;
    }>;
    get accountManagerPageComponentStartLoadingAccountManager(): EventsFilter<{
        referral_info: string;
        view_type: string;
        sub_view: string;
        prev_view: string;
        prev_sub_view: string;
        platform: string;
        view: string;
    }>;
    get accountSettingsDisableSocialAccountClickDisableInConfirmationModal(): EventsFilter<{
        provider_id: string;
        view_type: string;
        platform: string;
    }>;
    get crmHomeGoToMarketingTools(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormMoveStateInFunnel(): EventsFilter<{
        fromState: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        toState: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormCloseFunnel(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormQuestionMarkFunnel(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormDemoSiteFunnel(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormChoosePaymentFormType(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        type: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormEnterItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderPaymentFormEnterPrice(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get accountManagerPageComponentFinishLoadingAccountManager(): EventsFilter<{
        referral_info: string;
        view_type: string;
        sub_view: string;
        prev_view: string;
        prev_sub_view: string;
        platform: string;
        view: string;
        loading_time: number;
    }>;
    get dummyNameSrc5Evid1130(): EventsFilter<{
        channel: string;
        correlation_id: string;
        notification_id: string;
        app_id: string;
        target: string;
        contact_id: string;
    }>;
    get dummyNameSrc5Evid1131(): EventsFilter<{}>;
    get notificationInvalidTokens(): EventsFilter<{
        channel: string;
        device_token: string;
        app: string;
        contact_id: string;
    }>;
    get formBuilderPaymentFormHoverPrice(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormDeleteItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormAddAnotherItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormHoverDeleteItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormReachLimitOfItems(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        numberOfItems: number;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormTellUsMoreItems(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormEnterMinMaxPrice(): EventsFilter<{
        minMax: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get accountManagerClickOnSidebarItem(): EventsFilter<{
        name: string;
        sidebar_name: string;
        referral_info: string;
        view_type: string;
        platform: string;
    }>;
    get formBuilderPaymentFormConnectPaymentMethod(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormLearnMoreStep4(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormDashboardContinueGreenBanner(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormDashboardCloseGreenBanner(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormChangePaymentMethod(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormDiscardFunnel(): EventsFilter<{
        builderOrigin: string;
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormPaymentSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        fieldType: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormOpenPaymentOverview(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormGeneralSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get accountManagerClickOnBackInSidebarItem(): EventsFilter<{
        name: string;
        sidebar_name: string;
        referral_info: string;
        view_type: string;
        platform: string;
    }>;
    get formBuilderPaymentFormSettingsAddAnotherItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingsItemMoreActions(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingsItemMoreActionsChoose(): EventsFilter<{
        builderOrigin: string;
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingsConnectPaymentWhenPaymentNotConnected(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingsRestoreField(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingsStopAcceptingPayments(): EventsFilter<{
        builderOrigin: string;
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get settingsLobbySectionIsSeen(): EventsFilter<{
        section_name: string;
        view_type: string;
        platform: string;
        section_loaction_on_page: string;
        hosting: string;
        msid: GUID;
    }>;
    get settingsLobbyClickOnItem(): EventsFilter<{
        item_location_on_page: number;
        section_name: string;
        click_type: string;
        view_type: string;
        cta_name: string;
        page_id: string;
        item_location: string;
        item_name: string;
        status: string;
        platform: string;
        hosting: string;
        msid: GUID;
        categoryName: string;
        pageName: string;
        categoryLocationOnPage: number;
    }>;
    get formBuilderSubmissionLimitReasonForLimit(): EventsFilter<{
        builderOrigin: string;
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get foldersMarkUnmarkSelectAllButton(): EventsFilter<{
        name: string;
        view_type: string;
        sub_view: string;
        platform: string;
        hosting: string;
        view: string;
    }>;
    get formBuilderSubmissionLimitReasonForLimitInfoHover(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get reportNetwork(): EventsFilter<{
        referer_host: string;
        duration: number;
        has_been_active: boolean;
        is_cached: boolean;
        encoded_body_size: number;
        path: string;
        headers_size: number;
        is_blocking: boolean;
        stall_queue_time: number;
        last_referer_host: string;
        user_interactions_count: number;
        response_start: number;
        last_referer_path_name: string;
        transferSize: number;
        request_start: number;
        initiator_type: string;
        host_name: string;
        download_time: number;
        dns_time: number;
        pixel_session_id: string;
        navigation_id: string;
        referer_path_name: string;
        dcl: number;
        version_num: number;
        connection_time: number;
        response_status_code: number;
        load_time: number;
        referer: string;
        server_response_time: number;
        event_start_time: number;
        dom_complete: number;
        protocol: string;
    }>;
    get formBuilderSubmissionLimitLimitByNumberTotalNumber(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: number;
    }>;
    get formBuilderSubmissionLimitLimitByNumberEditMessage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByNumberNumberInfoHover(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByNumberMessageInfoHover(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByDateEnteredDate(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByDateChangeTimeFormat(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByDateChangeTimeFormatInvalid(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByDateChangeDefaultTime(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitLimitByDateChangeMessage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get foldersClickOnChangeViewMode(): EventsFilter<{
        click_name: string;
        view_mode: string;
        view_type: string;
        sub_view: string;
        origin: string;
        platform: string;
        hosting: string;
        view: string;
    }>;
    get formBuilderSubmissionLimitLimitByDateTimezoneSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitRestoreSuccessMessage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get viewInDashboard(): EventsFilter<{
        name: string;
        widget_name: string;
        hosting: string;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsEnableToggle(): EventsFilter<{
        builderOrigin: string;
        toggle: boolean;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsMembersAreaLearnMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsBrowserAutocompleteLearnMore(): EventsFilter<{
        state: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsMainTooltipHover(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsLetMembersEdit(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderAutofillMemberEmailsDropdownEmail(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsChooseDifferentEmail(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get foldersTooltipShown(): EventsFilter<{
        name: string;
        view_type: string;
        sub_view: string;
        platform: string;
        hosting: string;
        view: string;
    }>;
    get formBuilderAutofillMemberEmailsAddAnEmailField(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get veloIdeModalIsOpened(): EventsFilter<{
        modal_type: string;
        context: string;
        page_id: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        window_height: number;
        msid: GUID;
    }>;
    get veloIdeCodeHasBeenUpdated(): EventsFilter<{
        modal_type: string;
        context: string;
        page_id: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        window_height: number;
        msid: GUID;
    }>;
    get veloIdeClickOnMoreActions(): EventsFilter<{
        modal_type: string;
        action_name: string;
        context: string;
        page_id: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        window_height: number;
        msid: GUID;
    }>;
    get veloIdeClickOnATab(): EventsFilter<{
        modal_type: string;
        tab_name: string;
        context: string;
        page_id: string;
        tab_type: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        window_height: number;
        msid: GUID;
    }>;
    get veloIdeModalEndOfProcess(): EventsFilter<{
        modal_type: string;
        context: string;
        page_id: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        end_type: string;
        window_height: number;
        msid: GUID;
    }>;
    get veloIdeModalClickOnLinks(): EventsFilter<{
        modal_type: string;
        context: string;
        page_id: string;
        link_to: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        window_height: number;
        msid: GUID;
    }>;
    get veloIdeModalUnsuccessfulSave(): EventsFilter<{
        modal_type: string;
        context: string;
        page_id: string;
        error_type: string;
        window_width: number;
        origin: string;
        external_id: GUID;
        app_id: GUID;
        window_height: number;
        msid: GUID;
    }>;
    get formBuilderAutofillMemberEmailsAddedMembersArea(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionLimitUouSeenLimitMessage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get sidebarModalOfFteToTheNewSidebarIsLoadedWithSpecificCluster(): EventsFilter<{
        category_items_list: string;
        origin: string;
        installedApps: string;
        pageName: string;
        clusterName: string;
    }>;
    get dashboardSiteSettingsLocationsModalPageView(): EventsFilter<{
        view_type: string;
        origin: string;
        fields: string;
        platform: string;
        location_details: string;
        hosting: string;
        msid: GUID;
    }>;
    get foldersClickOnShowMoreShoeLess(): EventsFilter<{
        name: string;
        view_mode: string;
        view_type: string;
        sub_view: string;
        platform: string;
        hosting: string;
        view: string;
    }>;
    get dashboardUpgradeLink(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get ascendPagePageNavigationClick(): EventsFilter<{
        referral_info: string;
        view_type: string;
        item_name: string;
        category: string;
        prev_view: string;
        platform: string;
        loading_time: number;
    }>;
    get workspaceSelectorSelectWorkspaceModalView(): EventsFilter<{
        num_workspaces: number;
        page_view: string;
        account_type: string;
        clicked_workspace_id: GUID;
        clicked_workspace_role: string;
        platform: string;
        previous_workspace_id: string;
        previous_workspace_role: string;
    }>;
    get workspaceSelectorSelectWorkspaceModalCta(): EventsFilter<{
        num_workspaces: number;
        page_view: string;
        account_type: string;
        clicked_workspace_id: GUID;
        clicked_workspace_role: string;
        platform: string;
        previous_workspace_id: string;
        previous_workspace_role: string;
        cta: string;
    }>;
    get workspaceSelectorSelectWorkspaceModalClose(): EventsFilter<{
        num_workspaces: number;
        page_view: string;
        account_type: string;
        clicked_workspace_id: GUID;
        clicked_workspace_role: string;
        platform: string;
        previous_workspace_id: string;
        previous_workspace_role: string;
        reason: string;
    }>;
    get switchWorkspaceModalSelectWorkspaceModalView(): EventsFilter<{
        page_view: string;
        active_workspace_id: GUID;
        active_workspace_role: string;
        original_workspace_id: string;
        original_workspace_role: string;
    }>;
    get switchWorkspaceModalSelectWorkspaceModalCta(): EventsFilter<{
        page_view: string;
        active_workspace_id: GUID;
        active_workspace_role: string;
        original_workspace_id: string;
        original_workspace_role: string;
        cta: string;
    }>;
    get switchWorkspaceModalWorkspaceModalClose(): EventsFilter<{
        page_view: string;
        active_workspace_id: GUID;
        active_workspace_role: string;
        original_workspace_id: string;
        original_workspace_role: string;
        reason: string;
    }>;
    get formBuilderBizMgrFormsBizTipsClickOnTheTip(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        app_name: string;
        msid: GUID;
    }>;
    get invoicesAddAProductVariantOpenModal(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get ascendPageAscendVideoClick(): EventsFilter<{
        referral_info: string;
        view_type: string;
        prev_view: string;
        platform: string;
        loading_time: number;
    }>;
    get invoicesAddAProductVariantAddToInvoice(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get foldersHoverOverThePermissionIcon1212(): EventsFilter<{
        sub_view: string;
        folder: string;
        origin: string;
        view_level: string;
        platform: string;
        msid: GUID;
        folder_name: string;
        number_of_items: number;
    }>;
    get invoicesCreateOrderNewInvoiceClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get dashboardFinishLoadingLoadingTimeFromStartModule(): EventsFilter<{
        view_type: string;
        sub_view: string;
        platform: string;
        hosting: string;
        refferal_info: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get sitesListPageFoldersLoaded1216(): EventsFilter<{
        view_mode: string;
        folders: string;
        num_displayed_sites: number;
        platform: string;
    }>;
    get deleteLocationModalIsOpened(): EventsFilter<{
        is_multiple_choice: boolean;
        is_default: boolean;
        page_view: string;
        view_type: string;
        is_draft: boolean;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get successfullyDeletedLocation(): EventsFilter<{
        is_multiple_choice: boolean;
        is_default: boolean;
        page_view: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get foldersClickOnCreateNewFolder(): EventsFilter<{
        source: string;
        view_type: string;
        sub_view: string;
        nesting_level: number;
        origin: string;
        view_level: string;
        platform: string;
        hosting: string;
        view: string;
    }>;
    get locationModalFloatingNotification(): EventsFilter<{
        name: string;
        page_view: string;
        view_type: string;
        origin: string;
        type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get foldersClickOnCreateNewFolderInDialog(): EventsFilter<{
        view_type: string;
        sub_view: string;
        nesting_level: number;
        platform: string;
        hosting: string;
        folder_name: string;
        view: string;
    }>;
    get apesSaveEditedNotification(): EventsFilter<{
        view_type: string;
        rule_id: GUID;
        componentChanged: string;
        platform: string;
        msid: GUID;
    }>;
    get apesSaveEditedNotificationSrc5Evid1235(): EventsFilter<{
        view_type: string;
        rule_id: GUID;
        componentChanged: string;
        platform: string;
        msid: GUID;
    }>;
    get apesEditNotificationSelectAudience(): EventsFilter<{
        audience: string;
        view_type: string;
        rule_id: GUID;
        platform: string;
        msid: GUID;
    }>;
    get foldersClickOnMoveToFolderFromDialog(): EventsFilter<{
        referral_url: Url;
        destination_nesting_level: number;
        num_sites_moved: number;
        view_type: string;
        origin_nesting_level: number;
        folder: string;
        origin: string;
        moved_item_type: string;
        platform: string;
        num_folders_moved: number;
        msid: string;
    }>;
    get suggestionsFeedbackClickOnNavigationButtonInPopup(): EventsFilter<{
        logo_value: string;
        hosting_platform: string;
        platformName: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnMoreActions(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnMoreActionsOfASpecificForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnViewForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnEditForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnDeleteForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get foldersClickOnFolderSQuickActions(): EventsFilter<{
        name: string;
        view_mode: string;
        view_type: string;
        sub_view: string;
        nesting_level: number;
        origin: string;
        cta: string;
        view_level: string;
        platform: string;
    }>;
    get customerNotificationsSettingsClickInsidePageWithoutEmailsSections(): EventsFilter<{
        name: string;
        section_name: string;
        view_type: string;
        page_id: string;
        platform: string;
        msid: GUID;
    }>;
    get customerNotificationsSettingsClickOnHideUnhide(): EventsFilter<{
        section_name: string;
        view_type: string;
        origin: string;
        status: boolean;
        platform: string;
        msid: GUID;
        template_id: string;
    }>;
    get customerNotificationsSettingsPreviewEditClickOnToggle(): EventsFilter<{
        channel: string;
        view_type: string;
        rule_id: GUID;
        status: boolean;
        platform: string;
        msid: GUID;
        template_id: string;
    }>;
    get customerNotificationsSettingsPageLoad(): EventsFilter<{
        available_sections: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get bizManagerShowWarningMessage(): EventsFilter<{
        name: string;
        page_view: string;
        view_type: string;
        unsupported_language: string;
        unsupport_apps: string;
        fold_name: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnGoToEditorToPublishYourSite(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnGoToEditorToCreateSubmissionTable(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get copyOfFormBuilderBizMgrClickOnGoToEditorToRemoveForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get customerNotificationsSettingsPreviewEditShowTooltip(): EventsFilter<{
        view_type: string;
        rule_id: string;
        platform: string;
        msid: GUID;
        error_name: string;
        template_id: string;
    }>;
    get foldersApproveActionFromFolderSQuickActionPopup(): EventsFilter<{
        view_type: string;
        nesting_level: number;
        origin: string;
        cta: string;
        platform: string;
        popup_name: string;
        folder_name: string;
    }>;
    get formBuilderBizMgrEmptyStateClickOnWatchVideo(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBizMgrClickOnLoadMoreForms(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBizMgrMoreActionsViewRemovedForms(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBizMgrMoreActionsLearnMore(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBizMgrMoreActionsSendFeedback(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get sidebarTooltipOfModalOfFteToTheNewSidebarIsClicked(): EventsFilter<{}>;
    get foldersSortListView(): EventsFilter<{
        name: string;
        view_type: string;
        sub_view: string;
        order: string;
        platform: string;
        view: string;
    }>;
    get verticalsEmailNotificationSentSrc5Evid1270(): EventsFilter<{
        channel: string;
        view_type: string;
        notificationId: GUID;
        contact_id: string;
        platform: string;
        msid: GUID;
        template_id: string;
    }>;
    get verticalsEmailNotificationSent(): EventsFilter<{
        channel: string;
        view_type: string;
        contact_id: string;
        platform: string;
        notificationid: string;
        msid: GUID;
        template_id: string;
    }>;
    get verticalsEmailNotificationClicked(): EventsFilter<{
        channel: string;
        button_name: string;
        view_type: string;
        contact_id: string;
        platform: string;
        notificationid: string;
        msid: GUID;
        deep_link: string;
        template_id: string;
    }>;
    get sidebarTooltipOfModalOfFteToTheNewSidebarIsShown(): EventsFilter<{}>;
    get sidebarModalOfFteToTheNewSidebarIsClicked(): EventsFilter<{
        category_items_list: string;
        clickName: string;
        installedApps: string;
        pageName: string;
        clusterName: string;
    }>;
    get apesLoadSystemNotificationsModalEnd(): EventsFilter<{
        isPreinstalled: boolean;
        view_type: string;
        origin: string;
        loadTime: number;
        edited: boolean;
        platform: string;
        msid: GUID;
    }>;
    get accountSettingsCloseYourWixAccountEnterPage(): EventsFilter<{
        uuid: GUID;
        is_workspace: boolean;
        view_type: string;
        platform: string;
    }>;
    get accountSettingsCloseYourWixAccountCloseAccountRequestSubmited(): EventsFilter<{
        context: string;
        uuid: GUID;
        is_workspace: boolean;
        view_type: string;
        reason: string;
        platform: string;
        free_text: string;
    }>;
    get foldersMarkASite(): EventsFilter<{
        name: string;
        view_type: string;
        sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
    }>;
    get formBuilderComplexPhoneSettingsShowCountryCodeDropdownToggle(): EventsFilter<{
        toggle_state: boolean;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
        action: string;
    }>;
    get formBuilderComplexPhoneSettingsShowFieldTitleToggle(): EventsFilter<{
        toggle_state: boolean;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneSettingsEnterFieldTitle(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
    }>;
    get formBuilderComplexPhoneSettingsShowInitialTextOfThePhoneFieldSelection(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneSettingsPlaceHolderTextOfThePhoneField(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
    }>;
    get formBuilderComplexPhoneSettingsIsFieldRequired(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        is_required: boolean;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneSettingsCountryCodeEnterFieldTitle(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
    }>;
    get formBuilderComplexPhoneSettingsCountryCodeIncludeCodesFrom(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneSettingsCountryCodeShowInitialTextSelection(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get myAccountSelectSiteFromSiteListPopup(): EventsFilter<{
        site_id: GUID;
        view_type: string;
        sub_view: string;
        num_selected_sites: number;
        origin: string;
        place: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
    }>;
    get formBuilderComplexPhoneSettingsCountryCodeShowInitialTextValue(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderComplexPhoneSettingsSelectNumberFormat(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneSettingsEnteredNumberFormat(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderComplexPhoneSettingsCountryCodeClickOnManageCodeList(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneEditFieldClick(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get dashboardSearch(): EventsFilter<{
        view_type: string;
        no_of_html_sites: number;
        text: string;
        no_of_folders: number;
        place: string;
        no_of_sites: number;
        platform: string;
        msid: GUID;
    }>;
    get foldersClickOnFolder(): EventsFilter<{
        view_type: string;
        sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        folder_name: string;
        view: string;
    }>;
    get crmHomeScrollDown(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsChangeTab(): EventsFilter<{
        tabTo: string;
        view_type: string;
        tabFrom: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesClickCard(): EventsFilter<{
        view_type: string;
        platform: string;
        card: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesEditNumbering(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesEditLogo(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesBusinessInfoEditThem(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesBusinessInfoEditField(): EventsFilter<{
        field: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesDefaultsNotesEditNotes(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesDefaultsNotesLegalTerms(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesDefaultsNotesPreviewInvoice(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get ascendPpPageView(): EventsFilter<{
        referralInfo: string;
        view_type: string;
        origin: string;
        app_id: GUID;
        num_of_packages: number;
        platform: string;
    }>;
    get financialServicesSettingsPriceQuotesBusinessDetailsSiteSettings(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsPriceQuotesBusinessDetailsGoToSiteSettings(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsPriceQuotesEditNumbering(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get financialServicesSettingsInvoicesSettingsClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeGeneralVideo(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesItemsListChooseAProduct(): EventsFilter<{
        ifVariantModal: boolean;
        view_type: string;
        appDefId: GUID;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesItemsListAddNewProduct(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesItemsListLinkInTooltipProducts(): EventsFilter<{
        view_type: string;
        appDefId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get ascendPpClickOnShowMoreLess(): EventsFilter<{
        referralInfo: string;
        view_type: string;
        ascend_product: string;
        origin: string;
        productName: string;
        platform: string;
        action: string;
    }>;
    get invoicesWidgetMoreAction(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        contactId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetMoreActionChooseAnAction(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        origin: string;
        contactId: GUID;
        platform: string;
        msid: GUID;
        action: string;
    }>;
    get invoicesWidgetResendViaEmail(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        contactId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetChangeTab(): EventsFilter<{
        tabTo: string;
        view_type: string;
        tabFrom: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetCreateNew(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetPreviewInvoice(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        origin: string;
        contactId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetSeeAllInvoices(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        appDefId: GUID;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetReportsViewReport(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesWidgetReportsTimePicker(): EventsFilter<{
        time_frame: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesEditModesEditInvoice(): EventsFilter<{
        ifOrderExist: boolean;
        hasViewedInvoice: boolean;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
        invoiceStatus: string;
    }>;
    get ascendPpScrollToEnd(): EventsFilter<{
        timeInPage: number;
        referralInfo: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get invoicesEditModesEditCustomerInfoModalChoose(): EventsFilter<{
        option: string;
        view_type: string;
        platform: string;
        msid: GUID;
        invoiceStatus: string;
    }>;
    get invoicesEditModesNegativePriceToast(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
        invoiceStatus: string;
    }>;
    get clickOnWixStudioLogoSrc5Evid1332(): EventsFilter<{
        page_view: string;
        hostingPlatformContextId: string;
    }>;
    get crmDiscoverCrmTools(): EventsFilter<{
        view_type: string;
        pageView: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderComplexPhoneLayoutsDesignSelected(): EventsFilter<{
        selected_design: string;
        field: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressShowTheseSubfields(): EventsFilter<{
        visitor_id: GUID;
        button_name: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        isOn: boolean;
    }>;
    get formBuilderComplexAddressIncludeCountriesFrom(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressShowSubfieldTitles(): EventsFilter<{
        toggle: boolean;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get ascendPpClickOnPackageInPp(): EventsFilter<{
        isChecked: boolean;
        timeInPage: number;
        referralInfo: string;
        buttonType: string;
        view_type: string;
        package_name: string;
        origin: string;
        packageId: GUID;
        platform: string;
    }>;
    get formBuilderComplexAddressSubfieldTitles(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressSubfieldPlaceholder(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressGeneralSettingRequired(): EventsFilter<{
        visitor_id: GUID;
        checkbox: boolean;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressSubfieldTitlesEnterText(): EventsFilter<{
        field: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressSubfieldPlaceholdersEnterText(): EventsFilter<{
        field: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressSubfieldPlaceholdersDefaultCountryChoose(): EventsFilter<{
        visitor_id: GUID;
        country: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressManageCountriesList(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressManageCountriesListFinish(): EventsFilter<{
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressSelectRequiredSubfieldOpen(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressSelectRequiredSubfieldChoose(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        requiredFields: string;
        msid: GUID;
    }>;
    get ascendPpCyclePageView(): EventsFilter<{
        referralInfo: string;
        view_type: string;
        package_name: string;
        origin: string;
        app_id: GUID;
        packageId: GUID;
        platform: string;
    }>;
    get formBuilderAutocompleteAddressFieldShowFieldTitleToggle(): EventsFilter<{
        toggle: boolean;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutocompleteAddressFieldFieldTitle(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutocompleteAddressFieldPlaceholderText(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutocompleteAddressFieldRequired(): EventsFilter<{
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutocompleteAddressFieldCountrySearch(): EventsFilter<{
        option: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutocompleteAddressFieldCountrySearchOption(): EventsFilter<{
        visitor_id: GUID;
        changed: boolean;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get ascendPpClickOnCycleInPp(): EventsFilter<{
        cycle_name: string;
        referralInfo: string;
        view_type: string;
        package_name: string;
        origin: string;
        packageId: GUID;
        platform: string;
        cycleId: number;
    }>;
    get formBuilderAutocompleteAddressFieldAddressLayoutChanged(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderAutocompleteAddressFieldViewerChooseAnAddress(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get ascendPpClickOnNextInCyclePage(): EventsFilter<{
        cycle_name: string;
        isChecked: boolean;
        timeInPage: number;
        referralInfo: string;
        view_type: string;
        package_name: string;
        origin: string;
        cycle_id: number;
        packageId: GUID;
        platform: string;
    }>;
    get customerNotificationsSettingsPreviewEditChooseAudience(): EventsFilter<{
        name: string;
        view_type: string;
        rule_id: GUID;
        platform: string;
        msid: GUID;
        template_id: string;
    }>;
    get formBuilderComplexPhoneCountryCodeFieldDeleted(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get dashboardSiteSelectorIsOpen(): EventsFilter<{
        page_view: string;
        view_type: string;
        site_list: string;
        platform: string;
        msid: GUID;
        loading_time: number;
    }>;
    get dashboardSiteSelectorIsLoadedWithoutScreenshots(): EventsFilter<{
        page_view: string;
        view_type: string;
        platform: string;
        loading_time: number;
    }>;
    get dashboardSiteSelectorErrorLoading(): EventsFilter<{
        is_from_search: boolean;
        page_view: string;
        view_type: string;
        platform: string;
        msid: GUID;
        loading_time: number;
    }>;
    get ascendPpPurchasePageView(): EventsFilter<{
        cycle_name: string;
        referralInfo: string;
        view_type: string;
        package_name: string;
        origin: string;
        app_id: GUID;
        packageId: GUID;
        platform: string;
        cycleId: number;
    }>;
    get dashboardSiteSelectorClickOnSite(): EventsFilter<{
        location: string;
        is_from_search: boolean;
        page_view: string;
        msid_clicked: GUID;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardClickInSiteSelector(): EventsFilter<{
        is_from_search: boolean;
        page_view: string;
        view_type: string;
        item_name: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderComplexAddressEditFieldClick(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get crmHomeInboxViewMessages(): EventsFilter<{
        countMessages: number;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeTopCarouselClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeTopCarouselMainCtaClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
        bannerName: string;
    }>;
    get crmHomeTopCarouselLoadStart(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeTopCarouselLoadEnd(): EventsFilter<{
        view_type: string;
        loadingTime: number;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderReportOnSubmissionAsSpam(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        button_name: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get ascendPpPurchasePageChangeCard(): EventsFilter<{
        cycle_name: string;
        referralInfo: string;
        view_type: string;
        package_name: string;
        selection: string;
        origin: string;
        app_id: GUID;
        packageId: GUID;
        platform: string;
        cycleId: number;
    }>;
    get ascendSelectCancelReason(): EventsFilter<{
        referralInfo: string;
        cancel_reason_text: string;
        cancel_reason_name: string;
        view_type: string;
        premium: string;
        platform: string;
        msid: GUID;
    }>;
    get ascendCancelWindowApproveCancel(): EventsFilter<{
        referralInfo: string;
        view_type: string;
        selection: string;
        premium: string;
        platform: string;
        msid: GUID;
    }>;
    get bmApiCallReceivedSrc5Evid1392(): EventsFilter<{
        method_name: string;
        url: Url;
        stack: string;
        route: string;
    }>;
    get ascendPpPurchasePageEnterPromo(): EventsFilter<{
        cycle_name: string;
        referralInfo: string;
        view_type: string;
        package_name: string;
        selection: string;
        origin: string;
        app_id: GUID;
        packageId: GUID;
        platform: string;
        cycleId: number;
    }>;
    get rolesAndPermissionsSetUpTeamClick(): EventsFilter<{
        click_origin: string;
        platform: string;
        app_id: string;
    }>;
    get teamManagementTeammatesPageLoad(): EventsFilter<{
        context: string;
        referral_info: string;
        origin: string;
        platform: string;
        msid: GUID;
        app_id: string;
        contributors_quota: number;
        contributors_count: number;
    }>;
    get teamManagementFilterByStatus(): EventsFilter<{
        context: string;
        status_selected: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementFilterByRole(): EventsFilter<{
        num_selected: number;
        context: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementViewTeamClicked(): EventsFilter<{
        context: string;
        platform: string;
    }>;
    get teamManagementChangeRoleOpenDialog(): EventsFilter<{
        teammate_id: GUID;
        invite_status: string;
        context: string;
        current_role_ids: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementChangeRoleUpdate(): EventsFilter<{
        teammate_id: GUID;
        new_role_ids: string;
        invite_status: string;
        context: string;
        prev_role_ids: string;
        assignment_type: string;
        is_client: boolean;
        num_sites: number;
        platform: string;
        msid: GUID;
        num_folders: number;
    }>;
    get teamManagementRemoveTeammateOpenDialog(): EventsFilter<{
        teammate_id: GUID;
        invite_status: string;
        context: string;
        role_ids: string;
        platform: string;
        msid: GUID;
        app_id: string;
    }>;
    get teamManagementRemoveTeammateRemoveSuccess(): EventsFilter<{
        teammate_id: GUID;
        invite_status: string;
        context: string;
        role_ids: string;
        platform: string;
        msid: GUID;
        app_id: string;
    }>;
    get teamManagementInvitePeopleClick(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        upgrade_required: boolean;
        msid: GUID;
        app_id: string;
    }>;
    get ascendPpPurchasePageSubmitPurchase(): EventsFilter<{
        cycle_name: string;
        referralInfo: string;
        view_type: string;
        package_name: string;
        origin: string;
        app_id: GUID;
        packageId: GUID;
        platform: string;
        cycleId: number;
    }>;
    get teamManagementInvitePeoplePageLoad(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
        contributors_quota: number;
        contributors_count: number;
        app_id: string;
        Has_ai_assistant: boolean;
    }>;
    get teamManagementInvitePeopleSendInvite(): EventsFilter<{
        context: string;
        number_of_invalid_emails: number;
        invite_role_ids: string;
        assignment_type: string;
        origin: string;
        invite_id: GUID;
        num_sites: number;
        platform: string;
        msid: GUID;
        number_of_valid_emails: number;
        num_folders: number;
        Logged_account_locations: string;
        New_collaborator_locations: string;
        contributors_quota: number;
        invite_role_names: string;
        contributors_count: number;
        app_id: string;
        Has_ai_assistant: boolean;
    }>;
    get teamManagementInvitePeopleResendInvite(): EventsFilter<{
        invite_status: string;
        context: string;
        invite_role_ids: string;
        invite_id: GUID;
        platform: string;
        msid: GUID;
        app_id: string;
    }>;
    get teamManagementInvitePeopleGetInviteLink(): EventsFilter<{
        invite_status: string;
        context: string;
        invite_id: GUID;
        platform: string;
        msid: GUID;
        app_id: string;
    }>;
    get teamManagementManageRolesClick(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesPageLoad(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesViewRole(): EventsFilter<{
        context: string;
        role_id: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesRolePageLoad(): EventsFilter<{
        context: string;
        role_id: string;
        origin: string;
        mode: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesDuplicateAndEditRole(): EventsFilter<{
        context: string;
        role_id: string;
        role_type: string;
        origin: string;
    }>;
    get teamManagementManageRolesEditCustomRole(): EventsFilter<{
        context: string;
        role_id: string;
        msid: GUID;
        origin: string;
    }>;
    get teamManagementManageRolesUpdateRole(): EventsFilter<{
        num_scopes: number;
        context: string;
        role_id: string;
        old_scope_ids: string;
        new_scope_ids: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesCreateNewRoleClick(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
        Has_ai_assistant: boolean;
    }>;
    get teamManagementManageRolesSaveNewRole(): EventsFilter<{
        custom_role_scopes: string;
        num_scopes: number;
        context: string;
        role_id: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesDeleteCustomRoleClick(): EventsFilter<{
        num_scopes: number;
        context: string;
        role_id: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesDeleteCustomRoleSuccess(): EventsFilter<{
        num_scopes: number;
        context: string;
        role_id: string;
        platform: string;
        msid: GUID;
    }>;
    get teamManagementManageRolesCannotDeleteRole(): EventsFilter<{
        num_scopes: number;
        context: string;
        role_id: string;
        platform: string;
        msid: GUID;
        action: string;
    }>;
    get teamManagementLearnMoreClick(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
        app_id: string;
    }>;
    get teamManagementEditTeamProfileClick(): EventsFilter<{
        platform: string;
    }>;
    get teamManagementSaveTeamProfile(): EventsFilter<{
        is_logo_shown: boolean;
        onboarding: boolean;
        platform: string;
        is_valid_team_name: boolean;
    }>;
    get teamManagementJoinTheTeamPageLoad(): EventsFilter<{
        accepted_by_user: GUID;
        already_accepted: boolean;
        invited_to_account_id: GUID;
        context: string;
        origin: string;
        invite_id: GUID;
        invitee_type: string;
        platform: string;
        email_type: string;
        app_id: string;
    }>;
    get teamManagementJoinTheTeamClickContinue(): EventsFilter<{
        accepted_by_user: GUID;
        invited_to_account_id: GUID;
        invite_id: GUID;
        action_chosen: string;
        platform: string;
        app_id: string;
        context: string;
    }>;
    get teamManagementJoinTheTeamClickOnLearnMore(): EventsFilter<{
        accepted_by_user: GUID;
        already_accepted: boolean;
        invited_to_account_id: GUID;
        invite_id: GUID;
        platform: string;
    }>;
    get rolesAndPermissionsClickOnUpgradeButton(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsInvitePeopleError(): EventsFilter<{
        context: string;
        error_message: string;
        platform: string;
        msid: GUID;
        app_id: string;
    }>;
    get rolesAndPermissionsUpgradePopUpLoad(): EventsFilter<{
        context: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsAcceptInviteFromMobilePageLoad(): EventsFilter<{
        context: string;
        inviteToken: string;
        invite_id: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsAcceptInviteFromMobileClickContinueToSite(): EventsFilter<{
        context: string;
        inviteToken: string;
        invite_id: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsAcceptInviteFromMobileClickManageSiteOnTheWixApp(): EventsFilter<{
        context: string;
        inviteToken: string;
        invite_id: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsInvitePeopleAnswerOnInvitePurpose(): EventsFilter<{
        other_text: string;
        context: string;
        is_partner: boolean;
        invite_for: string;
        invite_id: GUID;
        platform: string;
        msid: GUID;
        num_invites: string;
    }>;
    get rolesAndPermissionsInvitePeopleSkipOnInvitePurposeQuestion(): EventsFilter<{
        click_type: string;
        context: string;
        is_partner: boolean;
        invite_id: GUID;
        platform: string;
        msid: GUID;
        num_invites: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersSelectSitesAndFoldersModalLoad(): EventsFilter<{
        teammate_id: GUID;
        context: string;
        role_ids: string;
        role_id: string;
        platform: string;
        view: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersClickOnSelectInSfModal(): EventsFilter<{
        teammate_id: GUID;
        context: string;
        role_ids: string;
        role_id: string;
        assignment_type: string;
        num_sites: number;
        platform: string;
        num_folders: number;
        view: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersClickOnSelectMore(): EventsFilter<{
        teammate_id: GUID;
        context: string;
        role_ids: string;
        role_id: string;
        platform: string;
        view: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersClickOnShowMoreSites(): EventsFilter<{
        teammate_id: GUID;
        context: string;
        role_ids: string;
        role_id: string;
        platform: string;
        view: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersRemoveSiteFolderClick(): EventsFilter<{
        teammate_id: GUID;
        context: string;
        type_removed: string;
        role_ids: string;
        role_id: string;
        platform: string;
        view: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersClickOnAssignMoreRoles(): EventsFilter<{
        teammate_id: GUID;
        context: string;
        platform: string;
        view: string;
    }>;
    get rolesAndPermissionsSitesAndFoldersSiteRpWithTeamModalLoad(): EventsFilter<{
        context: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsSitesAndFoldersChooseActionInSiteRpWithTeamModal(): EventsFilter<{
        context: string;
        action_chosen: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsPeoplePermissionsComponentLoad(): EventsFilter<{
        folder_id: number;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsPeoplePermissionsComponentClickOnManage(): EventsFilter<{
        folder_id: number;
        manage_type: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsTeamManagementSearchText(): EventsFilter<{
        context: string;
        platform: string;
    }>;
    get headerLoaded(): EventsFilter<{
        page_view: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderCaptchaBoxModalLoadedClient(): EventsFilter<{
        visitor_id: GUID;
        reason: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        btype: string;
        msid: GUID;
    }>;
    get formBuilderCaptchaBoxModalClosedClient(): EventsFilter<{
        visitor_id: GUID;
        reason: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        btype: string;
        msid: GUID;
    }>;
    get customerNotificationsSettingsPreviewEditLoadingTime(): EventsFilter<{
        view_type: string;
        loadingTime: number;
        platform: string;
        msid: GUID;
    }>;
    get settingsLobbyHoverOverAnItem(): EventsFilter<{
        item_location_on_page: number;
        section_name: string;
        view_type: string;
        cta_name: string;
        page_id: string;
        item_location: string;
        item_name: string;
        platform: string;
        msid: GUID;
    }>;
    get bizmgrComponentRequestToLoad(): EventsFilter<{
        component_name: string;
        state: string;
        view_type: string;
        sub_view: string;
        component_app_id: string;
        app_id: string;
        platform: string;
        component_id: string;
        hosting: string;
        msid: GUID;
        view: string;
    }>;
    get bizmgrComponentLoadingStart(): EventsFilter<{
        component_name: string;
        hosting_platform: string;
        state: string;
        view_type: string;
        sub_view: string;
        page_id: string;
        host_id: string;
        component_app_id: string;
        app_id: string;
        platform: string;
        component_id: string;
        hosting_platform_context_id: string;
        hosting: string;
        component_type: string;
        msid: GUID;
        view: string;
        route: string;
        internalRoute: string;
    }>;
    get bizmgrComponentLoadingFinish(): EventsFilter<{
        component_name: string;
        hosting_platform: string;
        state: string;
        loading_time_from_start_loading_page: number;
        view_type: string;
        prev_page_id: string;
        loading_time_from_host_load: number;
        sub_view: string;
        page_id: string;
        is_first: boolean;
        host_id: string;
        component_app_id: string;
        loading_time_from_host_platform_load: number;
        app_id: string;
        platform: string;
        component_id: string;
        hosting_platform_context_id: string;
        hosting: string;
        component_type: string;
        msid: GUID;
        view: string;
        loading_time: number;
        route: string;
        internalRoute: string;
    }>;
    get bizmgrComponentLoadingWithAnError(): EventsFilter<{
        component_name: string;
        hosting_platform: string;
        state: string;
        context: string;
        view_type: string;
        loading_time_from_host_load: number;
        sub_view: string;
        error_type: string;
        host_id: string;
        component_app_id: string;
        loading_time_from_host_platform_load: number;
        app_id: string;
        platform: string;
        component_id: string;
        hosting: string;
        component_type: string;
        msid: GUID;
        interval_load_time: number;
        view: string;
        route: string;
        internalRoute: string;
    }>;
    get bizmgrComponentComponentWasShown(): EventsFilter<{
        component_name: string;
        state: string;
        view_type: string;
        sub_view: string;
        host_id: string;
        component_app_id: string;
        app_id: string;
        platform: string;
        component_id: string;
        hosting: string;
        msid: GUID;
        view: string;
        route: string;
        internalRoute: string;
    }>;
    get dashboardFinishLoadingBasicDashboardWidgets(): EventsFilter<{
        loading_time_from_start: number;
        sub_view: string;
        loading_time_from_module: number;
        hosting: string;
        refferal_info: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get invoicesSetBusinessInfoModalClickOnAddContinue(): EventsFilter<{
        view_type: string;
        appDefId: GUID;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get invoicesSetBusinessInfoModalClickOnCancel(): EventsFilter<{
        view_type: string;
        appDefId: GUID;
        origin: string;
        cancelType: string;
        platform: string;
        msid: string;
    }>;
    get headerFullyLoaded(): EventsFilter<{
        page_view: string;
        is_partner: boolean;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardClickOnItemFromHeader(): EventsFilter<{
        name: string;
        page_view: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsInvitePeopleAddRemoveAnotherRoleOnDiffSiteClick(): EventsFilter<{
        referral_info: string;
        button_name: string;
        role_id: string;
        origin: string;
        invite_id: GUID;
        platform: string;
        msid: GUID;
        view: string;
    }>;
    get nyaExposureEvent(): EventsFilter<{
        msid: GUID;
        exposure_name: string;
    }>;
    get generalExposureEvent(): EventsFilter<{
        exposure_name: string;
        label_name: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get formBuilderBizManagerChooseAForm(): EventsFilter<{
        option: string;
        visitor_id: GUID;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormChooseATemplate(): EventsFilter<{
        option: string;
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormChooseElement(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        fieldType: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormDeleteElement(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        fieldType: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormCloneElement(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        fieldType: string;
        msid: GUID;
    }>;
    get dashboardSiteNavigation(): EventsFilter<{
        view_type: string;
        link: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardMySitesActionSelectionPageView(): EventsFilter<{
        view_type: string;
        no_of_html_sites: number;
        origin: string;
        no_of_sites: number;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSaveForm(): EventsFilter<{
        template_name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormShareForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormPreviewForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        form_guid: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormFormSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormEditTitleDescription(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get dashboardMySitesSiteSelectionPageView(): EventsFilter<{
        view_type: string;
        no_of_html_sites: number;
        origin: string;
        no_of_sites: number;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeSuggestionsCarouselClickCta(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
        bannerName: string;
    }>;
    get crmHomeSuggestionsCarouselCloseBanner(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
        bannerName: string;
    }>;
    get crmHomeSuggestionsCarouselClickOnCarousel(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardMySitesSiteSelectionPageNumberView(): EventsFilter<{
        view_type: string;
        no_of_html_sites: number;
        no_of_sites: number;
        platform: string;
        msid: GUID;
        page_number: number;
        prev_page: number;
    }>;
    get dashboardMySitesClickPromote(): EventsFilter<{
        view_type: string;
        origin: string;
        place: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSubmissionClick(): EventsFilter<{
        form_name: string;
        visitorId: GUID;
        visitor_id: GUID;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        form_guid: GUID;
        template: string;
        referrer: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSubmissionSuccess(): EventsFilter<{
        form_name: string;
        visitorId: GUID;
        visitor_id: GUID;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        form_guid: GUID;
        template: string;
        referrer: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSubmissionFailed(): EventsFilter<{
        form_name: string;
        visitorId: GUID;
        visitor_id: GUID;
        errorReason: string;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        form_guid: GUID;
        template: string;
        referrer: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormReorderElements(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormViewSubmissionTableFromSettings(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormAddEmailInSettings(): EventsFilter<{
        builderOrigin: string;
        emailType: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSettingsToggleEmailType(): EventsFilter<{
        builderOrigin: string;
        emailType: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get dashboardMySitesWelcomeMessageForProsDisplayed(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get quotesCreateInvoiceEnterItemDescription(): EventsFilter<{
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceClickOnSeeMoreItems(): EventsFilter<{
        view_type: string;
        productSource: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceRearrangeItems(): EventsFilter<{
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesCreateInvoiceClickOnAddTax(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceTaxSelected(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceClickOnInvoiceSettings(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceAddRemoveDiscount(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceLeavingCreateInvoicePagePopUpAppears(): EventsFilter<{
        source: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceLeavingCreateInvoicePagePopUpResolution(): EventsFilter<{
        source: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get quotesPreviewInvoiceClickInPreviewPageMenu(): EventsFilter<{
        source: string;
        externalId: GUID;
        view_type: string;
        invoiceType: string;
        origin: string;
        invoiceSource: GUID;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get dashboardMySitesWelcomeMessageForProsClick(): EventsFilter<{
        view_type: string;
        platform: string;
        action: string;
    }>;
    get quotesCreateInvoiceUserClickOnSendInvoice(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceSendInvoiceModalResolution(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceSendInvoiceModalFieldChange(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        fieldName: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceAdditionalInfoFieldChange(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        fieldName: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceChangingEmailOfAContactForPaidInvoice(): EventsFilter<{
        source: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceAdditionalInfoHoverOnTooltipShown(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        fieldName: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get notificationClickOnAccountNotification(): EventsFilter<{
        feed_name: string;
        channel: string;
        view_type: string;
        grouped_sites: string;
        contact_id: string;
        platform: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSettingsContactSync(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get dashboardAccountSettingsRenderedWithShowProBoxValue(): EventsFilter<{
        view_type: string;
        show_pro_box: boolean;
        platform: string;
    }>;
    get formBuilderBackofficeFormRemoveDescription(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get invoicesNewRecurrentInvoiceClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesChooseADueDateRecurringInvoices(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringSelectABillingCycle(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        value: string;
    }>;
    get invoicesRecurringSelectNumberOfOccurrences(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        value: string;
    }>;
    get invoicesRecurringSelectCustomNumberOfOccurrences(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        value: string;
    }>;
    get invoicesRecurringIsAutoCharge(): EventsFilter<{
        chargeAutomatically: boolean;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get dashboardMySitesSiteHomeAlertMessageFromPremiumDisplay(): EventsFilter<{
        alert_id: GUID;
        alert_type: string;
        view_type: string;
        premium_alert_id: string;
        platform: string;
        hosting: string;
    }>;
    get invoicesRecurringClickOnGetStarted(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringClickOnHowDoRecurringInvoicesWork(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringSetPaymentTermsPageClickOnNext(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringSetPaymentTermsPageClickOnCancel(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringClickOnBackToastInNewRecurringInvoicesCreationPage(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringClickOnConnectNowForAutoCharging(): EventsFilter<{
        source: string;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringClickOnLearnMoreAboutAutomaticCharging(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringFilterInvoices(): EventsFilter<{
        name: string;
        num_of_invoices: number;
        view_type: string;
        origin_device: string;
        platform: string;
        filter_type: string;
        msid: string;
    }>;
    get invoicesRecurringTableActions(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        platform: string;
        msid: string;
        action: string;
    }>;
    get invoicesRecurringSearchInvoices(): EventsFilter<{
        num_of_invoices: number;
        view_type: string;
        text: string;
        num_of_results: number;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get dashboardMySitesSiteHomeAlertMessageFromPremiumClick(): EventsFilter<{
        alert_type: string;
        view_type: string;
        premium_alert_id: string;
        platform: string;
        hosting: string;
        action: string;
    }>;
    get invoicesRecurringCancelSubscription(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        value: string;
    }>;
    get invoicesRecurringClickOnNewRecurringInvoiceSrc5Evid1581(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringHoverOnNextWhenNotConnectedToPaymentMethod(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringBackToRecurringInvoiceFromConnectPayment(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get cookieBannerThemeClicked(): EventsFilter<{
        is_banner_live: string;
        theme_clicked: string;
    }>;
    get formBuilderFormSettingsNotificationsClickOnButton(): EventsFilter<{
        recommendations_chosen: string;
        uuid: GUID;
        visitor_id: GUID;
        button_name: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        type: string;
        msid: GUID;
    }>;
    get invoicesRecurringClickOnNewRecurringInvoice(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get formBuilderFormSettingsNotificationsToggle(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        type: string;
        msid: GUID;
        value: string;
    }>;
    get mySitesShowTooltip(): EventsFilter<{
        name: string;
        view_type: string;
        num_of_sites: string;
        platform: string;
    }>;
    get inAppTipsGenericExposureEvent(): EventsFilter<{
        offering_guid: GUID;
        platform: string;
        msid: GUID;
    }>;
    get invoicesOwnerappClickOnCreateNewInvoice(): EventsFilter<{
        paymentType: string;
        view_type: string;
        tabName: string;
        invoiceType: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get invoicesOwnerappClickOnInvoice(): EventsFilter<{
        paymentType: string;
        view_type: string;
        tabName: string;
        invoiceType: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get invoicesOwnerappClickOnViewAllInvoice(): EventsFilter<{
        view_type: string;
        tabName: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get invoicesOwnerappClickOnTabs(): EventsFilter<{
        button_name: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get dashboardSiteSelectorStartLoading(): EventsFilter<{
        filtered: string;
        selectionType: string;
        view_type: string;
        action_url: Url;
        referral: Url;
        status: string;
        siteType: string;
        version_experienced: string;
        site_type_enriched: number;
        platform: string;
        page_url: Url;
        device: string;
    }>;
    get dashboardSiteSelectorSearch(): EventsFilter<{
        filtered_by: string;
        selectionType: string;
        view_type: string;
        site_type: string;
        siteType: string;
        site_type_enriched: number;
        platform: string;
        device: string;
    }>;
    get dashboardSiteSelectorSearchResults(): EventsFilter<{
        filtered_by: string;
        selectionType: string;
        view_type: string;
        site_type: string;
        status: string;
        site_type_enriched: number;
        type: string;
        platform: string;
        device: string;
    }>;
    get dashboardSiteSelectorUserNotification(): EventsFilter<{
        filtered_by: string;
        selectionType: string;
        view_type: string;
        notificationType: string;
        siteType: string;
        site_type_enriched: number;
        platform: string;
        device: string;
    }>;
    get dashboardSiteQuickActionClick(): EventsFilter<{
        name: string;
        site_class: string;
        view_type: string;
        sub_view: string;
        referral: string;
        origin: string;
        cta: string;
        esi: GUID;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get mySitesTooltipClose(): EventsFilter<{
        name: string;
        view_type: string;
        num_of_sites: string;
        platform: string;
    }>;
    get headerStartLoading(): EventsFilter<{
        page_view: string;
        is_partner: boolean;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesRecurringMessagePresentedWhenUserReachesMaxNumberOfRecurringInvoices(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get formBuilderWixDataCheck(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        origin: string;
        msid: GUID;
        installed: boolean;
    }>;
    get dashboardSiteSelectorMoreSitesLoadedSuccessfully(): EventsFilter<{
        filtered: string;
        selectionType: string;
        view_type: string;
        site_type: string;
        referral: Url;
        loadingTime: number;
        status: string;
        siteType: string;
        site_type_enriched: number;
        platform: string;
        sites_count: number;
        device: string;
    }>;
    get mySitesHoverSite(): EventsFilter<{
        view_type: string;
        ds_origin: string;
        is_premium: boolean;
        msid: GUID;
        is_published: boolean;
    }>;
    get formBuilderBackofficeFormPostSaveForm(): EventsFilter<{
        template_name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackOfficeFormClickEditForm(): EventsFilter<{
        form_name: string;
        template_name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get searchSearchInDialog(): EventsFilter<{
        query: string;
        view_type: string;
        triggred_from: string;
        sub_view: string;
        results: string;
        origin: string;
        seen_results: string;
        platform: string;
        view: string;
        hosting_platform_context_id: string;
        isFromSettingsSearch: boolean;
    }>;
    get formBuilderBackofficeFormShareOpenForm(): EventsFilter<{
        builderOrigin: string;
        uuid: GUID;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormShareCopyLink(): EventsFilter<{
        builderOrigin: string;
        uuid: GUID;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsInvitePeopleClickOnGetYourMailbox(): EventsFilter<{
        context: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsMarkAsAClient(): EventsFilter<{
        teammate_id: GUID;
        invite_status: string;
        role_ids: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardDuplicateSiteActionWindowNavigationClick(): EventsFilter<{
        view_type: string;
        origin: string;
        cta: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormCloseNote(): EventsFilter<{
        form_name: string;
        template_name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get searchScrollingInResultView(): EventsFilter<{
        view_type: string;
        sub_view: string;
        origin: string;
        platform: string;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get formBuilderBackofficeFormClickOnLink(): EventsFilter<{
        form_name: string;
        template_name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        nextView: string;
        msid: GUID;
    }>;
    get invoicesRecurringSelectPremiumPlanIncludedOnlyServices(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
        value: string;
    }>;
    get invoicesRecurringAddPremiumPlanClick(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringPremiumPlanSelected(): EventsFilter<{
        package_id: string;
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringErrorMessageForInvoiceAmountLowerThenPremium(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        errorReason: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringTableActionsCancelModalClick(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        platform: string;
        msid: string;
        action: string;
    }>;
    get searchFocusedOnASearchResult(): EventsFilter<{
        title_id: string;
        result: string;
        section_index: number;
        query: string;
        view_type: string;
        sub_view: string;
        section: string;
        item_index_in_section: number;
        origin: string;
        is_first_hover: boolean;
        title: string;
        platform: string;
        item_index: number;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get cookieBannerCustomColorInaccessible(): EventsFilter<{
        is_banner_site_palette_equal: string;
        is_banner_live: string;
        is_site_palette_inaccessible: string;
    }>;
    get clickOnSearchEverywhereInSettingsLobbysSearchSrc5Evid1646(): EventsFilter<{
        query: string;
        origin: string;
        hosting_platform_context_id: string;
    }>;
    get gizaOverlayPageModalCtaClicked1648(): EventsFilter<{
        hosting_platform: string;
        page_id: string;
        page_name: string;
        app_id: string;
        hosting_platform_context_id: string;
        cta: string;
    }>;
    get bizManagerSidebarItemSelectedHighlighted(): EventsFilter<{
        name: string;
        sidebar_name: string;
        view_type: string;
        counter: number;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get searchClickOnSearchResult(): EventsFilter<{
        title_id: string;
        section_index: number;
        query: string;
        view_type: string;
        sub_view: string;
        section: string;
        item_index_in_section: number;
        origin: string;
        title: string;
        platform: string;
        item_index: number;
        view: string;
        category: string;
        pageId: string;
        isFromSettingsSearch: boolean;
        resultPageId: string;
        resultPageName: string;
        hosting_platform_context_id: string;
    }>;
    get cookieBannerUouRestoreDefaultText(): EventsFilter<{
        is_cookie_banner_published: boolean;
        default_text_location: string;
        was_cookie_banner_published: boolean;
    }>;
    get invoicesRecurringClientSelected(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        contact_id: string;
        platform: string;
        msid: string;
    }>;
    get invoicesRecurringSiteOfClientSelected(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        clientBillingMsids: string;
        platform: string;
        msid: string;
    }>;
    get formBuilderBizMgrFromTheAdditionalActionMenuClickAction(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        button_name: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrFormDeletion(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        button_name: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get chatSettingsPcfOfflineOnlineFormChevron(): EventsFilter<{
        teammate_id: GUID;
        invite_status: string;
        role_ids: string;
        platform: string;
        msid: GUID;
    }>;
    get searchCloseSearchDialog(): EventsFilter<{
        result: string;
        query: string;
        view_type: string;
        sub_view: string;
        reason: string;
        time_in_dialog: number;
        origin: string;
        platform: string;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get siteActionsDropDownListShown(): EventsFilter<{
        view_mode: string;
        site_class: string;
        sub_account_id: GUID;
        view_type: string;
        sub_view: string;
        origin: string;
        cta: string;
        platform: string;
        msid: GUID;
        permitted_items: string;
        itemsList: string;
    }>;
    get teamManagementSwitchToStudioPageLoad(): EventsFilter<{
        platform: string;
    }>;
    get formBuilderBackofficeFormUserChangeLtrRtl(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
    }>;
    get formBuilderBackofficeFormAutoAddressRadioButton(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
    }>;
    get cookieBannerCustomFontAndSizeClicked(): EventsFilter<{
        click_description: string;
        click_type: string;
        is_banner_live: string;
    }>;
    get clickOnSeeMoreButton(): EventsFilter<{
        title_id: string;
        result: string;
        section_index: number;
        query: string;
        view_type: string;
        sub_view: string;
        section: string;
        origin: string;
        title: string;
        platform: string;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get bizManagerSetupWidgetSectionCompleted(): EventsFilter<{
        group_id: string;
        skipped_items: string;
        resolved_items: string;
        asset_campaign_guid: string;
        visibility_trigger: string;
        setup_location: string;
        hosting: string;
        msid: GUID;
    }>;
    get clickOnShowAllButton(): EventsFilter<{
        title_id: string;
        result: string;
        section_index: number;
        query: string;
        view_type: string;
        sub_view: string;
        section: string;
        origin: string;
        title: string;
        platform: string;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get ssoSettingsChangeActivationStatus(): EventsFilter<{
        sso_id: GUID;
        view_type: string;
        is_mandatory: boolean;
        sso_user_type: string;
        platform: string;
        action: string;
    }>;
    get ssoSettingsIsMandatoryToggleStatus(): EventsFilter<{
        sso_id: GUID;
        view_type: string;
        status: string;
        platform: string;
    }>;
    get mySitesUnableToMoveSiteToTrashMessageShown(): EventsFilter<{
        view_type: string;
        reason: string;
        origin: string;
        messageTitle: string;
        platform: string;
        msid: GUID;
    }>;
    get financialSettingsGoToInvoicesPriceQuotes(): EventsFilter<{
        view_type: string;
        type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesFirstTimeExpirienceGetStarted(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesFirstTimeExpirienceLearnMore(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesDepositRequestDeposit(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesDepositChooseFlatOrPercentageDeposit(): EventsFilter<{
        toggle: boolean;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesDepositLearnMore(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get invoicesConnectPaymentLearnMore(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get invoicesDepositDropDeposit(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get pingPingWidgetLoadedInEditNotificationDialog(): EventsFilter<{
        view_type: string;
        config: string;
        isPMFlow: boolean;
        platform: string;
        msid: GUID;
        ruleId: string;
    }>;
    get pingSaveInEditNotificationDialog(): EventsFilter<{
        eventInfo: string;
        previousStatus: string;
        pingTemplateId: string;
        view_type: string;
        config: string;
        isWidgetless: boolean;
        componentChanged: string;
        isPMFlow: boolean;
        platform: string;
        msid: GUID;
        ruleId: string;
        currentStatus: string;
    }>;
    get dashboardSiteAppPromo(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
    }>;
    get teamManagementClickToLearnMore(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get locationsLoadedOnBusinessInfoPageSrc5Evid1700(): EventsFilter<{
        msid: GUID;
        hostingPlatformContextId: string;
        numLocations: number;
    }>;
    get apesUpdateTooltip(): EventsFilter<{
        isPreinstalled: boolean;
        pingTemplateId: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
        ruleId: GUID;
    }>;
    get apesVersioningPreviewNewEmail(): EventsFilter<{
        isPreinstalled: boolean;
        pingTemplateId: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
        ruleId: GUID;
    }>;
    get apesVersioningUpdateNewVersion(): EventsFilter<{
        isPreinstalled: boolean;
        pingTemplateId: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
        ruleId: GUID;
    }>;
    get apesVersioningUpdateNewVersionError(): EventsFilter<{
        isPreinstalled: boolean;
        pingTemplateId: string;
        view_type: string;
        errorReason: string;
        origin: string;
        platform: string;
        msid: GUID;
        ruleId: GUID;
    }>;
    get apesVersioningSaveAnUpdateError(): EventsFilter<{
        isPreinstalled: boolean;
        pingTemplateId: string;
        view_type: string;
        errorReason: string;
        origin: string;
        platform: string;
        msid: GUID;
        ruleId: GUID;
    }>;
    get dashboardAfterSiteSelectorStartedLoadingAndBeforeFinished(): EventsFilter<{
        filtered: string;
        selectionType: string;
        view_type: string;
        place_description: string;
        referral: string;
        status: string;
        siteType: string;
        site_type_enriched: number;
        platform: string;
        page_url: Url;
        device: string;
    }>;
    get formBuilderEmailSettingsInSchemaButExperimentClosed(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get siteSelectorSiteChosen(): EventsFilter<{
        filtered: string;
        positionIndex: number;
        is_partner_dashboard: boolean;
        result: string;
        selectionType: string;
        view_type: string;
        sites_available: number;
        action_url: Url;
        siteType: string;
        previous_position_index: number;
        referer: Url;
        esi: GUID;
        platform: string;
        is_default_selection: boolean;
        sites_count: number;
        device: string;
    }>;
    get teamManagementEditTeamProfileOpenDialog(): EventsFilter<{
        onboarding: boolean;
        view_type: string;
        platform: string;
    }>;
    get mySitesClickOnUrl(): EventsFilter<{
        url: Url;
        sub_view: string;
        sectionTitle: string;
        origin: string;
        cta: string;
        platform: string;
        view: string;
    }>;
    get dashboardSiteCategoryShown(): EventsFilter<{
        has_category: boolean;
        site_category: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardSiteSelectorClickForDebuggingPurposes(): EventsFilter<{
        filtered: string;
        positionIndex: number;
        site_id: GUID;
        is_partner_dashboard: boolean;
        result: string;
        selectionType: string;
        view_type: string;
        siteTypeName: string;
        action_url: Url;
        siteType: string;
        sites_number: number;
        cta: string;
        position: number;
        site_type_enriched: number;
        referer: Url;
        esi: GUID;
        platform: string;
        msid: GUID;
        sites_count: number;
        device: string;
    }>;
    get dashboardSiteSelectorLoadedSuccessfullyForDebuggingPurposes(): EventsFilter<{
        filtered: string;
        is_partner_dashboard: boolean;
        sitePublished: string;
        selectionType: string;
        view_type: string;
        account_sites_number: number;
        referral: string;
        loadingTime: number;
        status: string;
        siteType: string;
        site_type_enriched: number;
        platform: string;
        sites_count: number;
        device: string;
    }>;
    get dashboardLabelingPointInSiteSelectorForDebuggingPurposes(): EventsFilter<{
        meta_site_id: GUID;
        metaSiteId: GUID;
        uuid: GUID;
        label_version: string;
        msid: GUID;
        page_url: Url;
    }>;
    get teamManagementPickLogo(): EventsFilter<{
        view_type: string;
        platform: string;
        action_type: string;
    }>;
    get formBuilderPdfAttachmentsClickOnCheckbox(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        checkbox: boolean;
        form_comp_id: string;
        vsi: GUID;
        type: string;
        msid: GUID;
    }>;
    get bmACallForTokenRefreshIsFailing(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get wixStudioExplanatoryModalForEditorXMigrationOpenedSrc5Evid1723(): EventsFilter<{
        hosting_platform: string;
        route: string;
        hosting_platform_context_id: string;
        prevRoute: string;
    }>;
    get wixStudioExplanatoryModalForEditorXMigrationCtaClickedSrc5Evid1724(): EventsFilter<{
        hosting_platform: string;
        route: string;
        hosting_platform_context_id: string;
        prevRoute: string;
        cta: string;
    }>;
    get transferSiteSiteCanTBeTransferredPopUpView(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        block_from_transfer_reason: string;
        msid: GUID;
    }>;
    get cookiesBannerSettingsWindowChange(): EventsFilter<{
        new_value: string;
        old_value: string;
    }>;
    get finishFocusWidgetSection(): EventsFilter<{
        skipped_items: string;
        resolved_items: string;
        asset_campaign_guid: string;
        section_name: string;
        widget_name: string;
        offering_guid: string;
        origin: string;
        hosting: string;
        msid: GUID;
    }>;
    get teamManagementSave(): EventsFilter<{
        is_logo_shown: boolean;
        view_type: string;
        platform: string;
        is_valid_team_name: boolean;
    }>;
    get focusWidgetClickViewAll(): EventsFilter<{
        name: string;
        location: string;
        widget_name: string;
        origin: string;
        hosting: string;
        msid: GUID;
    }>;
    get mySitesWhenDialogPopsUp(): EventsFilter<{
        name: string;
        view_mode: string;
        view_type: string;
        num_selected_sites: number;
        origin: string;
        view_level: string;
        platform: string;
        hosting: string;
    }>;
    get focusWidgetItemViewedInList(): EventsFilter<{
        offering_name: string;
        visibility_trigger: string;
        campaign_name: string;
        offering_guid: string;
        asset_location_from_group_list: number;
        origin: string;
        item_state: string;
        asset_campaign_id: string;
        hosting: string;
        msid: GUID;
        campaign_id: string;
        placement_id: GUID;
    }>;
    get mySitesClickOnButtonInDialog(): EventsFilter<{
        name: string;
        view_mode: string;
        to_level: string;
        view_type: string;
        num_selected_sites: number;
        origin: string;
        cta: string;
        from_level: string;
        platform: string;
        action: string;
    }>;
    get dashboardFinishLoadingAllWidgets(): EventsFilter<{
        view_type: string;
        is_account_mgr: boolean;
        loading_time_from_host_load: number;
        sub_view: string;
        host_id: string;
        loading_time_from_performance_now: number;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get teamManagementAddMembersOpenDialog(): EventsFilter<{
        view_type: string;
        roles_displayed: string;
        origin: string;
        platform: string;
    }>;
    get sapir1(): EventsFilter<{
        view_type: string;
        errorType: string;
        referral: string;
        loadingTime: number;
        siteType: string;
        platform: string;
        device: string;
    }>;
    get teamManagementAddMembersSendInvite(): EventsFilter<{
        number_of_invalid_emails: number;
        view_type: string;
        roles_displayed: string;
        number_of_existing_emails: number;
        origin: string;
        invite_role: string;
        platform: string;
        number_of_valid_emails: number;
    }>;
    get formBuilderBizMgrSafShareOptions(): EventsFilter<{
        visitor_id: GUID;
        socialButton: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formFormsInContactPanelViewSubmission(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        contact_id: string;
        msid: GUID;
    }>;
    get formFormsInContactPanelViewSubmissionsList(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        vsi: GUID;
        origin: string;
        contact_id: string;
        msid: GUID;
    }>;
    get formFormsInContactPanelDownloadFileFormSubmission(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        file_type: string;
        contact_id: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormClickDoneAfterEnterItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormHoverNextButtonAdi(): EventsFilter<{
        step: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get teamManagementAddMembersInviteClickSuccess(): EventsFilter<{
        view_type: string;
        origin: string;
        invite_role: string;
        platform: string;
    }>;
    get headerClickOnItemInOneOfTheHeaderDialogsDropDownMenus(): EventsFilter<{
        view_type: string;
        pageView: string;
        itemName: string;
        platform: string;
        msid: GUID;
        view: string;
    }>;
    get teamManagementAddMembersInviteClickFail(): EventsFilter<{
        error_desc: string;
        view_type: string;
        origin: string;
        invite_role: string;
        platform: string;
    }>;
    get renderingPlatformRedirect(): EventsFilter<{
        reason: string;
        redirectTo: string;
    }>;
    get mySitesUnableToMoveSitesToTrashModalIsShownOnBulkMoveToTrashOrSingleSiteMoveToTrash(): EventsFilter<{
        view_mode: string;
        view_type: string;
        sub_view: string;
        origin: string;
        num_untrashed_sites: number;
        platform: string;
        hosting: string;
        reasons: string;
    }>;
    get teamManagementDeleteTeamMemberOpenDialog(): EventsFilter<{
        invite_status: string;
        role: string;
        view_type: string;
        origin: string;
        member_id: GUID;
        platform: string;
    }>;
    get teamManagementDeleteTeamMemberDeleteClick(): EventsFilter<{
        invite_status: string;
        role: string;
        view_type: string;
        origin: string;
        member_id: GUID;
        platform: string;
    }>;
    get formBuilderOneAppModalShown(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        modal_name: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderOneAppModalAction(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        modal_name: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        form_guid: GUID;
        msid: GUID;
        action: string;
    }>;
    get formBuilderOneAppFormSelectorEmptyState(): EventsFilter<{
        uuid: GUID;
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSectionLoadedInSpacesApp(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        form_guid: GUID;
        msid: GUID;
    }>;
    get formBuilderOneAppLearnMoreClick(): EventsFilter<{
        linkUrl: string;
        visitor_id: GUID;
        placement: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderOneApp3DotsSwipe(): EventsFilter<{
        method: string;
        visitor_id: GUID;
        placement: string;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get dashboardSiteNewsViewAll(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get teamManagementDeleteTeamMemberDeleteClickSuccess(): EventsFilter<{
        invite_status: string;
        role: string;
        view_type: string;
        origin: string;
        member_id: GUID;
        platform: string;
    }>;
    get formBuilderOneAppClickInsideSwipeAction(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        action: string;
    }>;
    get formBuilderOneAppWidgetClick(): EventsFilter<{
        click_name: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderOneAppFormsListPageOpened(): EventsFilter<{
        visitor_id: GUID;
        form_count: number;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderOneAppSubmissionsListPageOpened(): EventsFilter<{
        submission_count: number;
        dynamic_values: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get teamManagementDeleteTeamMemberDeleteClickFail(): EventsFilter<{
        invite_status: string;
        role: string;
        view_type: string;
        origin: string;
        member_id: GUID;
        platform: string;
    }>;
    get focusWidgetHoverOverProgressBarToShowPopover(): EventsFilter<{
        hosting: string;
        msid: GUID;
        placement_id: string;
    }>;
    get formBuilderOneAppFormsResultsPageOpened(): EventsFilter<{
        visitor_id: GUID;
        submissionId: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderOneAppFormsResultsPageActions(): EventsFilter<{
        visitor_id: GUID;
        submissionId: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        action: string;
    }>;
    get teamManagementGetInviteLink(): EventsFilter<{
        invite_status: string;
        role: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get teamManagementEditRoleOpenDialog(): EventsFilter<{
        invite_status: string;
        view_type: string;
        roles_displayed: string;
        origin: string;
        member_id: GUID;
        platform: string;
    }>;
    get teamManagementSwitchToStudioClickToSwitch(): EventsFilter<{
        platform: string;
    }>;
    get teamManagementSwitchToStudioLearnMore(): EventsFilter<{
        platform: string;
    }>;
    get teamManagementEditRoleUpdateClick(): EventsFilter<{
        new_role: string;
        is_accepted: boolean;
        view_type: string;
        roles_displayed: string;
        prev_role: string;
        origin: string;
        platform: string;
    }>;
    get searchToDeleteSrc5Evid1847(): EventsFilter<{
        query: string;
        view_type: string;
        triggred_from: string;
        sub_view: string;
        results: string;
        origin: string;
        seen_results: string;
        platform: string;
        view: string;
        hosting_platform_context_id: string;
        isFromSettingsSearch: boolean;
    }>;
    get teamManagementResendInviteClick(): EventsFilter<{
        invite_status: string;
        view_type: string;
        origin: string;
        invite_id: GUID;
        invite_role: string;
        platform: string;
    }>;
    get leavingWithoutSavingModalOpenedSrc5Evid1858(): EventsFilter<{
        hosting_platform: string;
        route: string;
        hosting_platform_context_id: string;
        internal_route: string;
        originAction: string;
        displayMode: string;
        componentType: string;
        componentId: string;
    }>;
    get dashboardContributorsClickOnMangeRolesAndPermissions(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesAndPermissionsManageRolesEditRoleSrc5Evid1871(): EventsFilter<{
        context: string;
        role_id: string;
        role_type: string;
        origin: string;
        platform: string;
        role_name: string;
        Has_ai_assistant: boolean;
    }>;
    get rolesAndPermissionsInviteTeammatesSendInviteClickSrc5Evid1874(): EventsFilter<{
        context: string;
        origin: string;
        invite_id: GUID;
        number_of_valid_emails: number;
        role_ids: string;
        app_id: string;
        Has_ai_assistant: boolean;
    }>;
    get restoreSiteModalOpenedSrc5Evid1875(): EventsFilter<{
        hosting_platform: string;
        page_id: string;
        page_name: string;
        route: string;
        hosting_platform_context_id: string;
        internal_route: string;
        origin: string;
    }>;
    get restoreSiteModalCtaClickedSrc5Evid1876(): EventsFilter<{
        hosting_platform: string;
        page_id: string;
        page_name: string;
        route: string;
        hosting_platform_context_id: string;
        internal_route: string;
        cta: string;
        origin: string;
    }>;
    get leavingWithoutSavingModalCtaClickedSrc5Evid1878(): EventsFilter<{
        hosting_platform: string;
        route: string;
        hosting_platform_context_id: string;
        internal_route: string;
        cta: string;
        componentId: string;
        componentType: string;
        displayMode: string;
    }>;
    get ascendHoverOnUpgradeAscend(): EventsFilter<{
        appName: string;
        uuid: GUID;
        button_name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get ascendClickOnUpgradeAscend(): EventsFilter<{
        appName: string;
        uuid: GUID;
        button_name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get microActionAdditionalInfo(): EventsFilter<{
        asset_version: string;
        offering_name: string;
        info_value: string;
        asset_location_on_page: string;
        info_origin: string;
        offering_guid: string;
        info_type: string;
        origin: string;
        msid: GUID;
        campaign_id: string;
        placement_id: string;
    }>;
    get dashboardSiteNewsClickItem(): EventsFilter<{
        feed_type: string;
        msg_origin: string;
        name: string;
        item_id: GUID;
        source: string;
        url: string;
        is_deleted: boolean;
        view_type: string;
        origin: string;
        campaignId: GUID;
        title: string;
        lang: string;
        type: string;
        platform: string;
        msid: GUID;
        is_archived: boolean;
        feed_id: GUID;
    }>;
    get ascendPpClickOnMoveToWixPremiumPp(): EventsFilter<{
        timeInPage: number;
        referralInfo: string;
        button_name: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get newFormsFormListTabOpenedOldFormsForms(): EventsFilter<{
        tab_name: string;
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get websitePageChecklistInteractWithStepInAList(): EventsFilter<{
        tab_name: string;
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get ascendPpThankYouPage(): EventsFilter<{
        package_id: string;
        cycle_name: string;
        view_type: string;
        package_name: string;
        app_id: GUID;
        type: string;
        packageId: GUID;
        platform: string;
        cycleId: number;
    }>;
    get privacyCookiesCookieConsentBannerCardCtaClickSrc5Evid1927(): EventsFilter<{
        cta_name: string;
    }>;
    get invoicesMoreActionsClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get invoicesMoreActionsChooseOption(): EventsFilter<{
        option: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get mobileClickOnCreateNewSite(): EventsFilter<{
        page_view: string;
        platform: string;
    }>;
    get dashboardFetchDealerLayoutFailed(): EventsFilter<{
        view_type: string;
        type: string;
        platform: string;
        msid: GUID;
        dashboard_type: string;
    }>;
    get dashboardUserSeeFeed(): EventsFilter<{
        feedId: GUID;
        source: string;
        url: string;
        view_type: string;
        more3sec: boolean;
        origin: string;
        campaignId: GUID;
        title: string;
        type: string;
        platform: string;
        msid: GUID;
        aboveTheFold: boolean;
        feed_id: GUID;
    }>;
    get mySitesClickInUnableToMoveSitesToTrashDialog(): EventsFilter<{
        view_type: string;
        origin: string;
        cta: string;
        platform: string;
        msid: GUID;
        action: string;
    }>;
    get samplingPageFeatures(): EventsFilter<{
        pageId: string;
        pageType: string;
        pageRoute: string;
        numberOfTableComponents: number;
        numberOfTabsComponents: number;
        numberOfGridComponents: number;
        numberOfNestedTablesComponents: number;
        isWixPatternsPage: boolean;
        isWixPatternsComponent: boolean;
        wixPatternsComponentsInPage: string;
        wixPatternsPageType: string;
    }>;
    get clickingOnQuickActionButtonThreeDots(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get tooltipForOwnerApp(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get tooltipForOwnerAppClick(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get downloadModal(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get downloadModalClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        action: string;
    }>;
    get downloadModalSuccessMessage(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get downloadModalErrorMessage(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get automationMainTableUserSearchFocusOut(): EventsFilter<{
        view_type: string;
        searchText: string;
        platform: string;
        numOfResults: number;
        msid: GUID;
    }>;
    get searchClickedToOpenSearch(): EventsFilter<{
        sub_view: string;
        origin: string;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get osClickOnFavorites(): EventsFilter<{
        displayMode: string;
        action: string;
        pageName: string;
        pageId: string;
        appId: string;
        isEmptyFavorites: boolean;
        favoriteItemsList: string;
        hostingPlatformContextId: string;
    }>;
    get osFavoritesPopupShown(): EventsFilter<{
        pageName: string;
        pageId: string;
        appId: string;
        view: string;
        isEmptyFavorites: boolean;
        isEmptyRecentlyViewed: boolean;
        recentlyViewedItemsList: string;
        favoriteItemsList: string;
        hostingPlatformContextId: string;
    }>;
    get dashboardSiteNewsFilter(): EventsFilter<{
        name: string;
        location: string;
        view_type: string;
        origin: string;
        type: string;
        platform: string;
        filter_type: string;
        msid: GUID;
    }>;
    get osFavoritesPopupCtaClicked(): EventsFilter<{
        pageName: string;
        pageId: string;
        appId: string;
        view: string;
        cta: string;
        ctaType: string;
        numFavoritePages: number;
        numRecentlyViewedPages: number;
        hostingPlatformContextId: string;
    }>;
    get osFavoritesPagesEdit(): EventsFilter<{
        pageName: string;
        pageId: string;
        appId: string;
        cta: string;
        favoritesName: string;
        wasSuccess: boolean;
        hostingPlatformContextId: string;
        origin: string;
    }>;
    get dashboardSettingsUpdate(): EventsFilter<{
        name: string;
        view_type: string;
        providerId: string;
        click_from: string;
        origin: string;
        platform: string;
        msid: GUID;
        value: string;
    }>;
    get gizaSdkApiCallReceivedSrc5Evid2222(): EventsFilter<{
        hosting_platform: string;
        app_id: string;
        method_name: string;
        component_id: string;
        hosting_platform_context_id: string;
        tool: string;
    }>;
    get dashboardTpaUpgradeClick(): EventsFilter<{
        view_type: string;
        origin: string;
        app_id: GUID;
        platform: string;
        msid: GUID;
    }>;
    get automationsPriceQuotesInvoicesSendFeedbackForm(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get automationsPriceQuotesInvoicesSubmitFeedbackForm(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardSiteSelectorLoaded(): EventsFilter<{
        filtered: string;
        is_partner_dashboard: boolean;
        sitePublished: string;
        selectionType: string;
        view_type: string;
        account_sites_number: number;
        referral: string;
        loadingTime: number;
        status: string;
        siteType: string;
        site_type_enriched: number;
        platform: string;
        sites_count: number;
        device: string;
    }>;
    get mobileClickOnChangeLng(): EventsFilter<{
        to_lng: string;
        platform: string;
        from_lng: string;
    }>;
    get quotesPrintInvoice(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesPayInvoiceClickSrc5Evid246(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get dashboardSiteSelectorButton(): EventsFilter<{
        filtered: string;
        positionIndex: number;
        site_id: GUID;
        is_partner_dashboard: boolean;
        result: string;
        selectionType: string;
        view_type: string;
        siteTypeName: string;
        action_url: Url;
        referral: string;
        siteType: string;
        sites_number: number;
        cta: string;
        position: number;
        site_type_enriched: number;
        esi: GUID;
        platform: string;
        msid: GUID;
        sites_count: number;
        device: string;
    }>;
    get homeClickNotificationCta(): EventsFilter<{
        app_id: GUID;
        app_def_id: string;
        view_type: string;
        activity_type: string;
        notification_id: GUID;
        num_of_new: number;
        platform: string;
        msid: GUID;
    }>;
    get waiverClientAppWaiverStatusDropdown(): EventsFilter<{
        origin: string;
        contact_id: string;
        currentValue: string;
        msid: GUID;
    }>;
    get waiverClientAppWaiverStatusChangedManually(): EventsFilter<{
        previous_value: string;
        origin: string;
        contact_id: string;
        currentValue: string;
        msid: GUID;
    }>;
    get waiverClientAppSendWaiverToClient(): EventsFilter<{
        origin: string;
        contact_id: string;
        msid: GUID;
    }>;
    get homeMarkNotificationUnread(): EventsFilter<{
        view_type: string;
        notification_id: GUID;
        app_id: string;
        platform: string;
        msid: GUID;
    }>;
    get homeMarkNotificationRead(): EventsFilter<{
        view_type: string;
        activity_type: string;
        notification_id: string;
        app_id: string;
        platform: string;
        msid: string;
    }>;
    get homeMarkAllUnreadNotifications(): EventsFilter<{
        channel: string;
        view_type: string;
        notification_ids: string;
        origin: string;
        num_of_unread: number;
        platform: string;
        msid: string;
    }>;
    get homeNotificationBadgeShown(): EventsFilter<{
        view_type: string;
        on_page_load: boolean;
        origin: string;
        num_of_new: number;
        platform: string;
        msid: string;
    }>;
    get homeAllowBlockBrowserNotificationClick(): EventsFilter<{
        view_type: string;
        user_reply: string;
        platform: string;
        msid: string;
    }>;
    get notificationsClickOnAllSitesTab(): EventsFilter<{
        feed_name: string;
        tab_name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        view: string;
    }>;
    get dashboardEnterEditorx(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get dashboardQuickActionsDragNDrop(): EventsFilter<{
        duration: number;
        name: string;
        view_type: string;
        direction: string;
        isToTopSix: boolean;
        to: number;
        isFromTopSix: boolean;
        from: number;
        platform: string;
        msid: GUID;
    }>;
    get triggersServerTpaActivationInitiatedCompleted(): EventsFilter<{
        instanceId: GUID;
        visitorId: GUID;
        biToken: GUID;
        activationRequestId: string;
        activityId: GUID;
        recipeName: string;
        activityType: string;
        providerId: GUID;
        token: string;
        contactId: GUID;
        ruleId: GUID;
    }>;
    get triggersServerTpaActivationInitiatedFailed(): EventsFilter<{
        instanceId: GUID;
        visitorId: GUID;
        biToken: GUID;
        activationRequestId: string;
        activityId: GUID;
        recipeName: string;
        activityType: string;
        providerId: GUID;
        token: string;
        contactId: GUID;
        ruleId: GUID;
    }>;
    get triggersServerTaskScheduled(): EventsFilter<{
        instanceId: GUID;
        visitorId: GUID;
        biToken: GUID;
        activityId: GUID;
        startAt: DateTime;
        contactId: GUID;
        ruleId: GUID;
    }>;
    get triggersServerTpaActivationCompletedSuccessfully(): EventsFilter<{
        instanceId: GUID;
        visitorId: GUID;
        biToken: GUID;
        activationRequestId: string;
        activityId: GUID;
        ruleId: GUID;
    }>;
    get triggersServerTpaActivationCompleteFailed(): EventsFilter<{
        instanceId: GUID;
        visitorId: GUID;
        biToken: GUID;
        errorMsg: string;
        activationRequestId: string;
        activityId: GUID;
        errorType: string;
        ruleId: GUID;
    }>;
    get triggersServerTriggerScheduleCancelled(): EventsFilter<{
        instanceId: GUID;
        visitorId: GUID;
        biToken: GUID;
        activityId: GUID;
        ruleId: GUID;
    }>;
    get notificationNotificationAutomationCreated(): EventsFilter<{
        channels: string;
        channel: string;
        recipients_type: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardClickOnSideBar(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get invoicesClickOnSendInvoiceButton(): EventsFilter<{
        instanceId: GUID;
        totalAmountLong: number;
        createOrder: boolean;
        isValid: boolean;
        uuid: GUID;
        paymentType: string;
        view_type: string;
        invoiceId: GUID;
        origin: string;
        status: string;
        currency: string;
        platform: string;
        msid: GUID;
    }>;
    get notificationShowNotification(): EventsFilter<{
        is_high_priority: boolean;
        feed_name: string;
        channel: string;
        source: string;
        correlation_id: GUID;
        view_type: string;
        notification_ids: string;
        origin: string;
        mode: string;
        correlationId: string;
        contact_id: string;
        platform: string;
        notificationid: string;
        msid: GUID;
        page_number: number;
    }>;
    get notificationClickOnNotification(): EventsFilter<{
        is_high_priority: boolean;
        feed_name: string;
        clickOrigin: string;
        channel: string;
        correlation_id: GUID;
        click_type: string;
        view_type: string;
        notification_id: string;
        origin: string;
        correlationId: string;
        contact_id: string;
        platform: string;
        notificationid: string;
        msid: GUID;
        deep_link: string;
        grouped_notifications: string;
    }>;
    get notificationsEnableDesktopNotificationsFirstTime(): EventsFilter<{
        feed_name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get notificationsPushNotificationToggleIsDisplayed(): EventsFilter<{
        feed_name: string;
        view_type: string;
        origin: string;
        permission_type: string;
        platform: string;
        msid: string;
    }>;
    get notificationsEnableToTurnOnOffAllSiteNotificationsExperts(): EventsFilter<{
        toggle: boolean;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get notificationsEnableToTurnOnOffNotificationsPerChannel(): EventsFilter<{
        channel: string;
        toggle: boolean;
        view_type: string;
        section: string;
        platform: string;
        group: string;
        contactId: GUID;
        notificationName: string;
        targetEntity: string;
        targetMsid: string;
    }>;
    get notificationsShowMobileDialog(): EventsFilter<{
        view_type: string;
        is_installed_oneapp: boolean;
        platform: string;
        msid: string;
    }>;
    get notificationsDisplayPopupForUserBlockedDesktopNotifications(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get notificationCloseAHighPriorityNotifications(): EventsFilter<{
        feed_name: string;
        channel: string;
        view_type: string;
        notification_ids: string;
        origin: string;
        platform: string;
        notificationid: string;
        msid: GUID;
    }>;
    get dashboardShowMorePopularShortcutsClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get notificationsDisplayDesktopNotificationsBanner(): EventsFilter<{
        feed_name: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get notificationsClickOnDesktopNotificationsBanner(): EventsFilter<{
        feed_name: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get notificationsResolveAlertNotification(): EventsFilter<{
        contactId: GUID;
        clickName: string;
        ClickTypeInfo: string;
        clickArea: string;
    }>;
    get invoicesUserSendInvoice(): EventsFilter<{
        instanceId: GUID;
        totalAmountLong: number;
        createOrder: boolean;
        uuid: GUID;
        depositType: string;
        paymentType: string;
        view_type: string;
        invoiceId: GUID;
        origin: string;
        status: string;
        invoiceTitle: string;
        invoiceSource: string;
        currency: string;
        platform: string;
        msid: GUID;
        discountPercentage: number;
    }>;
    get bizManagerSetupWidgetOmniPhaseCompletedInDashboard(): EventsFilter<{
        skipped_items: string;
        resolved_items: string;
        asset_campaign_guid: string;
        number_of_resolved_items: number;
        view_type: string;
        number_of_skipped_items: number;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get automationsDaComponentShowPage(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get automationsDaComponentManageAutomations(): EventsFilter<{
        view_type: string;
        status: boolean;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get automationsDaComponentCreateYourOwn(): EventsFilter<{
        paymentType: string;
        view_type: string;
        invoiceSource: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get automationsDaComponentRecommendationClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get automationsDaComponentExploreMoreClick(): EventsFilter<{
        exposure_name: string;
        view_type: string;
        value_from_was: number;
        value_from_dealer: number;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardLessPopularShortcutsClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get clickOnSearchInHelpCenterInSearchSrc5Evid292(): EventsFilter<{
        query: string;
        view_type: string;
        sub_view: string;
        origin: string;
        view: string;
        hosting_platform_context_id: string;
    }>;
    get errorPageClick295(): EventsFilter<{
        component_name: string;
        hosting_platform: string;
        error_location: string;
        view_type: string;
        host_id: string;
        component_app_id: string;
        platform: string;
        component_id: string;
        hosting_platform_context_id: string;
        hosting: string;
        component_type: string;
        msid: GUID;
        error_name: string;
    }>;
    get accountDialogClickItem(): EventsFilter<{
        item_id: string;
        item_index_ex_separators: number;
        page_view: string;
        view_type: string;
        items_displayed: string;
        item_name: string;
        origin: string;
        platform: string;
        msid: GUID;
        item_index: number;
    }>;
    get errorPage297(): EventsFilter<{
        component_name: string;
        hosting_platform: string;
        error_location: string;
        view_type: string;
        error_type: string;
        host_id: string;
        component_app_id: string;
        app_id: string;
        platform: string;
        component_id: string;
        hosting_platform_context_id: string;
        hosting: string;
        component_type: string;
        msid: GUID;
        page_url: string;
        error_name: string;
    }>;
    get dashboardTourUserSeesTourBanner(): EventsFilter<{
        experiment_name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardStartLoading(): EventsFilter<{
        prev_module_id: string;
        __cookies_prefix__wixsession: string;
        referral_additional_info: string;
        referral_info: string;
        view_type: string;
        is_account_mgr: boolean;
        sub_view: string;
        screen_width: number;
        initial_load: boolean;
        app_ids: string;
        window_width: number;
        origin: string;
        is_biz_mgr: boolean;
        screen_height: number;
        prev_view: string;
        prevPageComponentId: string;
        app_id: string;
        prev_sub_view: string;
        window_height: number;
        platform: string;
        origin_app_id: string;
        hosting: string;
        msid: GUID;
        pageComponentId: string;
        module_id: string;
        view: string;
    }>;
    get dashboardEntryFeeding(): EventsFilter<{}>;
    get clickOnGoToEditorFromBmSrc5Evid3001(): EventsFilter<{
        hostingPlatformContextId: string;
        pageId: string;
        pageName: string;
    }>;
    get homeCloseDialog(): EventsFilter<{
        wixsession: string;
        page_view: string;
        referral_info: string;
        view_type: string;
        origin: string;
        prev_view: string;
        app_id: GUID;
        platform: string;
        msid: GUID;
        action: string;
        view: string;
    }>;
    get dashboardFinishLoading(): EventsFilter<{
        __cookies_prefix__wixsession: string;
        view_mode: string;
        referral_additional_info: string;
        loading_time_from_start: number;
        referral_info: string;
        view_type: string;
        is_account_mgr: boolean;
        sub_view: string;
        screen_width: number;
        initial_load: boolean;
        loading_time_from_module: number;
        app_ids: string;
        window_width: number;
        loading_time_from_first_interaction: number;
        origin: string;
        loading_time_from_performance_now: number;
        is_biz_mgr: boolean;
        screen_height: number;
        prev_view: string;
        prevPageComponentId: string;
        app_id: string;
        prev_sub_view: string;
        window_height: number;
        is_pro: boolean;
        platform: string;
        origin_app_id: string;
        hosting: string;
        msid: GUID;
        pageComponentId: string;
        module_id: string;
        view: string;
        loading_time: number;
    }>;
    get homeOpenDialogClick(): EventsFilter<{
        wixsession: string;
        page_view: string;
        referral_info: string;
        view_type: string;
        origin: string;
        prev_view: string;
        app_id: GUID;
        platform: string;
        msid: GUID;
        action: string;
        view: string;
    }>;
    get dialogFirstLoad(): EventsFilter<{
        wixsession: string;
        referral_info: string;
        view_type: string;
        origin: string;
        prev_view: string;
        app_id: GUID;
        platform: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get homeMultipleSitesCheck(): EventsFilter<{
        view_type: string;
        origin: string;
        num_displayed_sites: number;
        has_two_sites: boolean;
        prev_view: string;
        platform: string;
        msid: GUID;
        sites_count: number;
    }>;
    get homeBizMgrEligible(): EventsFilter<{
        view_type: string;
        phase_number: number;
        platform: string;
        msid: GUID;
        is_eligible: boolean;
    }>;
    get homeClickOnCreateAnythingItem(): EventsFilter<{
        name: string;
        page_view: string;
        view_type: string;
        add_app_id: string;
        app_id: GUID;
        platform: string;
        msid: GUID;
        view: string;
    }>;
    get myAccountClickOnExpertDashboard(): EventsFilter<{
        page_view: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get dashboardDashboardHomeIsFullyLoaded(): EventsFilter<{
        loading_time_from_start: number;
        referral_info: string;
        view_type: string;
        sub_view: string;
        screen_width: number;
        loading_time_from_module: number;
        window_width: number;
        loading_time_from_first_interaction: number;
        loading_time_from_performance_now: number;
        screen_height: number;
        prev_view: string;
        prev_sub_view: string;
        window_height: number;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get dashboardTourCloseTour(): EventsFilter<{
        experiment_name: string;
        stage_process: string;
        view_type: string;
        stage_number: number;
        platform: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsPageView(): EventsFilter<{
        available_sections: string;
        name: string;
        focus_section: string;
        view_type: string;
        unseen_sections: string;
        seen_sections: string;
        origin: string;
        alertStatus: string;
        place: string;
        platform: string;
        hosting: string;
        msid: GUID;
        alert_sections: string;
        subscriptions: string;
    }>;
    get dashboardSiteSettingsExperienceDisplayed(): EventsFilter<{
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsChangeValue(): EventsFilter<{
        name: string;
        create_method: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsChangeValueSuccess(): EventsFilter<{
        name: string;
        create_method: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsChangeValueFailure(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsClickLink(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsDeleteValue(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsDeleteValueSuccess(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsDeleteValueFailure(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsSelectValue(): EventsFilter<{
        name: string;
        adding_method: string;
        view_type: string;
        experience: string;
        origin: string;
        place: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardTourNextStep(): EventsFilter<{
        experiment_name: string;
        stage_process: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsClosingComponent(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        place: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsDomainSslOption(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        mode: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsDomainSslPopupCancel(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        mode: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsSeoClickEnterAddressManually(): EventsFilter<{
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsSeoCloseEnterAddressManuallyPopUp(): EventsFilter<{
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardSiteSettingsSeoClickOnGetStarted(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
    }>;
    get dashboardSiteSettingsOverviewUnpublishSite(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardSiteSettingsOverviewUnpublishPopupCancel(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get renameSiteOpenRenameDialog(): EventsFilter<{
        view_type: string;
        origin: string;
        cta: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardChangeSiteDisplayNameSave(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardUserSeeFeedMoreThen3Sec(): EventsFilter<{
        feedId: GUID;
        source: string;
        url: string;
        view_type: string;
        origin: string;
        campaignId: GUID;
        title: string;
        type: string;
        platform: string;
        msid: GUID;
        aboveTheFold: boolean;
        feed_id: GUID;
    }>;
    get dashboardChangeUrlSave(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get needsYourActionNyaWidgetShown(): EventsFilter<{
        view_type: string;
        num_of_items: number;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get needsYourActionItemIsShown(): EventsFilter<{
        item_id: string;
        item_location_on_page: number;
        view_type: string;
        num_of_items: number;
        platform: string;
        hosting: string;
        msid: GUID;
        template_id: string;
    }>;
    get needsYourActionClickOnItem(): EventsFilter<{
        item_id: string;
        item_location_on_page: number;
        click_type: string;
        view_type: string;
        item_name: string;
        platform: string;
        hosting: string;
        msid: GUID;
        template_id: string;
    }>;
    get settingsLobbyItemExposedSrc5Evid3333(): EventsFilter<{
        item_location_on_page: number;
        section_name: string;
        item_name: string;
        categoryLocationOnPage: number;
    }>;
    get needsYourActionClickOnUndoHidingAnItem(): EventsFilter<{
        item_id: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
        template_id: string;
    }>;
    get needsYourActionResolvedNyaItem(): EventsFilter<{
        item_id: string;
        msid: GUID;
        template_id: string;
    }>;
    get hooverNewReleasesIcon(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get tooltipNotificationPopsUp(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get newReleasesApiRequest(): EventsFilter<{
        lng: string;
        announcement_id: GUID;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get closeTooltipPopUp(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get badgeNotification(): EventsFilter<{
        view_type: string;
        new_notifications: number;
        platform: string;
        msid: GUID;
    }>;
    get viewFeatureCard(): EventsFilter<{
        announcement_id: GUID;
        view_type: string;
        card_position: number;
        platform: string;
        msid: GUID;
    }>;
    get cardCta(): EventsFilter<{
        button_type: string;
        announcement_id: GUID;
        button_name: string;
        view_type: string;
        card_position: number;
        platform: string;
        msid: GUID;
    }>;
    get viewedAllUpdates(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get settingsOverviewPageClickOnItem(): EventsFilter<{
        click_name: string;
        hosting_platform: string;
        page_view: string;
        view_type: string;
        item_name: string;
        status_text: string;
        fold_name: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get iconRender(): EventsFilter<{
        uuid: GUID;
        platform: string;
        msid: GUID;
    }>;
    get quotesBulkActionsPrint(): EventsFilter<{
        number: string;
        view_type: string;
        filter: string;
        platform: string;
        msid: string;
    }>;
    get setupWidgetItems(): EventsFilter<{
        skipped_items: string;
        resolved_items: string;
        asset_campaign_guid: string;
        location: string;
        number_of_available_items: number;
        available_items: string;
        number_of_resolved_items: number;
        view_type: string;
        number_of_skipped_items: number;
        setup_location: string;
        platform: string;
        hosting: string;
        msid: GUID;
        trigger: string;
    }>;
    get dashboardShowSideBar(): EventsFilter<{
        page_view: string;
        view_type: string;
        alwaysOpen: boolean;
        selectedItem: string;
        platform: string;
        msid: GUID;
        action: string;
    }>;
    get rolesAddNewRoleClick(): EventsFilter<{
        is_blog_shown: boolean;
        view_type: string;
        roles_displayed: string;
        origin: string;
        platform: string;
        hosting: string;
        is_events_shown: boolean;
        msid: GUID;
    }>;
    get searchQuery(): EventsFilter<{
        searchTerms: string;
        lng: string;
        requestURI: string;
        responseCode: number;
        errorMessage: string;
        requestTime: number;
        scannedDocsCount: number;
        matchedDocsCount: number;
        isSuccess: boolean;
        filter: string;
        offset: number;
        queryProfileParams: string;
        responseMessage: string;
        queryProfile: string;
        rankProfile: string;
        limit: number;
        customRankFeatures: string;
    }>;
    get rolesAddRoleCloseWindow(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesAddRoleInviteClick(): EventsFilter<{
        view_type: string;
        roles_displayed: string;
        origin: string;
        invite_role: string;
        is_valid_email: boolean;
        platform: string;
        hosting: string;
        invite_email: string;
        msid: GUID;
    }>;
    get rolesAddRoleInviteClickSuccess(): EventsFilter<{
        is_blog_shown: boolean;
        view_type: string;
        roles_displayed: string;
        origin: string;
        invite_role: string;
        platform: string;
        hosting: string;
        invite_email: string;
        msid: GUID;
    }>;
    get crmHomeButtonClicked(): EventsFilter<{
        uuid: GUID;
        button_name: string;
        view_type: string;
        section: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesAddRoleInviteClickFail(): EventsFilter<{
        error_desc: string;
        view_type: string;
        roles_displayed: string;
        origin: string;
        invite_role: string;
        platform: string;
        hosting: string;
        invite_email: string;
        msid: GUID;
    }>;
    get rolesLoginPageLoadStart(): EventsFilter<{
        view_type: string;
        invite_id: string;
        platform: string;
        invite_email: string;
        msid: GUID;
    }>;
    get rolesLoginPageLoadComplete(): EventsFilter<{
        view_type: string;
        invite_id: string;
        platform: string;
        invite_email: string;
        msid: GUID;
    }>;
    get rolesAcceptFail(): EventsFilter<{
        view_type: string;
        invite_id: string;
        platform: string;
        invite_email: string;
        msid: GUID;
    }>;
    get rolesResendInviteClick(): EventsFilter<{
        view_type: string;
        origin: string;
        invite_role: string;
        platform: string;
        hosting: string;
        invite_email: string;
        msid: GUID;
    }>;
    get dashboardCloseBanner(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesDeleteRoleClick(): EventsFilter<{
        view_type: string;
        accept_email: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesDeleteRoleCloseWindow(): EventsFilter<{
        view_type: string;
        accept_email: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesDeleteRoleDeleteClick(): EventsFilter<{
        view_type: string;
        accept_email: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesDeleteRoleDeleteClickSuccess(): EventsFilter<{
        view_type: string;
        accept_email: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesDeleteRoleDeleteClickFail(): EventsFilter<{
        view_type: string;
        accept_email: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesAcceptInviteFromMobilePageView(): EventsFilter<{
        view_type: string;
        inviteToken: string;
        invite_id: string;
        platform: string;
        msid: GUID;
    }>;
    get rolesEditRoleClick(): EventsFilter<{
        is_blog_shown: boolean;
        is_accepted: boolean;
        view_type: string;
        roles_displayed: string;
        origin: string;
        platform: string;
        hosting: string;
        is_events_shown: boolean;
        msid: GUID;
    }>;
    get rolesEditRoleUpdateClick(): EventsFilter<{
        is_blog_shown: boolean;
        new_role: string;
        is_accepted: boolean;
        view_type: string;
        roles_displayed: string;
        prev_role: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get rolesGetInviteLink(): EventsFilter<{
        view_type: string;
        invite_role: string;
        platform: string;
        hosting: string;
        msid: GUID;
        action: string;
    }>;
    get analyticsKpiIsShownInAnalyticsWidget(): EventsFilter<{
        kpi_period: string;
        kpi_location: number;
        view_type: string;
        kpi_name: string;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get dashboardNewsUserClickReadMore(): EventsFilter<{
        source: string;
        feedId: GUID;
        view_type: string;
        origin: string;
        title: string;
        type: string;
        platform: string;
        msid: GUID;
    }>;
    get exposureForAnalyticsTests(): EventsFilter<{
        num_value: number;
        exposure_name: string;
        bi_profile_num_value: string;
        msid: GUID;
    }>;
    get analyticsTooltip(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get analyticsClickOnWidgetButtons(): EventsFilter<{
        click_name: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get analyticsClickOnKpi(): EventsFilter<{
        kpi_location: number;
        view_type: string;
        kpi_name: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get analyticsChooseKpiFromCustomizationList(): EventsFilter<{
        selected_kpis: string;
        added_kpi_location: string;
        error_desc: string;
        view_type: string;
        added_kpi: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get analyticsClickOnButtonFromCustomizationList(): EventsFilter<{
        selected_kpis: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get analyticsChangeKpisTimePeriod(): EventsFilter<{
        kpi_period: string;
        view_type: string;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get analyticsHoverAKpi(): EventsFilter<{
        kpi_location: number;
        view_type: string;
        kpi_name: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get notificationsClickOnAChannelSettings(): EventsFilter<{
        click_name: string;
        channel: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardNewsClickViewAll(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get notificationsClickOnChannelLink(): EventsFilter<{
        channel: string;
        url: string;
        view_type: string;
        platform: string;
        has_settings: boolean;
        hosting: string;
        msid: GUID;
    }>;
    get quotesClickDueDate(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesChooseDueDate(): EventsFilter<{
        view_type: string;
        dueDate: DateTime;
        platform: string;
        msid: string;
    }>;
    get quotesClickIssueDate(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesChooseIssueDate(): EventsFilter<{
        view_type: string;
        invoiceType: string;
        platform: string;
        msid: string;
    }>;
    get notificationGroupNotificationIsDisplayed(): EventsFilter<{
        feed_name: string;
        channel: string;
        view_type: string;
        notification_id_shown: string;
        notification_ids: string;
        origin: string;
        contact_id: string;
        platform: string;
        page_number: number;
    }>;
    get quotesViewPayments(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesSubscriptionViewPayments(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get dashboardProsSiteActionsOpened(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesBulkActionsDownloadPdf(): EventsFilter<{
        number: string;
        view_type: string;
        filter: string;
        platform: string;
        msid: string;
    }>;
    get quotesBulkActionsExportCsv(): EventsFilter<{
        number: string;
        view_type: string;
        filter: string;
        platform: string;
        msid: string;
    }>;
    get quotesDuplicateInvoice(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get dashboardClickOnMySites(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesTabPageView(): EventsFilter<{
        name: string;
        view_type: string;
        experience: string;
        origin: string;
        place: string;
        platform: string;
        msid: string;
    }>;
    get quotesInvoicesOnboardingPageView(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesGetPaymentClick(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        type: string;
        platform: string;
        msid: string;
    }>;
    get quotesNewInvoiceClick(): EventsFilter<{
        originalInvoiceId: GUID;
        view_type: string;
        origin: string;
        status: string;
        create_order: boolean;
        type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesEmailInvoicePage(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        status: string;
        origin_device: string;
        invoiceSource: string;
        resend: boolean;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesEmailInvoicePageCancelClick(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        resend: boolean;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesViewInvoicePageView(): EventsFilter<{
        source: string;
        no_of_payments: string;
        paymentType: string;
        view_type: string;
        is_visible: boolean;
        paid: boolean;
        origin: string;
        invoiceSource: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
        view: string;
    }>;
    get quotesChangeValue(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceSaveDraftClick(): EventsFilter<{
        paymentType: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        status: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceSaveDraftComplete(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        invoiceSource: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get dashboardClickToggleSitesListInNavbar(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
        action: string;
    }>;
    get quotesCreateInvoiceSaveDraftFailed(): EventsFilter<{
        view_type: string;
        reason: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get submitGdprForm(): EventsFilter<{
        ticket_id: GUID;
        response_status: string;
        request_type: string;
        response_time: number;
        submission_date: DateTime;
    }>;
    get submitGdprFormSrc5Evid4102(): EventsFilter<{
        ticket_id: GUID;
        response_status: string;
        request_type: string;
        response_time: number;
        submission_date: DateTime;
    }>;
    get quotesCreateInvoiceCancelClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceAddLine(): EventsFilter<{
        source: string;
        view_type: string;
        appDefId: GUID;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceDeleteLine(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesNewProductClick(): EventsFilter<{
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesNewProductSave(): EventsFilter<{
        price_long: number;
        description: string;
        view_type: string;
        invoiceType: string;
        product_name: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesNewProductCancel(): EventsFilter<{
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesEditProductClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesDeleteProductClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesDeleteProductPageOk(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get dashboardSiteQuickActionDialogApprove(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesDeleteProductPageCancel(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get cookiesBannerBannerDisplayed(): EventsFilter<{
        url: Url;
    }>;
    get cookiesBannerPolicyApplied(): EventsFilter<{
        url: Url;
        third_party: boolean;
        advertisement: boolean;
        request_type: string;
        visitor_id: GUID;
        analytics: boolean;
        functional: boolean;
    }>;
    get quotesEditInvoice(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        appDefId: GUID;
        origin: string;
        status: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesPreviewInvoice(): EventsFilter<{
        source: string;
        paymentType: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        status: string;
        origin_device: string;
        invoiceSource: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesPrintInvoiceSrc5Evid423(): EventsFilter<{
        externalId: GUID;
        paymentType: string;
        view_type: string;
        appDefId: GUID;
        originPage: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesAddPaymentClick(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        appDefId: GUID;
        origin: string;
        status: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
        fully_paid: boolean;
    }>;
    get quotesAddPaymentPageOk(): EventsFilter<{
        paymentMethod: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
        fully_paid: boolean;
    }>;
    get quotesAddPaymentPageCancel(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesVoidPageOk(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesVoidPageCancel(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get dashboardSiteQuickActionDialogClose(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesDeleteInvoiceClick(): EventsFilter<{
        view_type: string;
        origin: string;
        status: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesDeleteInvoicePageOk(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesDeleteInvoicePageCancel(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesSettingsNewTaxClick(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesSettingsNewTaxPageSave(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesSettingsNewTaxPageCancel(): EventsFilter<{
        source: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesEditTaxClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesDeleteTaxClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesDeleteTaxPageOk(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesDeleteTaxPageCancel(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get myAccountClickOnHelp(): EventsFilter<{
        page_view: string;
        view_type: string;
        origin_app: string;
        origin: string;
        app_id: string;
        platform: string;
    }>;
    get quotesShowPaymentPopupPage(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesConnectPaymentClick(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesCreateAnAccountOfPaymentProvider(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesNonValidPaypalAccountPopup(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesNonValidPaypalAccountPopupClose(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get quotesNonValidPaypalAccountPopupClickLink(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        link_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesSortInvoices(): EventsFilter<{
        name: string;
        num_of_invoices: number;
        view_type: string;
        order: string;
        platform: string;
        msid: string;
    }>;
    get quotesFilterInvoices(): EventsFilter<{
        name: string;
        num_of_invoices: number;
        view_type: string;
        origin_device: string;
        platform: string;
        filter_type: string;
        msid: string;
    }>;
    get quotesSearchInvoices(): EventsFilter<{
        num_of_invoices: number;
        view_type: string;
        text: string;
        num_of_results: number;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get quotesDownloadPdf(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        invoiceSource: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get dashboardAccountSettingsImageAction(): EventsFilter<{
        view_type: string;
        platform: string;
        action: string;
    }>;
    get quotesResendFromPreviewPage(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        appDefId: GUID;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesRunReportClickGenerateReportClick(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        basis: string;
        msid: string;
    }>;
    get quotesPrintReportClick(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        basis: string;
        msid: string;
    }>;
    get quotesExportReportClick(): EventsFilter<{
        name: string;
        view_type: string;
        file_type: string;
        platform: string;
        basis: string;
        msid: string;
    }>;
    get quotesPageView(): EventsFilter<{
        num_of_invoices: number;
        view_type: string;
        referral: string;
        origin: string;
        num_of_contacts: number;
        platform: string;
        msid: GUID;
    }>;
    get quotesManagePaymentsBannerDisplayed(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesDismissManagePaymentsBanner(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesClickCtaInManagePaymentsBanner(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesClickViewOrderBooking(): EventsFilter<{
        view_type: string;
        app_name: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesInvoicesAutomaticallyCreateAndSendInvoices(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        is_auto: boolean;
        platform: string;
        msid: string;
    }>;
    get dashboardAccountSettingsImageActionSuccess(): EventsFilter<{
        view_type: string;
        platform: string;
        action: string;
    }>;
    get quotesAddCustomerClick(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesChooseACustomer(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        is_new_contact: boolean;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesRemoveCustomer(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesDueDateUpdating(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        due_date: DateTime;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesDateOfIssueUpdating(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        date_of_issue: DateTime;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesAddDiscount(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        discount: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesChooseAProduct(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        productSource: string;
        productName: string;
        productId: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesRemoveProduct(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        product_id: number;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesEditProductOrService(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        product_id: number;
        productName: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesSelectTax(): EventsFilter<{
        uuid: GUID;
        taxRate: number;
        view_type: string;
        tax_name: string;
        product_id: number;
        contact_id: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesAddingBusinessLogo(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesAddingBusinessName(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesClickSaveOnAddBusinessDetailsPage(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesBoardingPageClickClose(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesGetTheWixAppBannerDisplayed(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesDismissGetWixAppBanner(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesClickCtaInGetWixAppBanner(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesPrintInvoiceSrc5Evid477(): EventsFilter<{
        paymentType: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesPayInvoiceClick(): EventsFilter<{
        totalAmountLong: number;
        externalId: GUID;
        paymentType: string;
        view_type: string;
        invoiceType: string;
        origin: string;
        invoiceSource: GUID;
        currency: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCloseManagePlanBillingTooltip(): EventsFilter<{
        choose: string;
        view_type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get quotesCreateInvoiceToggleRecurring(): EventsFilter<{
        toggle: boolean;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesPrintFromPreviewPage(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesPreviewFromInsideTheInvoiceCreation(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesCancelFromInsideTheInvoiceCreation(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesPreviewFromTable(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        origin: string;
        appdefid: GUID;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get mySitesEditSite(): EventsFilter<{
        view_type: string;
        ds_origin: string;
        origin: string;
        view_level: string;
        place: string;
        is_premium: boolean;
        platform: string;
        hosting: string;
        msid: GUID;
        is_published: boolean;
    }>;
    get sidebarCategoryItemsShown488(): EventsFilter<{
        name: string;
        item_id: string;
        hosting_platform: string;
        sidebar_name: string;
        section_name: string;
        category_items_list: string;
        page_view: string;
        view_type: string;
        page_id: string;
        sidebar_state: string;
        level_of_popover: number;
        origin: string;
        disabled: string;
        platform: string;
        hosting_platform_context_id: string;
        hosting: string;
        msid: GUID;
    }>;
    get crmHomeCreateButtonClick(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeCreateButtonChooseOption(): EventsFilter<{
        uuid: GUID;
        option: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeSecondaryCtaClick(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        tabName: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeCarouselClick(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeManageYourFinancesChoose(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        tabName: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeCustomerManagementToolsChoose(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        tabName: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesSettingsChangeTabs(): EventsFilter<{
        tab: string;
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesSettingsSuccessToast(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get contactEnrichmentTemporaryEvent(): EventsFilter<{
        view_type: string;
        hasContacts: boolean;
        origin: string;
        pageView: string;
        contact_id: string;
        platform: string;
        msid: GUID;
    }>;
    get helpWidgetClickOnSeeAllResults(): EventsFilter<{
        query: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dashboardClickOnConnectDomain(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardClickOnSelectPremiumPlan(): EventsFilter<{
        referral_info: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardClickBuyDomainFirst(): EventsFilter<{
        referral_info: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardCloseConnectDomainPopUp(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardBannerLoadingInit(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get engageEmailSettingsPageView(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get engageEmailSettingsUpdateValue(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get engageEmailSettingsSaveChangesClick(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get engageEmailSettingsCancelBack(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get engageEmailSettingsUnsavedChangesDialog(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        invoiceId: GUID;
        origin: string;
        status: string;
        appdefid: GUID;
        platform: string;
        msid: string;
    }>;
    get dashboardBannerLoadingComplete(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get sideBarItemClick550(): EventsFilter<{
        name: string;
        prev_app_id: GUID;
        item_id: string;
        sub_section_name: string;
        hosting_platform: string;
        sidebar_name: string;
        section_name: string;
        previous_item_name: string;
        referral_info: string;
        view_type: string;
        is_from_main_sidebar: boolean;
        sidebar_state: string;
        origin: string;
        sub_category_items_list: string;
        items_list: string;
        second_sub_category_items_list: string;
        counter: number;
        app_id: string;
        type: string;
        previous_sidebar_name: string;
        platform: string;
        hosting_platform_context_id: string;
        hosting: string;
        previous_item_id: string;
        msid: GUID;
        legacy_name: string;
        target_page_id: string;
    }>;
    get bizManagerBizInfoFieldValueChangedNotSaved(): EventsFilter<{
        name: string;
        sub_category: string;
        hosting_platform: string;
        field_type: string;
        page_view: string;
        industry_id: string;
        view_type: string;
        structure_id: string;
        origin: string;
        category: string;
        fold_name: string;
        platform: string;
        location_details: string;
        hosting: string;
        msid: GUID;
        value: string;
    }>;
    get bizManagerBizInfoClickOnSave(): EventsFilter<{
        name: string;
        hosting_platform: string;
        page_view: string;
        view_type: string;
        origin: string;
        place: string;
        fold_name: string;
        platform: string;
        location_details: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBizInfoSaveSuccess(): EventsFilter<{
        name: string;
        sub_category: string;
        hosting_platform: string;
        page_view: string;
        industry_id: string;
        view_type: string;
        structure_id: string;
        origin: string;
        category: string;
        place: string;
        fold_name: string;
        platform: string;
        location_details: string;
        hosting: string;
        msid: GUID;
        is_physical_address: boolean;
    }>;
    get bizManagerBizInfoClickOnDiscardButton(): EventsFilter<{
        hosting_platform: string;
        page_view: string;
        view_type: string;
        origin: string;
        place: string;
        platform: string;
        location_details: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBizInfoApproveDiscard(): EventsFilter<{
        hosting_platform: string;
        context: string;
        page_view: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBizInfoCancelDiscard(): EventsFilter<{
        page_view: string;
        view_type: string;
        origin: string;
        platform: string;
        location_details: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBizInfoNavigateAwayDialogIsShown(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBizInfoNavigateAwayStayInPage(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBizInfoClickOnButton(): EventsFilter<{
        name: string;
        view_type: string;
        fold_name: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get siteHistoryViewerNotLoaded(): EventsFilter<{
        referralInfo: string;
        view_type: string;
        platform: string;
    }>;
    get bizManagerBizInfoNavigateAwayLeaveThisPage(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerStartLoading(): EventsFilter<{
        context: GUID;
        view_type: string;
        screen_width: number;
        initial_load: boolean;
        app_ids: string;
        window_width: number;
        loading_time_from_performance_now: number;
        screen_height: number;
        app_id: string;
        window_height: number;
        platform: string;
        time_to_first_byte: number;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerFinishLoading(): EventsFilter<{
        view_type: string;
        num_of_bundles: number;
        initial_load: boolean;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
        loading_time: number;
    }>;
    get bizManagerModuleLoadingStart(): EventsFilter<{
        wixsession: string;
        prev_module_id: string;
        referral_info: string;
        view_type: string;
        initial_load: boolean;
        origin: string;
        app_id: GUID;
        platform: string;
        origin_app_id: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get bizManagerModuleLoadingFinish(): EventsFilter<{
        wixsession: string;
        referral_info: string;
        view_type: string;
        initial_load: boolean;
        origin: string;
        app_id: GUID;
        platform: string;
        origin_app_id: string;
        hosting: string;
        msid: GUID;
        module_id: string;
        loading_time: number;
    }>;
    get bizManagerNavigateToViewStart(): EventsFilter<{
        wixsession: string;
        prev_module_id: string;
        referral_info: string;
        view_type: string;
        sub_view: string;
        prev_view: string;
        app_id: GUID;
        prev_sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
        view: string;
    }>;
    get dashboardClickOnCreatePriorityTicketExperts(): EventsFilter<{
        view_type: string;
        origin_app: string;
        origin: string;
        platform: string;
    }>;
    get bizManagerClickOnBackInSidebarItem(): EventsFilter<{
        name: string;
        sidebar_name: string;
        view_type: string;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
        legacy_name: string;
    }>;
    get bizManagerSetupWidgetIsDisplayed(): EventsFilter<{
        done_steps: number;
        asset_campaign_guid: string;
        view_type: string;
        skipped_steps: number;
        steps: number;
        widget_state: string;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get bizManagerMinimizeExpandSetupWidget(): EventsFilter<{
        done_steps: number;
        view_type: string;
        skipped_steps: number;
        app_id: string;
        steps: number;
        widget_state: string;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get bizManagerSetupWidgetShowMessageComplete(): EventsFilter<{
        asset_campaign_guid: string;
        view_type: string;
        sub_view: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
        view: string;
    }>;
    get bizManagerSetupWidgetClickCtaAfterShowMessageComplete(): EventsFilter<{
        asset_campaign_guid: string;
        click_type: string;
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get bizManagerDisplayAnalyticsWidget(): EventsFilter<{
        view_type: string;
        app_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get bizManagerClickOnHelpCenterInDashboardFooter(): EventsFilter<{
        name: string;
        view_type: string;
        app_id: string;
        platform: string;
        hosting: string;
    }>;
    get bizManagerClickOnWidgetCta(): EventsFilter<{
        done_steps: number;
        step_id: number;
        step: string;
        step_guid: GUID;
        view_type: string;
        skipped_steps: number;
        app_id: string;
        steps: number;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get transferSiteResendTransferEmailClick(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerHtmlLoaded(): EventsFilter<{
        view_type: string;
        app_instance_id: GUID;
        app_ids: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerViewStartLoading(): EventsFilter<{
        referral_info: string;
        view_type: string;
        sub_view: string;
        app_instance_id: GUID;
        initial_load: boolean;
        app_ids: string;
        prev_view: string;
        prev_sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
    }>;
    get bizManagerViewFinishLoading(): EventsFilter<{
        view_type: string;
        sub_view: string;
        app_instance_id: GUID;
        initial_load: boolean;
        app_ids: string;
        prev_view: string;
        prev_sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get bizManagerClickLinkFromTooltip(): EventsFilter<{
        name: string;
        click_type: string;
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
        value: string;
        template_id: string;
    }>;
    get bizManagerBusinessInfoMergeDialogShown(): EventsFilter<{
        view_type: string;
        merged_apps: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBusinessInfoMergeDialogApprove(): EventsFilter<{
        view_type: string;
        merged_apps: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerBusinessInfoMergeDialogClose(): EventsFilter<{
        view_type: string;
        merged_apps: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get managerFullStoryRecordingStarted(): EventsFilter<{
        videoUrl: Url;
        view_type: string;
        esi: GUID;
        platform: string;
        msid: GUID;
    }>;
    get bizManagerDismissTooltip(): EventsFilter<{
        name: string;
        view_type: string;
        place: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get transferSiteGetTransferLinkClick(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerWhatSNextCloseVideoAsset(): EventsFilter<{
        percentage: number;
        group_id: GUID;
        asset_campaign_guid: string;
        item_id: GUID;
        view_type: string;
        asset_location_on_page: string;
        offering_guid: string;
        asset_location_from_group_list: number;
        asset_campaign_id: string;
        promotion_asset_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerShowUrgentMessages(): EventsFilter<{
        asset_campaign_guid: string;
        view_type: string;
        offering_guid: string;
        asset_campaign_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerUrgentMessagesClicked(): EventsFilter<{
        asset_campaign_guid: string;
        click_type: string;
        view_type: string;
        offering_guid: string;
        asset_campaign_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerDashboardAssetClickOnArrow(): EventsFilter<{
        asset_campaign_guid: string;
        click_type: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get bizManagerOpenPanelStart(): EventsFilter<{
        view_type: string;
        panel_name: string;
        sub_view: string;
        contact_id: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
    }>;
    get bizManagerOpenPanelFinish(): EventsFilter<{
        view_type: string;
        panel_name: string;
        sub_view: string;
        contact_id: string;
        platform: string;
        hosting: string;
        loading_time_from_interactive: number;
        msid: GUID;
        initiator: string;
        view: string;
        loading_time: number;
    }>;
    get helpWidgetErrorSearchingItems(): EventsFilter<{
        query: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get transferSiteCancelTransferClick(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get dummyEventForSiteMembers(): EventsFilter<{
        source: string;
        view_type: string;
        panel_name: string;
        sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        initiator: string;
        view: string;
    }>;
    get transferSiteCancelTransferClickApprove(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get transferSiteCancelTransferAbort(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get transferSiteReceiverOpenCompleteTransferDialog(): EventsFilter<{
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get quotesNewQuoteClick(): EventsFilter<{
        original_quoteId: GUID;
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get bizManagerClickOnSetupSkipUndo(): EventsFilter<{
        done_steps: number;
        step_id: number;
        step: string;
        click_type: string;
        step_guid: GUID;
        view_type: string;
        skipped_steps: number;
        app_id: string;
        steps: number;
        platform: string;
        hosting: string;
        msid: GUID;
        module_id: string;
    }>;
    get bizManagerOpenPanelInteractive(): EventsFilter<{
        view_type: string;
        panel_name: string;
        sub_view: string;
        platform: string;
        hosting: string;
        msid: GUID;
        view: string;
        loading_time: number;
    }>;
    get dashboardAccountSettingsHoverOverSendConfirmationI(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get phoneVerificationHoverOnMotivation(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        platform: string;
    }>;
    get mobilePhoneNumberConfirmationPopUpClickOkForSendingSms(): EventsFilter<{
        uuid: GUID;
        hashed_phone: string;
        view_type: string;
        origin: string;
        mode: string;
        platform: string;
    }>;
    get mobilePhoneNumberConfirmationPopUpClickConfirmForSmsCode(): EventsFilter<{
        uuid: GUID;
        hashed_phone: string;
        view_type: string;
        code: string;
        mode: string;
        platform: string;
    }>;
    get phoneVerificationPhoneValidation(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get phoneVerificationCodeValidation(): EventsFilter<{
        uuid: GUID;
        view_type: string;
        validstatus: string;
        platform: string;
    }>;
    get mobilePhoneNumberConfirmationOpenPopUp(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get dashboardAccountSettingsClickLearnMoreInI(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get bizManagerNewBadgeShow(): EventsFilter<{
        name: string;
        sidebar_name: string;
        view_type: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get mobilePhoneNumberConfirmationClickOnEdit(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsClickOnManagePreferences(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get dashboardAccountSettingsClickSendConfirmation(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsDeactivateAccountClickOnLearnMore(): EventsFilter<{
        view_type: string;
        section: string;
        platform: string;
    }>;
    get twoFactorAuthenticationSetupEnableClick(): EventsFilter<{
        view_type: string;
        click_from: string;
        origin: string;
        platform: string;
    }>;
    get accountSettingsUpdatesConfirmEnterPassword(): EventsFilter<{
        view_type: string;
        is_valid: boolean;
        platform: string;
        action: string;
    }>;
    get twoFactorAuthenticationSetupSendCode(): EventsFilter<{
        view_type: string;
        phone_type: string;
        mode: string;
        platform: string;
        action: string;
        origin: string;
    }>;
    get twoFactorAuthenticationSetupConfirmCodeClick(): EventsFilter<{
        view_type: string;
        mode: string;
        is_valid: boolean;
        platform: string;
        origin: string;
    }>;
    get twoFactorAuthenticationSetupEditNumber(): EventsFilter<{
        view_type: string;
        click_from: string;
        platform: string;
    }>;
    get twoFactorAuthenticationSetupDisableAction(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get twoFactorAuthenticationSetupDisableClick(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsSetPasswordModalLoad(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsOnRequestToUnlockField(): EventsFilter<{
        view_type: string;
        click_from: string;
        platform: string;
        field_name: string;
    }>;
    get quotesFilterQuotes(): EventsFilter<{
        name: string;
        view_type: string;
        origin_device: string;
        platform: string;
        filter_type: string;
        msid: string;
        num_of_quotes: number;
    }>;
    get accountSettingsUpdatesConfirmPasswordModalLoad(): EventsFilter<{
        view_type: string;
        platform: string;
        action: string;
    }>;
    get exposureEventGoogleConnectSeo(): EventsFilter<{
        dealer_asset_id: string;
        msid: GUID;
    }>;
    get accountSettingsForgotPasswordClick(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsManagePrivacyPreferences(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsTwoFactorAuthenticationSetupSendCodeSuccess(): EventsFilter<{
        view_type: string;
        mode: string;
        platform: string;
        action: string;
        origin: string;
    }>;
    get accountSettingsTwoFactorAuthenticationSetupSendCodeFailed(): EventsFilter<{
        view_type: string;
        mode: string;
        platform: string;
        action: string;
        origin: string;
    }>;
    get dummyNameSrc5Evid7100(): EventsFilter<{}>;
    get mySitesClickOnSelectSite(): EventsFilter<{
        viewMode: string;
        referral_additional_info: string;
        isPublished: boolean;
        siteTypeName: string;
        position: number;
        isPremium: boolean;
        platform: string;
        msid: GUID;
        siteUrl: string;
        view: string;
    }>;
    get dashboardViewSite(): EventsFilter<{
        site_id: GUID;
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get quotesClickOnCopyLinkFromMoreActions(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        platform: string;
        msid: string;
    }>;
    get quotesErrorGenerateLinkFromMoreActions(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        platform: string;
        msid: string;
    }>;
    get quotesClickOnCreateLinkFromMoreActions(): EventsFilter<{
        view_type: string;
        invoiceId: GUID;
        platform: string;
        msid: string;
    }>;
    get dashboardClickOnUpgrade(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        hosting: string;
        msid: GUID;
    }>;
    get quotesSettingsChangeNumbering(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesHeaderPreview(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesOpenFirstCard(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get quotesDropdownOption(): EventsFilter<{
        option: string;
        view_type: string;
        text: string;
        platform: string;
        msid: string;
    }>;
    get sidebarModalOfFteToTheNewSidebarIsLoaded(): EventsFilter<{
        category_items_list: string;
    }>;
    get quotesLimit5KCsvDownload(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
    }>;
    get accountSettingsStep1ToDisablePartnerDashboard(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get quotesSearchQuotes(): EventsFilter<{
        view_type: string;
        text: string;
        num_of_results: number;
        origin_device: string;
        platform: string;
        msid: string;
        num_of_quotes: number;
    }>;
    get accountSettingsErrorWhenClickToDisablePartnerDashboard(): EventsFilter<{
        view_type: string;
        errorReason: string;
        platform: string;
    }>;
    get accountSettingsDisabledEnabledPartnerDashboard(): EventsFilter<{
        view_type: string;
        platform: string;
        action: string;
    }>;
    get crmHomeSendMessageToInbox(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeAddNewContactWidget(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeChooseContactFromWidget(): EventsFilter<{
        view_type: string;
        contactId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeSendMessageViaContactsWidget(): EventsFilter<{
        view_type: string;
        contactId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get quotesEditQuote(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get dummyNameSrc5Evid7500(): EventsFilter<{}>;
    get quotesPreviewQuote(): EventsFilter<{
        source: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get enableDisablePartnersDhasboard(): EventsFilter<{
        action: string;
    }>;
    get quotesCreateQuoteSaveDraftClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get deprecatedUpdateOrCreateLocation(): EventsFilter<{
        phoneFilled: boolean;
        desc: string;
        timezone: string;
        data: string;
        address_filled: boolean;
        activity_type: string;
        location_guid: GUID;
        loaction: string;
        status: boolean;
        currency: string;
        type: string;
        msid: GUID;
        checked_by_default: boolean;
        email_filled: boolean;
    }>;
    get deleteLocation(): EventsFilter<{
        location_guid: GUID;
        locationGuid: GUID;
        msid: GUID;
    }>;
    get setADefaultLocation(): EventsFilter<{
        locationGuid: GUID;
        oldLocationGuid: GUID;
        msid: GUID;
    }>;
    get updateOrCreateMultilocationSrc5Evid7703(): EventsFilter<{
        businessSchedule: string;
        phoneFilled: boolean;
        desc: string;
        emailFilled: boolean;
        timezone: string;
        data: string;
        statusText: string;
        loaction: string;
        activityType: string;
        locationGuid: GUID;
        status: boolean;
        currency: string;
        addressFilled: boolean;
        type: string;
        msid: GUID;
        isDefault: boolean;
    }>;
    get updateOrCreateMultilocationSrc5Evid7704(): EventsFilter<{
        businessSchedule: string;
        number: string;
        city: string;
        desc: string;
        name: string;
        latitude: string;
        email: string;
        timezone: string;
        statusText: string;
        formatted_address: string;
        country: string;
        longitude: string;
        loaction: string;
        revision: number;
        activityType: string;
        locationGuid: GUID;
        apt: string;
        fax: string;
        subdivision: string;
        hint: string;
        postal_code: string;
        type: string;
        msid: GUID;
        isDefault: boolean;
        phone: string;
    }>;
    get updateOrCreateMultilocation(): EventsFilter<{
        businessSchedule: string;
        city: string;
        desc: string;
        name: string;
        latitude: string;
        email: string;
        timezone: string;
        formattedAddress: string;
        statusText: string;
        country: string;
        streetName: string;
        longitude: string;
        postalCode: string;
        streetApt: string;
        revision: number;
        activityType: string;
        locationGuid: GUID;
        fax: string;
        subdivision: string;
        streetNumber: string;
        hint: string;
        locationType: string;
        msid: GUID;
        isDefault: boolean;
        phone: string;
        isInventoryLocation: boolean;
    }>;
    get quotesCreateQuoteSaveDraftComplete(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get quotesCreateQuoteSaveDraftFailed(): EventsFilter<{
        view_type: string;
        reason: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get automationsSecurityCheckForAmountOfEmailInGetNotifiedAction(): EventsFilter<{
        msid: GUID;
        emailCount: number;
    }>;
    get uouUnsubscribePageView(): EventsFilter<{
        visitor_id: GUID;
        view_type: string;
        notification_Id: GUID;
        platform: string;
        msid: GUID;
        device: string;
    }>;
    get uouUnsubscribeClick(): EventsFilter<{
        click_type: string;
        visitor_id: GUID;
        view_type: string;
        notification_Id: GUID;
        platform: string;
        msid: GUID;
        device: string;
    }>;
    get dashboardCreateNewSite(): EventsFilter<{
        source: string;
        view_type: string;
        sub_view: string;
        creation_type: string;
        origin: string;
        view_level: string;
        platform: string;
    }>;
    get sampleEventTest(): EventsFilter<{}>;
    get gdprUouSiteOwnerOpenPrivacyGdprTab(): EventsFilter<{
        msid: GUID;
    }>;
    get gdprUouSiteOwnerInitiateGdprRequest(): EventsFilter<{
        msid: GUID;
        origin: string;
    }>;
    get gdprUouSiteOwnerSelectRequestType(): EventsFilter<{
        request_type: string;
        origin: string;
        msid: GUID;
    }>;
    get gdprUouSiteOwnerInsertUouInformation(): EventsFilter<{
        hashed_phone: string;
        request_type: string;
        hashed_mail: string;
        msid: GUID;
    }>;
    get gdprUouSiteOwnerReConfirmUouInformation(): EventsFilter<{
        hashed_phone: string;
        request_type: string;
        hashed_mail: string;
        msid: GUID;
    }>;
    get gdprUouSiteOwnerUouRequestSubmissionSuccess(): EventsFilter<{
        hashed_phone: string;
        request_type: string;
        hashed_mail: string;
        request_id: GUID;
        gdpr_request_id: GUID;
        msid: GUID;
    }>;
    get gdprUouSiteOwnerUouRequestSubmissionFailed(): EventsFilter<{
        hashed_phone: string;
        request_type: string;
        hashed_mail: string;
        origin: string;
        error_reason: string;
        msid: GUID;
    }>;
    get gdprUouSiteOwnerReturnedToPreviousFormStep(): EventsFilter<{
        hashed_phone: string;
        from_step: string;
        request_type: string;
        hashed_mail: string;
        origin: string;
        msid: GUID;
    }>;
    get gdprUouSiteOwnerWishToLearnMore(): EventsFilter<{
        learn_more_type: string;
        request_type: string;
        origin: string;
        msid: GUID;
    }>;
    get dashboardSiteSelectorPopupShown(): EventsFilter<{
        name: string;
        view_type: string;
        siteTypeName: string;
        platform: string;
        msid: GUID;
    }>;
    get gdprUsersUserOpenedTheGdprForm(): EventsFilter<{
        request_type: string;
        hashed_mail: string;
    }>;
    get dummyNameSrc5Evid8100(): EventsFilter<{}>;
    get gdprUsersUserSubmitTheGdprForm(): EventsFilter<{
        is_file_loaded: boolean;
        site_contact_hashed_mail: string;
        hashed_phone: string;
        request_type: string;
        hashed_last_name: string;
        hashed_mail: string;
        is_site_has_contact_form: boolean;
        last_site_edit_date: DateTime;
        hashed_first_name: string;
        site_url: Url;
        account_creation_date: DateTime;
        is_premium: boolean;
    }>;
    get gdprUsersUserGdprFormSubmissionSuccess(): EventsFilter<{
        ticket_id: GUID;
        is_file_loaded: boolean;
        site_contact_hashed_mail: string;
        hashed_phone: string;
        request_type: string;
        hashed_last_name: string;
        hashed_mail: string;
        is_site_has_contact_form: boolean;
        last_site_edit_date: DateTime;
        hashed_first_name: string;
        site_url: Url;
        request_id: GUID;
        account_creation_date: DateTime;
        is_premium: boolean;
    }>;
    get gdprUsersUserGdprFormSubmissionFailed(): EventsFilter<{
        is_file_loaded: boolean;
        site_contact_hashed_mail: string;
        hashed_phone: string;
        request_type: string;
        hashed_last_name: string;
        hashed_mail: string;
        is_site_has_contact_form: boolean;
        last_site_edit_date: DateTime;
        error_reason: string;
        hashed_first_name: string;
        site_url: Url;
        account_creation_date: DateTime;
        is_premium: boolean;
    }>;
    get cookiesBannerCta(): EventsFilter<{
        url: Url;
        origin: string;
        action: string;
        esi: string;
    }>;
    get cookiesBannerSettingsWindowCta(): EventsFilter<{
        url: Url;
        toggle: boolean;
        action: string;
        esi: string;
    }>;
    get cookiesBannerPrivacyPolicyClicked(): EventsFilter<{
        url: Url;
        policy: string;
    }>;
    get cookiesBannerSettingPageCta(): EventsFilter<{
        url: Url;
        toggle: boolean;
        policy: string;
        action: string;
    }>;
    get cookiesBannerSettingPageOptOutConfirmation(): EventsFilter<{
        url: Url;
        policy: string;
        action: string;
    }>;
    get crmHomeViewContactViaContactsWidget(): EventsFilter<{
        view_type: string;
        contactId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get dashboardSiteSelectorPopupClose(): EventsFilter<{
        name: string;
        view_type: string;
        siteTypeName: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeSeeAllContactsViaContactsWidget(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeImportContactsViaContactsBanner(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeTasksWidgetAddNewTask(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeTasksWidgetSeeAllTasks(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dashboardSiteSelectorPopupSelectAction(): EventsFilter<{
        name: string;
        view_type: string;
        siteTypeName: string;
        platform: string;
        msid: GUID;
        action: string;
    }>;
    get quotesEmailQuotesPage(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        resend: boolean;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get sendFaqMessage(): EventsFilter<{
        visitorId: GUID;
        answer: boolean;
        msid: GUID;
    }>;
    get crmHomeWorkflowsWidgetGoToWorkflows(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get toastShown85(): EventsFilter<{
        name: string;
        hosting_platform: string;
        active_page_id: string;
        scope: string;
        trigger_entity_type: string;
        view_type: string;
        severity: string;
        type: string;
        platform: string;
        hosting_platform_context_id: string;
        hosting: string;
        timeout: number;
        msid: GUID;
        trigger_entity_id: string;
        toast_timeout: string;
        message: string;
        app_id: string;
    }>;
    get crmHomeWorkflowsWidgetUseTemplate(): EventsFilter<{
        view_type: string;
        template: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeWorkflowsWidgetStartFromScratch(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeIntegrationsCommunicationsViewAll(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get crmHomeIntegrationsCommunicationsConnect(): EventsFilter<{
        view_type: string;
        connectTab: string;
        platform: string;
        msid: GUID;
    }>;
    get toastClicked86(): EventsFilter<{
        name: string;
        hosting_platform: string;
        active_page_id: string;
        scope: string;
        trigger_entity_type: string;
        click_type: string;
        view_type: string;
        severity: string;
        type: string;
        platform: string;
        hosting_platform_context_id: string;
        hosting: string;
        timeout: number;
        msid: GUID;
        trigger_entity_id: string;
        toast_timeout: string;
    }>;
    get crmHomeIntegrationsMarketingViewAll(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get dummyNameSrc5Evid8600(): EventsFilter<{}>;
    get siteMembersSignupSettingsEditFieldTextSettings(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        setting_value: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderGetSubscribersFormManageSubscribersClick(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
        action: string;
    }>;
    get formBuilderGetSubscribersFormManageSubscribersActionsClick(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
        action: string;
    }>;
    get formBuilderCaptachaStatus(): EventsFilter<{
        visitor_id: GUID;
        authentication_status: string;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        msid: GUID;
    }>;
    get quotesEmailQuotePageCancelClick(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        resend: boolean;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderTooltipForAddFieldForbiddenWords(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
        field_name: string;
        entered_text: string;
    }>;
    get startLoading8702(): EventsFilter<{
        hosting_platform: string;
        hosting_platform_context_id: GUID;
    }>;
    get formBuilderManageChoicesUpdateDisplayName(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesAddAChoiceClick(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesEditChoice(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesDeleteChoice(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesUpdateChoiceName(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesSetAsDefaultChoice(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        choice_name: string;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesDuplicateChoiceClick(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        choice_name: string;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesDuplicateChoiceComplete(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        choice_name: string;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderManageChoicesReorderChoiceComplete(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        choice_name: string;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get quotesPrintQuote(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderMultiStepDragStep(): EventsFilter<{
        step_name: string;
        builderOrigin: string;
        from_step: number;
        visitor_id: GUID;
        total_number_of_steps: number;
        form_comp_id: string;
        vsi: GUID;
        to_step: number;
        msid: GUID;
    }>;
    get formBuilderMultiStepClickOnManageSteps(): EventsFilter<{
        builderOrigin: string;
        click_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderMultiStepEditStepActions(): EventsFilter<{
        step_name: string;
        step_no: number;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        action: string;
    }>;
    get formBuilderMultiStepAddNewStep(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderMultiStepAddNewField(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderBackofficeFormSubscriberUserActions(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
        action: string;
    }>;
    get formBuilderMultiStepClickOnAscendPlan(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get quotesDownloadPdfQuote(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderMultiStepBackNextButtonChangeText(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        button: string;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get finishLoading8900(): EventsFilter<{
        hosting_platform: string;
        view_type: string;
        screen_width: number;
        window_width: number;
        screen_height: number;
        window_height: number;
        platform: string;
        hosting_platform_context_id: string;
        loading_time: number;
    }>;
    get exposureEventForPaginationTest(): EventsFilter<{
        folders_number: number;
        is_pagination_user: boolean;
        view_type: string;
        platform: string;
    }>;
    get formBuilderMultiStepBackNextButtonFinishUpdateText(): EventsFilter<{
        name: string;
        builderOrigin: string;
        visitor_id: GUID;
        button: string;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get invoiceSettingsSelectTaxDetailsCustomFieldCheckbox(): EventsFilter<{
        showTaxAmount: boolean;
        showItemsSubtotalPerTax: boolean;
        view_type: string;
        showTaxColumn: boolean;
        checkbox: boolean;
        value2: string;
        platform: string;
        msid: GUID;
        value: string;
    }>;
    get invoiceSettingsClickOnLink(): EventsFilter<{
        view_type: string;
        modal_name: string;
        origin: string;
        platform: string;
        msid: string;
        value: string;
    }>;
    get formBuilderMultiStepUouClickOnBackNextSubmit(): EventsFilter<{
        step_name: string;
        step_no: number;
        builderOrigin: string;
        visitor_id: GUID;
        total_number_of_steps: number;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        msid: GUID;
        action: string;
    }>;
    get bookingAnywhereNoPermission(): EventsFilter<{
        view_type: string;
        buttonName: string;
        platform: string;
        msid: GUID;
    }>;
    get mySitesMainPageFinishLoading(): EventsFilter<{
        success: boolean;
        total_folders_count: number;
        view_mode: string;
        total_sites_count: number;
        num_displayed_folders: number;
        referral_info: string;
        origin: string;
        num_displayed_sites: number;
        is_pro: boolean;
        platform: string;
        page_url: Url;
        loading_time: number;
    }>;
    get addNoteTermClick(): EventsFilter<{
        source: string;
        view_type: string;
        appDefId: GUID;
        invoiceType: string;
        origin: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
    }>;
    get mySitesSiteLessLoaded(): EventsFilter<{
        success: boolean;
        referral_info: string;
        origin: string;
        platform: string;
        page_url: string;
        loading_time: number;
    }>;
    get wixInvoicesClickingOnGroupsDropDownInSettings(): EventsFilter<{
        view_type: string;
        platform: string;
        card: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderBackofficeFormDeleteKeepSubscribeItem(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        value: string;
    }>;
    get invoicesSettingsSaveButton(): EventsFilter<{
        invoiceNumber: string;
        showTaxAmount: boolean;
        hasLogo: boolean;
        documentName: string;
        showItemsSubtotalPerTax: boolean;
        customFields: string;
        invoiceEmail: string;
        view_type: string;
        showTaxColumn: boolean;
        card_name: string;
        origin: string;
        showTransactionDetails: boolean;
        platform: string;
        msid: GUID;
    }>;
    get manageFolderDropDownListShown(): EventsFilter<{
        sub_view: string;
        origin: string;
        cta: string;
        platform: string;
        permitted_items: string;
        itemsList: string;
    }>;
    get wixInvoicesLeavingSettingsWithoutSavingPopUp(): EventsFilter<{
        view_type: string;
        modal_name: string;
        fieldName: string;
        platform: string;
        msid: string;
    }>;
    get discardModalClick(): EventsFilter<{
        view_type: string;
        modal_name: string;
        platform: string;
        msid: GUID;
        value: string;
    }>;
    get wixInvoicesClickOnTabsToChoseProductFrom(): EventsFilter<{
        button_name: string;
        view_type: string;
        productSource: string;
        platform: string;
        msid: string;
    }>;
    get invoiceSettingsSaveButtonClick(): EventsFilter<{
        view_type: string;
        origin: string;
        platform: string;
        msid: GUID;
    }>;
    get wixInvoicesSavingItemDescription(): EventsFilter<{
        view_type: string;
        productSource: string;
        origin: string;
        platform: string;
        msid: string;
    }>;
    get gizaApiCallReceived(): EventsFilter<{
        hosting_platform: string;
        app_id: string;
        method_name: string;
        component_id: string;
        hosting_platform_context_id: string;
        tool: string;
    }>;
    get formBuilderMultiStepClickOnRestoreButtons(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        action: string;
    }>;
    get clickDoneToEditFilterView(): EventsFilter<{
        click_type: string;
        ds_origin: string;
        nesting_level: number;
        origin: string;
        view_level: string;
        is_premium: boolean;
        platform: string;
        msid: string;
        is_published: boolean;
    }>;
    get clickOnSaveView(): EventsFilter<{
        action_type: string;
        platform: string;
    }>;
    get mySitesEditCustomizeColumnView(): EventsFilter<{
        origin: string;
        platform: string;
    }>;
    get mySitesClickOnGoToDashboardLink(): EventsFilter<{
        site_class: string;
        site_owner_id: GUID;
        sub_view: string;
        nesting_level: number;
        origin: string;
        cta: string;
        is_premium: boolean;
        platform: string;
        msid: GUID;
        is_published: boolean;
    }>;
    get mySitesClickOnBackToMySitesFromAnEmptyFolder(): EventsFilter<{
        sub_view: string;
        origin: string;
        platform: string;
        folder_name: string;
    }>;
    get mySitesSiteListPageStartLoading(): EventsFilter<{
        referral_url: string;
        url: string;
        num_displayed_folders: number;
        sub_view: string;
        page_experience: string;
        origin: string;
        num_displayed_sites: number;
        view_level: string;
        platform: string;
    }>;
    get mySitesSiteListFolderNavigation(): EventsFilter<{
        prev_folder_id: string;
        referral_url: string;
        current_folder_name: string;
        url: string;
        num_displayed_folders: number;
        sub_view: string;
        origin: string;
        cta: string;
        num_displayed_sites: number;
        platform: string;
        prev_folder_name: string;
        current_folder_id: string;
    }>;
    get mySitesClickSiteItem(): EventsFilter<{
        view_mode: string;
        sections_list: string;
        site_class: string;
        site_owner_id: GUID;
        sub_view: string;
        origin: string;
        is_premium: boolean;
        platform: string;
        msid: GUID;
        is_published: boolean;
        action_description: string;
    }>;
    get mySitesClicksActionsInSidePanel(): EventsFilter<{
        site_class: string;
        site_owner_id: GUID;
        sub_view: string;
        origin: string;
        cta: string;
        view_level: string;
        is_premium: boolean;
        platform: string;
        msid: GUID;
        deep_link: Url;
        is_published: boolean;
    }>;
    get clickStartGuideOrCloseDoItWithMeTool(): EventsFilter<{
        view_type: string;
        origin: string;
        type: string;
        platform: string;
        msid: string;
    }>;
    get wixInvoicesChargeWithCreditCardClick(): EventsFilter<{
        view_type: string;
        origin: string;
        status: string;
        origin_device: string;
        invoiceSource: GUID;
        type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
        fully_paid: boolean;
    }>;
    get wixInvoicesPaymentMethodClick(): EventsFilter<{
        view_type: string;
        appDefId: GUID;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
        fully_paid: boolean;
    }>;
    get wixInvoicesToastIsShown(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        type: string;
        platform: string;
        timeout: number;
        msid: GUID;
    }>;
    get wixInvoicesRequestPaymentClickInAutomation(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get wixInvoicesChargeWithCreditCardClickInTheModalMoto(): EventsFilter<{
        view_type: string;
        is_new: boolean;
        origin: string;
        origin_device: string;
        invoiceSource: GUID;
        type: string;
        platform: string;
        msid: string;
        invoice_id: GUID;
        fully_paid: boolean;
    }>;
    get formBuilderSubmitButtonSettingsClickOnSetupPaymentForm(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        form_type: string;
        msid: GUID;
    }>;
    get wixInvoicesMotoCashierWidgetIsShown(): EventsFilter<{
        totalAmountLong: number;
        name: string;
        is_deposit: boolean;
        view_type: string;
        is_new: boolean;
        origin: string;
        currency: string;
        paidAmountLong: number;
        type: string;
        platform: string;
        msid: GUID;
        invoice_id: GUID;
        fully_paid: boolean;
    }>;
    get wixInvoicesMotoPaidModal(): EventsFilter<{
        is_deposit: boolean;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: GUID;
        invoice_id: GUID;
    }>;
    get mySitesRefreshAfterMoveToFolder(): EventsFilter<{
        time_to_refresh: number;
        start_time: DateTime;
        end_time: DateTime;
        experiment_from_site_list: string;
        platform: string;
        msid: string;
        experiment_from_modal: string;
    }>;
    get wixInvoicesAutomationDynamicValueClick(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
        action: string;
    }>;
    get mySitesErrorPage(): EventsFilter<{
        experiment_from_site_list: string;
        platform: string;
    }>;
    get wixInvoicesClickingOnNextMobile(): EventsFilter<{
        view_type: string;
        status: string;
        invoiceSource: string;
        platform: string;
        msid: GUID;
        invoice_id: GUID;
    }>;
    get wixInvoicesBannerToUpgradeToPremiumShown(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: GUID;
    }>;
    get wixInvoicesBannerToUpgradeToPremiumClick(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: GUID;
    }>;
    get wixInvoicesOpenShareLinkModal(): EventsFilter<{
        externalId: GUID;
        view_type: string;
        invoiceId: GUID;
        origin: string;
        status: string;
        appdefid: GUID;
        platform: string;
        msid: string;
    }>;
    get wixInvoicesBannerToConnectPaymentMethods(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: GUID;
    }>;
    get wixInvoicesBannerToConnectPaymentMethodClick(): EventsFilter<{
        name: string;
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: GUID;
    }>;
    get gizaFirstBiteIsShown(): EventsFilter<{
        hosting_platform: string;
        view_type: string;
        platform: string;
        time_to_first_byte: number;
        hosting_platform_context_id: string;
    }>;
    get gizaFirstInteractionInTheSessionIsAvailable(): EventsFilter<{
        hosting_platform: string;
        interactive_component: string;
        hosting_platform_context_id: string;
    }>;
    get wixInvoicesClickOnDynamicValueInAutomation(): EventsFilter<{
        view_type: string;
        origin: string;
        origin_device: string;
        platform: string;
        msid: string;
    }>;
    get priorityASuggestionCarouselInteraction(): EventsFilter<{
        totalPriortySeen: number;
        view_type: string;
        type: string;
        platform: string;
        msid: GUID;
    }>;
    get priorityAEssentialShown(): EventsFilter<{
        numOffer: number;
        view_type: string;
        isCarousel: boolean;
        platform: string;
        msid: GUID;
    }>;
    get clickOnCreateNewFolder(): EventsFilter<{
        source: string;
        sub_view: string;
        origin: string;
        view_level: string;
        platform: string;
    }>;
    get createNewSiteCreationMenuIsShown(): EventsFilter<{
        origin: string;
        items_list: string;
        platform: string;
    }>;
    get clickOnAddAtTheDynamicFieldModal(): EventsFilter<{
        format: string;
        actionKey: string;
        view_type: string;
        actionAppId: GUID;
        platform: string;
        msid: GUID;
        inputType: string;
        value: string;
    }>;
    get getBrandedAppAlertIsShownAutomationSendAPushNotification(): EventsFilter<{
        actionId: GUID;
        view_type: string;
        rule_id: GUID;
        triggerKey: string;
        actionAppId: GUID;
        platform: string;
        msid: GUID;
    }>;
    get quotesDeleteQuoteClick(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuildrUouSubmitFormClick(): EventsFilter<{
        form_name: string;
        appVersion: string;
        visitor_id: GUID;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        template: string;
        num_of_attachments: number;
        msid: GUID;
    }>;
    get sdkLoaded9000(): EventsFilter<{
        hosting_platform: string;
        sdk_version: string;
        app_id: string;
        component_id: string;
        hosting_platform_context_id: string;
    }>;
    get gizaPageStartLoading9001(): EventsFilter<{
        hosting_platform: string;
        referral_info: string;
        prev_page_id: string;
        screen_width: number;
        page_id: string;
        page_name: string;
        is_first: boolean;
        window_width: number;
        screen_height: number;
        app_id: string;
        route: string;
        window_height: number;
        visits_counter: number;
        is_internal_page: boolean;
        hosting_platform_context_id: string;
        internal_route: string;
        firstFromIframe: boolean;
        prevRoute: string;
        displayMode: string;
        prevDisplayMode: string;
        prevInternalRoute: string;
        prevIsInternalPage: boolean;
    }>;
    get gizaPageFinishLoading9002(): EventsFilter<{
        hosting_platform: string;
        referral_info: string;
        prev_page_id: string;
        screen_width: number;
        page_id: string;
        page_name: string;
        is_first: boolean;
        window_width: number;
        screen_height: number;
        app_id: string;
        route: string;
        is_first_9002: boolean;
        window_height: number;
        visits_counter: number;
        is_internal_page: boolean;
        hosting_platform_context_id: string;
        internal_route: string;
        loading_time_from_first_feedback: number;
        loading_time: number;
        firstFromIframe: boolean;
        prevRoute: string;
        displayMode: string;
        prevDisplayMode: string;
        prevInternalRoute: string;
        prevIsInternalPage: boolean;
    }>;
    get formBuildrUouSubmitFormSuccess(): EventsFilter<{
        isfp: boolean;
        form_name: string;
        appVersion: string;
        visitor_id: GUID;
        submissionId: GUID;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        template: string;
        num_of_attachments: number;
        btype: string;
        msid: GUID;
        isjp: boolean;
    }>;
    get mySitesEditTemplateButtonClick(): EventsFilter<{
        origin: string;
        platform: string;
        template_id: string;
    }>;
    get mySitesClickOnSeeAllTemplates(): EventsFilter<{
        origin: string;
        platform: string;
    }>;
    get createNewWorkspace(): EventsFilter<{
        num_workspaces: number;
        page_view: string;
        view_type: string;
        account_type: string;
        origin: string;
        platform: string;
    }>;
    get workspaceSelectorSelectWorkspace(): EventsFilter<{
        num_workspaces: number;
        page_view: string;
        clicked_workspace_index: number;
        view_type: string;
        account_type: string;
        clicked_workspace_id: GUID;
        clicked_workspace_role: string;
        platform: string;
    }>;
    get workspaceActionMenuDropDownListShown(): EventsFilter<{
        num_workspaces: number;
        page_view: string;
        view_type: string;
        account_type: string;
        platform: string;
    }>;
    get workspaceActionMenuItemClick(): EventsFilter<{
        location: string;
        num_workspaces: number;
        page_view: string;
        view_type: string;
        account_type: string;
        link: Url;
        platform: string;
    }>;
    get workspaceSelectorClickOnLearnMoreInTooltips(): EventsFilter<{
        page_view: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get workspaceSelectorWorkspaceSettingClick(): EventsFilter<{
        page_view: string;
        view_type: string;
        origin: string;
        platform: string;
    }>;
    get formBuildrUouSubmitFormError(): EventsFilter<{
        form_name: string;
        appVersion: string;
        visitor_id: GUID;
        reason: string;
        reason_body: string;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        template: string;
        num_of_attachments: number;
        msid: GUID;
    }>;
    get accountSettingsCloseYourWorkspacePageLoad(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get accountSettingsCloseYourWorkspaceCloseWorkspaceRequestSummited(): EventsFilter<{
        view_type: string;
        reason: string;
        platform: string;
        free_text: string;
    }>;
    get workspaceSettingsDeleteAccountWorkspace(): EventsFilter<{
        context: string;
        view_type: string;
        platform: string;
        workspace_id: GUID;
    }>;
    get workspaceSettingsChangesSaved(): EventsFilter<{
        view_type: string;
        changes: string;
        platform: string;
        workspace_id: GUID;
    }>;
    get wixInvoicesBannerWhenCreatingInvoiceOrder(): EventsFilter<{
        name: string;
        view_type: string;
        platform: string;
        msid: GUID;
    }>;
    get allPageLoadersAreDown9029(): EventsFilter<{
        hosting_platform: string;
        referral_info: string;
        prev_page_id: string;
        screen_width: number;
        page_id: string;
        page_name: string;
        is_first: boolean;
        window_width: number;
        screen_height: number;
        app_id: string;
        route: string;
        window_height: number;
        visits_counter: number;
        is_internal_page: boolean;
        hosting_platform_context_id: string;
        internal_route: string;
        loading_time: number;
        firstFromIframe: boolean;
        prevRoute: string;
        displayMode: string;
        prevDisplayMode: string;
        prevInternalRoute: string;
        prevIsInternalPage: boolean;
    }>;
    get formBuilderManageFieldsAddNewFieldCompleted(): EventsFilter<{
        plugin: string;
        builderOrigin: string;
        field_type: string;
        appVersion: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        field_group: string;
        msid: GUID;
        field_name: string;
    }>;
    get invoicesSettingsSelectPaymentsReceivedOption(): EventsFilter<{
        view_type: string;
        showTransactionDetails: boolean;
        platform: string;
        msid: GUID;
    }>;
    get mySitesDebuggingEvent(): EventsFilter<{
        trigger_point: string;
        referral_info: string;
        experiment_status: boolean;
        platform: string;
        page_url: string;
    }>;
    get searchInSitesDropdown(): EventsFilter<{
        page_view: string;
        view_type: string;
        search_term: string;
        num_sites: number;
        platform: string;
        msid: GUID;
        num_results: number;
    }>;
    get formBuildrUouSubmitFormSuccessSendingDataToFormBuilderServer(): EventsFilter<{
        form_name: string;
        visitor_id: GUID;
        form_url: string;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        template: string;
        num_of_attachments: number;
        msid: GUID;
    }>;
    get searchInSitesDropdownEndProcess(): EventsFilter<{
        page_view: string;
        view_type: string;
        search_term: string;
        end_type: string;
        num_sites: number;
        platform: string;
        msid: GUID;
        num_results: number;
    }>;
    get devModeOnEntryPoint(): EventsFilter<{
        entryPoint: string;
        view_type: string;
        status: boolean;
        platform: string;
        action: string;
    }>;
    get gizaClickOnCollapseExpandSidebar(): EventsFilter<{
        click_type: string;
        page_id: string;
        page_name: string;
        sidebar_state: string;
        items_list: string;
        app_id: string;
        hosting_platform_context_id: string;
        hosting: string;
        msid: GUID;
        TriggeredBy: string;
    }>;
    get formBuilderDesignPanel(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        panel_name: string;
        form_comp_id: string;
        vsi: GUID;
        control_name: string;
        esi: GUID;
        msid: GUID;
        value: string;
    }>;
    get formBuildrComponentLoadTime(): EventsFilter<{
        appVersion: string;
        visitor_id: GUID;
        panel_name: string;
        form_comp_id: string;
        vsi: GUID;
        loadingTime: number;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderDeleteForm(): EventsFilter<{
        builderOrigin: string;
        appVersion: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormCopyAttempt(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get quotesDeleteQuotePageOk(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderTemplatePickerOpened(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        msid: GUID;
    }>;
    get dummyNameSrc5Evid9100(): EventsFilter<{}>;
    get formBuilderTemplatePickerClickOnTemplate(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderTemplatePickerChooseTemplate(): EventsFilter<{
        builderOrigin: string;
        appVersion: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        source_name: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderManageFieldsPanelOpened(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderManageFieldsDeleteField(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderManageFieldsAddNewFieldDropDownOpened(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderManageFieldsAddNewField(): EventsFilter<{
        plugin: string;
        builderOrigin: string;
        field_type: string;
        appVersion: string;
        visitor_id: GUID;
        tabName: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        field_group: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderEditFieldPanelOpened(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderEditFieldUpdateValue(): EventsFilter<{
        plugin: string;
        name: string;
        toggle_state: boolean;
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderEditFieldUpdateMandatoryValue(): EventsFilter<{
        plugin: string;
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        is_required: boolean;
        vsi: GUID;
        origin: string;
        msid: GUID;
        field_name: string;
    }>;
    get quotesDeleteQuotePageCancel(): EventsFilter<{
        view_type: string;
        origin_device: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderEditFieldConnectFieldDropDownOpened(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        num_of_fields: number;
        msid: GUID;
        field_name: string;
    }>;
    get appInstallationInitiate(): EventsFilter<{
        appVersion: string;
        tenantType: string;
        appdefid: string;
        tenantId: string;
        installation_id: string;
    }>;
    get appInstallationCompleted(): EventsFilter<{
        installationDate: DateTime;
        appInstanceId: GUID;
        newStatus: string;
        appVersion: string;
        tenantType: string;
        appdefid: string;
        isEnabled: boolean;
        tenantId: string;
        installation_id: string;
    }>;
    get appsBulkInstallationInitiate(): EventsFilter<{
        appInstances: string;
        tenantType: string;
        tenantId: string;
        installation_id: string;
    }>;
    get appsBulkInstallationsCompleted(): EventsFilter<{
        appInstances: string;
        tenantType: string;
        tenantId: string;
        installation_id: string;
    }>;
    get formBuilderEditFieldConnectField(): EventsFilter<{
        plugin: string;
        builderOrigin: string;
        connected_field: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderFormSettingsPanelOpened(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsUpdateValue(): EventsFilter<{
        name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
        action_type: string;
    }>;
    get formBuilderFormLayoutOpenAndChange(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        layout: string;
        msid: GUID;
        action: string;
    }>;
    get formBuilderFormSettingsChangeDuration(): EventsFilter<{
        duration: number;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsMsgLink(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        origin: string;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsLinkSelection(): EventsFilter<{
        builderOrigin: string;
        sub_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        type: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsCreateSubmissionsTableRequest(): EventsFilter<{
        builderOrigin: string;
        appVersion: string;
        request_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsCreateSubmissionsTableSuccess(): EventsFilter<{
        builderOrigin: string;
        appVersion: string;
        request_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get quotesMarkAsAccepted(): EventsFilter<{
        instanceId: GUID;
        totalAmountLong: number;
        createOrder: boolean;
        uuid: GUID;
        paymentType: string;
        view_type: string;
        invoiceId: GUID;
        origin: string;
        currency: string;
        platform: string;
        msid: string;
    }>;
    get formBuilderBizMgrAddNewFormClick(): EventsFilter<{
        visitor_id: GUID;
        vsi: GUID;
        place: string;
        msid: GUID;
    }>;
    get formBuilderBizMgrViewFormSubmissionsClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        place: string;
        msid: GUID;
    }>;
    get formBuilderManageFieldsDuplicateField(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        field_group: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderRemoveSubmitButton(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderPremiumPanelOpened(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        current_ascend_plan: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderPremiumPanelClick(): EventsFilter<{
        visitor_id: GUID;
        current_ascend_plan: string;
        vsi: GUID;
        selection: string;
        origin: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderUserSaveAnEditorTemplateWithForm(): EventsFilter<{
        visitor_id: GUID;
        templateId: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormCopyAttemptFailed(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        failReason: string;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderSubmitButtonUploadFileClick(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPresetGlobalDesignFailed(): EventsFilter<{
        name: string;
        visitor_id: GUID;
        reason: string;
        form_comp_id: string;
        vsi: GUID;
        esi: GUID;
        msid: GUID;
    }>;
    get quotesCreateInvoiceFromQuotes(): EventsFilter<{
        instanceId: GUID;
        totalAmountLong: number;
        createOrder: boolean;
        uuid: GUID;
        depositType: string;
        paymentType: string;
        view_type: string;
        invoiceId: GUID;
        origin: string;
        invoiceTitle: string;
        invoiceSource: string;
        currency: string;
        platform: string;
        msid: string;
        discountPercentage: number;
    }>;
    get formBuilderManageFieldsClickOnFieldButtonLearnAllAboutThis(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        tabName: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        field_group: string;
        msid: GUID;
        field_name: string;
    }>;
    get biProfileDataForSiteDetailsActionsWidget(): EventsFilter<{
        installedApps: string;
        msid: GUID;
    }>;
    get formBuilderAdiEditFormClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderAdiEditFormCompleted(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        esi: GUID;
        msid: GUID;
    }>;
    get formBuilderAdiReorderFieldClick(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        esi: GUID;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderAdiReorderFieldComplete(): EventsFilter<{
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        esi: GUID;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderClickOnGfppOfConnectPanel(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        button_name: string;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        field_group: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderFormLayoutSpaceBetweenRows(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderFormLayoutSpaceBetweenColumns(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderFormLayoutTextAlignment(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderFormLayoutTitleAndPlaceholderPadding(): EventsFilter<{
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get quotesMarkAsAcceptedSrc5Evid95(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderFormLayoutSpaceBetweenFieldTitleAndInput(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderFormLayoutFieldTitlePadding(): EventsFilter<{
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        value: string;
    }>;
    get formBuilderGlobalLayoutShowFieldTitleToggle(): EventsFilter<{
        toggle_state: boolean;
        builderOrigin: string;
        field_type: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInnerTabsClick(): EventsFilter<{
        source: string;
        builderOrigin: string;
        tab_name: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSettingsTabsClick(): EventsFilter<{
        name: string;
        source: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsGoToAutomationsClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        application_name: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        referral: string;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSupportAboutWixFormsClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSupportWixSupportClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSupportSendYourFeedbackClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get quotesCreateInvoiceFromQuotesSrc5Evid96(): EventsFilter<{
        view_type: string;
        platform: string;
        msid: string;
        quoteId: GUID;
    }>;
    get formBuilderFormSettingsSupportAddAReviewClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsCreateAutomation(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        automation_type: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsInformationIconHoverClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        information_icon: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsPublishYourSitePopupPresented(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsPublishYourSitePopupSelection(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSubmitMessageChooseLinkClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        link_type: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsSubmitMessageRestoreSuccessMessage(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
        field_name: string;
    }>;
    get formBuilderFormSettingsSubmitMessageRestoreSubmitButton(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingGetStarted(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSettingLearnMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get removePhoneNumberRemoveClicked(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get formBuilderPaymentFormSetupIsDisplayed(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get unsubscriptionPageIsShown(): EventsFilter<{
        channel: string;
        hashed_phone: string;
        hashed_email: string;
        app_id: string;
        flow_id: string;
        msid: GUID;
    }>;
    get unsubscriptionPageClickOnUnsubscribeButton(): EventsFilter<{
        channel: string;
        hashed_phone: string;
        hashed_email: string;
        app_id: GUID;
        flow_id: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSetupGetStartedClickOnDemoSite(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSetupAddUpdateItem(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        itemPrice: number;
        form_comp_id: string;
        vsi: GUID;
        itemName: string;
        type: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSetupItemPriceChangeCurrency(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSetupConnectPaymentMethod(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSetupContinueToSetupFromBizmg(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSetupChangePaymentMethod(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSaveAndRefreshPopUpDisplayed(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormSaveAndRefreshPopUpUserSelection(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormViewPublishSitePopUpDisplayed(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        viewerName: string;
        msid: GUID;
    }>;
    get removePhoneNumberRemoveNumberClicked(): EventsFilter<{
        view_type: string;
        platform: string;
    }>;
    get formBuilderPaymentFormViewPublishSitePopUpUserSelection(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        viewerName: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormRemovePaymentPopUpDisplayed(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderPaymentFormRemovePaymentPopUpUserSelection(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormOpenChangeRemoveDisconnectPayment(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormClickOnNextInPaymentFormSetup(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        direction: string;
        form_comp_id: string;
        vsi: GUID;
        move_to_step: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormTooltipHover(): EventsFilter<{
        tooltip_name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        msid: GUID;
    }>;
    get formBuilderSubmissionSettingsPanelOpened(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderCategoryPickerInAddPanel(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        vsi: GUID;
        category: string;
        msid: GUID;
    }>;
    get formBuilderPaymentFormClickOnGoToSetup(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        category: string;
        msid: GUID;
    }>;
    get formBuilderTemplatePickerChooseTemplateStartToInstall(): EventsFilter<{
        builderOrigin: string;
        appVersion: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        source_name: string;
        template: string;
        msid: GUID;
    }>;
    get removePhoneNumberPhoneRemovalAsked(): EventsFilter<{
        hashed_phone: string;
        view_type: string;
        platform: string;
    }>;
    get formBuilderFormSettingsNotificationsHelpClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsUpdateValueClick(): EventsFilter<{
        name: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        selection: string;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListContactLabelsClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListContactLabelsUpdateValue(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsClick(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsUpdateValue(): EventsFilter<{
        field: string;
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        origin: string;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsSave(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderHoverOnUpgradeAscend(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        button_name: string;
        tabName: string;
        current_ascend_plan: string;
        vsi: GUID;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsCancel(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get formBuilderFormSettingsContactListChooseSavedFieldsLearnMore(): EventsFilter<{
        builderOrigin: string;
        visitor_id: GUID;
        form_comp_id: string;
        vsi: GUID;
        template: string;
        msid: GUID;
    }>;
    get devCenterWebhookSubscribed(): EventsFilter<{
        webhookSlug: string;
        appId: GUID;
    }>;
    get dcWebhookUpdated(): EventsFilter<{
        webhookSlug: string;
        action_name: string;
        appId: GUID;
    }>;
    get devCenterComponentTranslationAddingTranslatableComponent(): EventsFilter<{
        num_potential_keys_before: number;
        num_potential_keys_after: number;
        num_of_translated_keys_before: number;
        num_of_translated_keys_after: number;
        component_version: number;
        app_id: string;
        component_id: string;
        component_type: string;
    }>;
    get devCenterComponentTranslationAddLanguageToAnApp(): EventsFilter<{
        components_types: string;
        language: string;
        components_id: string;
        app_id: string;
        num_components: number;
    }>;
    get devCenterComponentTranslationAddTranslationToAComponent(): EventsFilter<{
        num_translated_keys_after: number;
        num_potential_keys: number;
        language: string;
        component_version: number;
        num_translations_added: number;
        app_id: string;
        component_id: string;
        num_translated_keys_before: number;
    }>;
    get dummyName(): EventsFilter<{}>;
    get dcAppVersionsVersionAdded(): EventsFilter<{
        num_permission: number;
        permission_data: string;
        components_data: string;
        version: string;
        is_private_app: boolean;
        num_dependencies: number;
        app_id: string;
        dependencies_data: string;
        num_components: number;
    }>;
    get dcAppVersionsStatusUpdated(): EventsFilter<{
        previous_version: string;
        version_new_status: string;
        version: string;
        version_prev_status: string;
        app_id: string;
    }>;
    get dummyNameSrc96Evid11900(): EventsFilter<{}>;
    get dummyNameSrc96Evid12200(): EventsFilter<{}>;
}
export declare const interceptor: (logDir?: string) => WixBiSchemaNodeTestkit;
export { EventsFilter, validateSingleEvent };
