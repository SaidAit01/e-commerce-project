/* tslint:disable */
/* eslint:disable */
import * as BiNodeTestkit from '@wix/wix-bi-node-testkit';
import { TestkitBase } from '@wix/wix-testkit-base';
import { setTimeout } from 'timers';
import { DateTime, GUID, Url } from '../types';
import { EventsFilter, validateSingleEvent } from './common';

export class WixBiSchemaNodeTestkit extends TestkitBase {
  private _biTestkit: any;
  private allFieldsAreMandatory = false;

  constructor(logDir?: string) {
    super();
    this._biTestkit = BiNodeTestkit.interceptor(logDir);
    this.validate = this.validate.bind(this);
  }

  doStart() {
    return this._biTestkit.start();
  }

  doStop() {
    return this._biTestkit.stop();
  }

  private validate(event: any) {
    return validateSingleEvent(event, this.allFieldsAreMandatory);
  }

  util = {
    /**
     * @description This function returns all sent events directly from 'biLoggerTestkit', without typechecking.
     */
    getRawEvents: () => {
      return this._biTestkit.events;
    },
    /**
     * This function will assert that all sent bi events have correct types in afterEach() phase of tests
     * @param timeout
     */
    assertAllEventsCorrectTypes: (timeout = 100) => {
      afterEach((done) => {
        setTimeout(() => {
          try
          {
            this._biTestkit.events.forEach(this.validate);
            done();
          } catch (e)
          {
            done(e);
          }
        }, timeout);
      });
    },
    /**
     * This function will mark all fields as mandatory in the next assertion
     * @param timeout
     */
    makeAllFieldsMandatory: (value: boolean) => {
      this.allFieldsAreMandatory = value;
    },
  };

  get wixPatternsSummaryBarIsShownSrc144Evid1() {
    return new EventsFilter<{
      artifactId: string;
      cairoVersion: string;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
      summaryBarList: string;
      featureStatus: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 144, 1, this.validate);
  }

  get wixPatternsPageInteractiveSrc144Evid1000() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      url: Url;
      cairoVersion: string;
      domain: string;
      componentName: string;
      componentType: string;
      resource: string;
      loadingTime: number;
      appId: string;
      product: string;
      route: string;
      hostingPlatformContextId: string;
      routerUsage: boolean;
    }>(this.util.getRawEvents, 144, 1000, this.validate);
  }

  get wixPatternsFullPageLoadCompletedSrc144Evid1001() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      url: Url;
      cairoVersion: string;
      domain: string;
      componentName: string;
      componentType: string;
      resource: string;
      loadingTime: number;
      appId: string;
      product: string;
      route: string;
      hostingPlatformContextId: string;
      routerUsage: boolean;
    }>(this.util.getRawEvents, 144, 1001, this.validate);
  }

  get pickerModalUsability() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      searchResultsCnt: number;
      domain: string;
      searchTerm: string;
      itemsLoadedCnt: number;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      maxItems: number;
      componentType: string;
      itemsCnt: number;
      pickSource: string;
      resource: string;
      loadingTime: number;
      itemId: string;
      type: string;
      appId: string;
      filteredListSize: number;
      action: string;
      product: string;
    }>(this.util.getRawEvents, 144, 103, this.validate);
  }

  get pickerPickModalCtaButtonClickOrImmediateCta() {
    return new EventsFilter<{
      artifactId: string;
      initialItems: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      maxItems: number;
      componentType: string;
      itemsCnt: number;
      resource: string;
      isImmediate: boolean;
      type: string;
      appId: string;
      filteredListSize: number;
      product: string;
    }>(this.util.getRawEvents, 144, 104, this.validate);
  }

  get pickerPickerOpenButton() {
    return new EventsFilter<{
      artifactId: string;
      initialItems: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      maxItems: number;
      componentType: string;
      resource: string;
      type: string;
      appId: string;
      filteredListSize: number;
      action: string;
      product: string;
    }>(this.util.getRawEvents, 144, 105, this.validate);
  }

  get newItemCreationStart() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      numSelectedItems: number;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      maxItems: number;
      currentSortOrder: string;
      componentType: string;
      numSortedColumns: number;
      currentFilters: string;
      numColumns: number;
      resource: string;
      visibleColumnsOrder: string;
      origin: string;
      numFiltersActive: number;
      type: string;
      appId: string;
      filteredListSize: number;
      product: string;
      consumerArtifactId: string;
    }>(this.util.getRawEvents, 144, 106, this.validate);
  }

  get newItemCreationEnd() {
    return new EventsFilter<{
      resultType: string;
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      numSelectedItems: number;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      maxItems: number;
      currentSortOrder: string;
      componentType: string;
      numSortedColumns: number;
      currentFilters: string;
      numColumns: number;
      resource: string;
      visibleColumnsOrder: string;
      origin: string;
      itemId: string;
      numFiltersActive: number;
      type: string;
      appId: string;
      filteredListSize: number;
      product: string;
      consumerArtifactId: string;
    }>(this.util.getRawEvents, 144, 107, this.validate);
  }

  get pikachuCategoriesDropdownButtonClicked() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
      providerName: string;
      providerId: string;
      url: string;
    }>(this.util.getRawEvents, 144, 108, this.validate);
  }

  get pikachuItemCategorySelected() {
    return new EventsFilter<{
      artifactId: string;
      itemCategory: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
      url: string;
    }>(this.util.getRawEvents, 144, 109, this.validate);
  }

  get loadStart() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      featuresAvailability: string;
      url: Url;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      currentFilters: string;
      resource: string;
      additionalFeaturesAvailability: string;
      currentView: string;
      appId: string;
      product: string;
      providerId: string;
      providerName: string;
      hostingPlatformContextId: string;
      theme: string;
      consumerId: string;
      consumerArtifactId: string;
      routerUsage: boolean;
      isCurrentViewCustomMade: boolean;
      artifactIdNew: string;
      currentViewType: string;
      componentIdNew: string;
      componentNameNew: string;
    }>(this.util.getRawEvents, 144, 110, this.validate);
  }

  get loadEnd() {
    return new EventsFilter<{
      componentStatus: string;
      artifactId: string;
      initialItems: number;
      csid: GUID;
      url: Url;
      cairoVersion: string;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      currentFilters: string;
      resource: string;
      loadingTime: number;
      currentView: string;
      appId: string;
      isInternalPage: boolean;
      filteredListSize: number;
      product: string;
      preLoadToolbarUsed: boolean;
      providerName: string;
      providerId: string;
      hostingPlatformContextId: string;
      theme: string;
      consumerId: string;
      consumerArtifactId: string;
      route: string;
      routerUsage: boolean;
      isCurrentViewCustomMade: boolean;
      artifactIdNew: string;
      currentViewType: string;
      componentNameNew: string;
      componentIdNew: string;
    }>(this.util.getRawEvents, 144, 111, this.validate);
  }

  get loadMore() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      currentFilters: string;
      resource: string;
      loadingTime: number;
      currentView: string;
      appId: string;
      filteredListSize: number;
      loadedItems: number;
      product: string;
    }>(this.util.getRawEvents, 144, 112, this.validate);
  }

  get componentDismissed() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      origin: string;
      appId: string;
      product: string;
      url: string;
    }>(this.util.getRawEvents, 144, 113, this.validate);
  }

  get cairoItemSelectionToggled() {
    return new EventsFilter<{
      artifactId: string;
      searchQuery: string;
      currentStep: string;
      initialItems: number;
      location: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      numItemsAfter: number;
      isSelectAll: boolean;
      isTPA: boolean;
      clickType: string;
      componentName: string;
      currentTab: string;
      maxItems: number;
      currentSortOrder: string;
      componentType: string;
      numLevels: number;
      currentFilters: string;
      resource: string;
      timeFromAction: number;
      itemId: string;
      itemIndex: number;
      currentView: string;
      numItemsBefore: number;
      currentLevel: number;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      product: string;
      url: string;
    }>(this.util.getRawEvents, 144, 114, this.validate);
  }

  get cairoCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      location: string;
      csid: GUID;
      moreActionsIndex: number;
      cairoVersion: string;
      domain: string;
      isSelectAll: boolean;
      isTPA: boolean;
      componentName: string;
      ctaIndex: number;
      maxItems: number;
      componentType: string;
      numLevels: number;
      numCtas: number;
      ctaName: string;
      localizedCtaName: string;
      resource: string;
      timeFromAction: number;
      itemId: string;
      itemIndex: number;
      currentLevel: number;
      numItems: number;
      appId: string;
      filteredListSize: number;
      product: string;
      hostingPlatformContextId: string;
      url: string;
    }>(this.util.getRawEvents, 144, 115, this.validate);
  }

  get cairoSearchResults() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      searchResultsCnt: number;
      domain: string;
      searchTerm: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      loadingTime: number;
      appId: string;
      product: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 144, 116, this.validate);
  }

  get cairoFilterToggled() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      filterValue: string;
      cairoVersion: string;
      domain: string;
      filterName: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      currentFilters: string;
      actionType: string;
      resource: string;
      origin: string;
      numFiltersActive: number;
      appId: string;
      filteredListSize: number;
      product: string;
      preLoadToolbarUsed: boolean;
      filterType: string;
      isCustomField: boolean;
    }>(this.util.getRawEvents, 144, 117, this.validate);
  }

  get cairoAllFiltersCleared() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      filterNames: string;
      componentType: string;
      resource: string;
      origin: string;
      numFiltersCleared: number;
      appId: string;
      filteredListSize: number;
      product: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 144, 118, this.validate);
  }

  get cairoFiltersPanelUsed() {
    return new EventsFilter<{
      artifactId: string;
      isPredefined: boolean;
      feature: string;
      csid: GUID;
      isOpened: boolean;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentSortOrder: string;
      componentType: string;
      numSortedColumns: number;
      numColumns: number;
      numFiltersInView: number;
      resource: string;
      visibleColumnsOrder: string;
      timeFromAction: number;
      origin: string;
      numFiltersActive: number;
      currentView: string;
      appId: string;
      product: string;
      hostingPlatformContextId: string;
      filterTypes: string;
    }>(this.util.getRawEvents, 144, 119, this.validate);
  }

  get cairoComponentSorted() {
    return new EventsFilter<{
      artifactId: string;
      prevSortOrder: string;
      numSortingColumns: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      origin: string;
      newSortedColumn: string;
      newSortingOrder: string;
      itemIndex: number;
      prevSortingOrder: string;
      newSortOrder: string;
      appId: string;
      isAddNewSort: boolean;
      prevSortedColumn: string;
      filteredListSize: number;
      prevNumSortingColumns: number;
      product: string;
    }>(this.util.getRawEvents, 144, 120, this.validate);
  }

  get cairoTabSelected() {
    return new EventsFilter<{
      artifactId: string;
      numTabs: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      prevTabIndex: number;
      componentName: string;
      componentType: string;
      hasAllTab: boolean;
      prevTabId: string;
      resource: string;
      newTabId: string;
      newTabIndex: number;
      appId: string;
      filteredListSize: number;
      product: string;
    }>(this.util.getRawEvents, 144, 121, this.validate);
  }

  get cairoViewSaved() {
    return new EventsFilter<{
      artifactId: string;
      viewId: string;
      isPredefined: boolean;
      searchQuery: string;
      csid: GUID;
      numColumnsInView: number;
      cairoVersion: string;
      domain: string;
      viewFilters: string;
      newViewName: string;
      isTPA: boolean;
      componentName: string;
      currentSortOrder: string;
      changedAttributes: string;
      componentType: string;
      numFiltersInView: number;
      resource: string;
      visibleColumnsOrder: string;
      origin: string;
      prevName: string;
      appId: string;
      isDefault: boolean;
      saveType: string;
      product: string;
    }>(this.util.getRawEvents, 144, 122, this.validate);
  }

  get cairoViewSelected() {
    return new EventsFilter<{
      artifactId: string;
      isPredefined: boolean;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      newViewName: string;
      prevViewName: string;
      isTPA: boolean;
      componentName: string;
      prevFilters: string;
      componentType: string;
      currentFilters: string;
      resource: string;
      isFromSearchView: boolean;
      numFiltersActive: number;
      currentView: string;
      appId: string;
      filteredListSize: number;
      isDefault: boolean;
      product: string;
    }>(this.util.getRawEvents, 144, 123, this.validate);
  }

  get wixPatternsViewSelectedLoadEndSrc144Evid1234() {
    return new EventsFilter<{
      artifactId: string;
      isPredefined: boolean;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      newViewName: string;
      prevViewName: string;
      isTPA: boolean;
      componentName: string;
      prevFilters: string;
      componentType: string;
      currentFilters: string;
      resource: string;
      isFromSearchView: boolean;
      numFiltersActive: number;
      currentView: string;
      appId: string;
      filteredListSize: number;
      isDefault: boolean;
      product: string;
      loadingTime: number;
    }>(this.util.getRawEvents, 144, 1234, this.validate);
  }

  get cairoViewDeleted() {
    return new EventsFilter<{
      artifactId: string;
      viewId: string;
      viewName: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      viewFilters: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numFiltersInView: number;
      resource: string;
      wasSelected: boolean;
      appId: string;
      isDefault: boolean;
      product: string;
    }>(this.util.getRawEvents, 144, 124, this.validate);
  }

  get cairoExportCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      exportId: string;
      csid: GUID;
      cairoVersion: string;
      numSelectedItems: number;
      domain: string;
      availableExportTypes: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      filteredListSize: number;
      defaultExportType: string;
      product: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 144, 125, this.validate);
  }

  get cairoItemToggledInExportModal() {
    return new EventsFilter<{
      artifactId: string;
      exportId: string;
      prevSelectedExportType: string;
      newSelectedExportType: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      availableExportTypes: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      filteredListSize: number;
      product: string;
    }>(this.util.getRawEvents, 144, 126, this.validate);
  }

  get cairoExportModalCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      exportId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      availableExportTypes: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      supportsTotal: boolean;
      selectedExportType: string;
      resource: string;
      origin: string;
      numItems: number;
      appId: string;
      action: string;
      product: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 144, 127, this.validate);
  }

  get cairoExportProcessStart() {
    return new EventsFilter<{
      artifactId: string;
      exportId: string;
      try: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      supportsTotal: boolean;
      selectedExportType: string;
      resource: string;
      numItems: number;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 128, this.validate);
  }

  get cairoUserAttemptsToCancelTheExport() {
    return new EventsFilter<{
      artifactId: string;
      duration: number;
      exportId: string;
      try: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      numItemsExported: number;
      componentType: string;
      supportsTotal: boolean;
      selectedExportType: string;
      resource: string;
      origin: string;
      numItems: number;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 129, this.validate);
  }

  get cairoCancelExportModalCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      duration: number;
      exportId: string;
      modalType: string;
      try: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      numItemsExported: number;
      componentType: string;
      ctaName: string;
      supportsTotal: boolean;
      selectedExportType: string;
      resource: string;
      numItems: number;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 130, this.validate);
  }

  get cairoExportProcessEnd() {
    return new EventsFilter<{
      artifactId: string;
      duration: number;
      exportId: string;
      try: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      result: string;
      isTPA: boolean;
      fileName: string;
      componentName: string;
      numItemsExported: number;
      componentType: string;
      supportsTotal: boolean;
      selectedExportType: string;
      resource: string;
      numItems: number;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 131, this.validate);
  }

  get cairoFileDownloadToastDisplayed() {
    return new EventsFilter<{
      artifactId: string;
      exportType: string;
      exportId: string;
      try: number;
      csid: GUID;
      cairoVersion: string;
      numSelectedItems: number;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 132, this.validate);
  }

  get cairoFileDownloadToastDismissed() {
    return new EventsFilter<{
      artifactId: string;
      exportType: string;
      duration: number;
      exportId: string;
      csid: GUID;
      cairoVersion: string;
      numSelectedItems: number;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      dismissMode: string;
      resource: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 133, this.validate);
  }

  get cairoFileDownloadToastDownloadButtonClicked() {
    return new EventsFilter<{
      artifactId: string;
      exportType: string;
      duration: number;
      exportId: string;
      csid: GUID;
      cairoVersion: string;
      numSelectedItems: number;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 134, this.validate);
  }

  get cairoExportFailedModalCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      exportId: string;
      try: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      numItemsExported: number;
      componentType: string;
      ctaName: string;
      supportsTotal: boolean;
      selectedExportType: string;
      resource: string;
      numItems: number;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 135, this.validate);
  }

  get cairoTableTopNotificationDisplayed() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      notificationText: string;
      appId: string;
      filteredListSize: number;
      product: string;
    }>(this.util.getRawEvents, 144, 136, this.validate);
  }

  get cairoTableTopNotificationDismissed() {
    return new EventsFilter<{
      artifactId: string;
      duration: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      dismissMode: string;
      resource: string;
      notificationText: string;
      appId: string;
      filteredListSize: number;
      product: string;
    }>(this.util.getRawEvents, 144, 137, this.validate);
  }

  get cairoDragItem() {
    return new EventsFilter<{
      artifactId: string;
      searchQuery: string;
      initialItems: number;
      csid: GUID;
      dragAndDropID: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      isFromHandle: boolean;
      componentType: string;
      currentFilters: string;
      resource: string;
      itemId: string;
      itemIndex: number;
      currentView: string;
      numItemsBefore: number;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      product: string;
      itemLevel: number;
      hierarchyPathIndex: string;
    }>(this.util.getRawEvents, 144, 138, this.validate);
  }

  get cairoDragItemEndDrop() {
    return new EventsFilter<{
      artifactId: string;
      duration: number;
      searchQuery: string;
      initialItems: number;
      csid: GUID;
      dragAndDropID: GUID;
      itemIndexBefore: number;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      isFromHandle: boolean;
      componentType: string;
      itemIndexAfter: number;
      currentFilters: string;
      resource: string;
      itemId: string;
      endType: string;
      currentView: string;
      numItemsBefore: number;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      product: string;
      itemLevelBefore: number;
      itemLevelAfter: number;
      hierarchyPathIndexBefore: string;
      hierarchyPathIndexAfter: string;
    }>(this.util.getRawEvents, 144, 139, this.validate);
  }

  get cairoDragActionUnsuccessfulUpdateInServer() {
    return new EventsFilter<{
      artifactId: string;
      searchQuery: string;
      csid: GUID;
      dragAndDropID: GUID;
      itemIndexBefore: number;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      numOfWaitingUpdates: number;
      componentName: string;
      componentType: string;
      itemIndexAfter: number;
      currentFilters: string;
      errorType: string;
      numItemsBeforeFailed: number;
      resource: string;
      filtersApplied: string;
      timeFromEndDrag: number;
      viewShown: string;
      itemId: string;
      filteredListSizeShown: number;
      numItemsBefore: number;
      appId: string;
      filteredListSize: number;
      sortOrderApplied: string;
      tabShown: string;
      wasFromHandle: boolean;
      product: string;
    }>(this.util.getRawEvents, 144, 140, this.validate);
  }

  get cairoTryAgainClicked() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      numOfWaitingUpdates: number;
      componentName: string;
      componentType: string;
      loaction: string;
      resource: string;
      actionName: string;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      product: string;
      url: string;
    }>(this.util.getRawEvents, 144, 141, this.validate);
  }

  get cairoManageViewClicked() {
    return new EventsFilter<{
      artifactId: string;
      isPredefined: boolean;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numFiltersInView: number;
      resource: string;
      currentView: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 142, this.validate);
  }

  get cairoManageViewActionSelected() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numActions: number;
      resource: string;
      actionIndex: number;
      actionName: string;
      currentView: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 143, this.validate);
  }

  get cairoUndoClicked() {
    return new EventsFilter<{
      artifactId: string;
      viewId: string;
      viewNameApplied: string;
      viewName: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      changedAttributes: string;
      componentType: string;
      currentFilters: string;
      resource: string;
      actionName: string;
      filteredListSizeShown: number;
      currentView: string;
      appId: string;
      filteredListSize: number;
      sortOrderApplied: string;
      product: string;
    }>(this.util.getRawEvents, 144, 144, this.validate);
  }

  get cairoViewsUnsuccessfulUpdateInServer() {
    return new EventsFilter<{
      artifactId: string;
      viewId: string;
      searchQuery: string;
      csid: GUID;
      timeFromEndAction: number;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      numOfWaitingUpdates: number;
      componentName: string;
      currentTab: string;
      componentType: string;
      currentFilters: string;
      errorType: string;
      resource: string;
      filtersApplied: string;
      actionName: string;
      filteredListSizeShown: number;
      currentView: string;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      product: string;
    }>(this.util.getRawEvents, 144, 145, this.validate);
  }

  get cairoSortPanelUsed() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      isOpened: boolean;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentSortOrder: string;
      componentType: string;
      numSortedColumns: number;
      resource: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 146, this.validate);
  }

  get cairoReorderingSortColumns() {
    return new EventsFilter<{
      artifactId: string;
      prevSortOrder: string;
      numSortingColumns: number;
      csid: GUID;
      columnIndexBefore: number;
      cairoVersion: string;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      timeFromAction: number;
      columnIndexAfter: number;
      newSortOrder: string;
      appId: string;
      filteredListSize: number;
      sortingColumn: string;
      product: string;
    }>(this.util.getRawEvents, 144, 147, this.validate);
  }

  get cairoSortUnsuccessfulUpdateInServer() {
    return new EventsFilter<{
      artifactId: string;
      searchQuery: string;
      csid: GUID;
      timeFromEndAction: number;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      numOfWaitingUpdates: number;
      componentName: string;
      currentTab: string;
      componentType: string;
      currentFilters: string;
      errorType: string;
      resource: string;
      filtersApplied: string;
      visibleColumnsOrder: string;
      origin: string;
      viewShown: string;
      actionName: string;
      filteredListSizeShown: number;
      currentView: string;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      sortOrderApplied: string;
      tabShown: string;
      sortingColumn: string;
      product: string;
    }>(this.util.getRawEvents, 144, 148, this.validate);
  }

  get cairoApiRequestDataLoadEnd() {
    return new EventsFilter<{
      artifactId: string;
      duration: number;
      initialItems: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      currentFilters: string;
      errorType: string;
      resource: string;
      pageType: string;
      route: string;
      currentView: string;
      appId: string;
      filteredListSize: number;
      product: string;
      url: string;
    }>(this.util.getRawEvents, 144, 149, this.validate);
  }

  get cairoPageCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      location: string;
      csid: GUID;
      isValid: boolean;
      moreActionsIndex: number;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      ctaType: string;
      section: string;
      componentType: string;
      numCtas: number;
      ctaName: string;
      resource: string;
      pageType: string;
      appId: string;
      product: string;
      url: string;
      origin: string;
    }>(this.util.getRawEvents, 144, 150, this.validate);
  }

  get cairoSearchViewInViews() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      searchResultsCnt: number;
      domain: string;
      searchTerm: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numCategoriesInResults: number;
      numViews: number;
      resource: string;
      endType: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 151, this.validate);
  }

  get cairoPageBackOrBreadcrumbClicked() {
    return new EventsFilter<{
      artifactId: string;
      destination_page_type: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      section: string;
      componentType: string;
      resource: string;
      buttonName: string;
      pageType: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 152, this.validate);
  }

  get cairoSectionCtaClicked() {
    return new EventsFilter<{
      loaction: string;
      artifactId: string;
      sectionType: string;
      location: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      ctaType: string;
      componentType: string;
      ctaName: string;
      localizedCtaName: string;
      resource: string;
      ctaId: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 153, this.validate);
  }

  get cairoTpaSCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      location: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      tpaComponentId: string;
      isTPA: boolean;
      componentName: string;
      ctaIndex: number;
      componentType: string;
      numCtas: number;
      ctaName: string;
      resource: string;
      appId: GUID;
      product: string;
    }>(this.util.getRawEvents, 144, 154, this.validate);
  }

  get cairoDataExAddCustomField() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numColumns: number;
      resource: string;
      visibleColumnsOrder: string;
      origin: string;
      appId: string;
      product: string;
      customOrigin: string;
    }>(this.util.getRawEvents, 144, 155, this.validate);
  }

  get cairoDataExCustomFieldEndProcess() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      changedFields: string;
      cairoVersion: string;
      domain: string;
      permissions: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      key: string;
      numAdded: number;
      resource: string;
      fieldName: string;
      origin: string;
      numDropdownOptions: number;
      actionName: string;
      endType: string;
      fieldType: string;
      appId: string;
      currentDropdownOptions: string;
      product: string;
      customOrigin: string;
    }>(this.util.getRawEvents, 144, 156, this.validate);
  }

  get cairoDataExCustomFieldAdvancesSettings() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      origin: string;
      actionName: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 157, this.validate);
  }

  get cairoLearnMore() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      origin: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 158, this.validate);
  }

  get cairoApplyButtonClicked() {
    return new EventsFilter<{
      artifactId: string;
      changedLevels: string;
      feature: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      listSize: number;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      numOfActions: number;
      origin: string;
      numOptionalFields: number;
      numActiveFields: number;
      appId: string;
      filteredListSize: number;
      product: string;
      currentStatus: string;
    }>(this.util.getRawEvents, 144, 159, this.validate);
  }

  get cairoChangesBeforeApply() {
    return new EventsFilter<{
      artifactId: string;
      isClearButton: boolean;
      feature: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      fieldValue: string;
      resource: string;
      fieldName: string;
      numActiveFields: number;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 160, this.validate);
  }

  get cairoDiscardChangesBeforeApply() {
    return new EventsFilter<{
      artifactId: string;
      feature: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      numOfActions: number;
      origin: string;
      numOptionalFields: number;
      numActiveFields: number;
      appId: string;
      product: string;
      currentStatus: string;
    }>(this.util.getRawEvents, 144, 161, this.validate);
  }

  get cairoModalCtaClicked() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      ctaName: string;
      localizedCtaName: string;
      resource: string;
      appId: string;
      modalName: string;
      product: string;
    }>(this.util.getRawEvents, 144, 162, this.validate);
  }

  get cairoDataExtensionUnsuccessfulUpdateInServer() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      permissions: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      key: string;
      errorType: string;
      resource: string;
      fieldName: string;
      origin: string;
      actionName: string;
      fieldType: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 163, this.validate);
  }

  get cairoErrorInLoadingAComponent() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      featuresAvailability: string;
      url: Url;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      currentFilters: string;
      errorType: string;
      resource: string;
      currentView: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 164, this.validate);
  }

  get cairoNestedTableCollapseAndExpand() {
    return new EventsFilter<{
      artifactId: string;
      searchQuery: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isSelectAll: boolean;
      isTPA: boolean;
      clickType: string;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      numLevels: number;
      countItems: number;
      currentFilters: string;
      resource: string;
      itemId: string;
      itemIndex: number;
      currentView: string;
      currentLevel: number;
      appId: string;
      filteredListSize: number;
      isFromSearch: boolean;
      product: string;
    }>(this.util.getRawEvents, 144, 165, this.validate);
  }

  get cairoTagsModalStartLoad() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numTags: number;
      resource: string;
      origin: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 166, this.validate);
  }

  get cairoTagsModalEndProcess() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numTags: number;
      resource: string;
      origin: string;
      endType: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 167, this.validate);
  }

  get cairoTagsAddDeleteTag() {
    return new EventsFilter<{
      artifactId: string;
      tagName: string;
      previousName: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numTags: number;
      resource: string;
      origin: string;
      actionName: string;
      appId: string;
      isFromSearch: boolean;
      product: string;
      tagSubOrigin: string;
    }>(this.util.getRawEvents, 144, 168, this.validate);
  }

  get cairoTagsUnsuccessfulUpdateInServer() {
    return new EventsFilter<{
      artifactId: string;
      tagName: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      errorType: string;
      numTags: number;
      resource: string;
      origin: string;
      actionName: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 169, this.validate);
  }

  get cairoSearchForTags() {
    return new EventsFilter<{
      artifactId: string;
      location: string;
      csid: GUID;
      cairoVersion: string;
      searchResultsCnt: number;
      domain: string;
      searchTerm: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      endType: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 170, this.validate);
  }

  get cairoTagsWidgetLoaded() {
    return new EventsFilter<{
      artifactId: string;
      numTagsAssigned: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numTags: number;
      resource: string;
      itemId: string;
      appId: string;
      product: string;
      theme: string;
    }>(this.util.getRawEvents, 144, 171, this.validate);
  }

  get cairoTagsWidgetClickOnCta() {
    return new EventsFilter<{
      artifactId: string;
      numTagsAssigned: number;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numTags: number;
      resource: string;
      actionName: string;
      itemId: string;
      appId: string;
      product: string;
      theme: string;
    }>(this.util.getRawEvents, 144, 172, this.validate);
  }

  get cairoTagsAssignTag() {
    return new EventsFilter<{
      artifactId: string;
      numTagsAssigned: number;
      tagName: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numTags: number;
      resource: string;
      origin: string;
      actionName: string;
      itemId: string;
      numItems: number;
      appId: string;
      isFromSearch: boolean;
      product: string;
      theme: string;
    }>(this.util.getRawEvents, 144, 173, this.validate);
  }

  get cairoPageDiscardChangesBeforeSave() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      numOfActions: number;
      origin: string;
      numOfFields: number;
      pageType: string;
      appId: string;
      product: string;
      url: string;
    }>(this.util.getRawEvents, 144, 174, this.validate);
  }

  get cairoAssignTagsToEntities() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      assignedTags: string;
      componentType: string;
      unAssignedTags: string;
      resource: string;
      origin: string;
      actionName: string;
      itemIds: string;
      numItems: number;
      appId: string;
      isFromSearch: boolean;
      product: string;
    }>(this.util.getRawEvents, 144, 175, this.validate);
  }

  get cairoReloadErrorState() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      featuresAvailability: string;
      url: Url;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      currentFilters: string;
      errorType: string;
      resource: string;
      cta: string;
      currentView: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 176, this.validate);
  }

  get cairoCustomizeColumnsInSidePanel() {
    return new EventsFilter<{
      artifactId: string;
      isPredefined: boolean;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      numSortedColumns: number;
      numColumns: number;
      numFiltersInView: number;
      resource: string;
      visibleColumnsOrder: string;
      actionName: string;
      numFiltersActive: number;
      currentView: string;
      appId: string;
      product: string;
    }>(this.util.getRawEvents, 144, 177, this.validate);
  }

  get wixPatternsNestedTableCollapseAndExpandAllSrc144Evid178() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      clickType: string;
      componentName: string;
      currentTab: string;
      currentSortOrder: string;
      componentType: string;
      numLevels: number;
      currentFilters: string;
      resource: string;
      appId: string;
      filteredListSize: number;
      product: string;
    }>(this.util.getRawEvents, 144, 178, this.validate);
  }

  get wixPatternsSectionHeaderPrimaryActionClicked() {
    return new EventsFilter<{
      artifactId: string;
      cairoVersion: string;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
      summaryBarList: string;
      featureStatus: string;
      cta: string;
      sectionId: string;
    }>(this.util.getRawEvents, 144, 2, this.validate);
  }

  get wixPatternsAppWasInstalledSrc144Evid200() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      pageType: string;
      appId: string;
      product: string;
      appName: string;
      url: string;
    }>(this.util.getRawEvents, 144, 200, this.validate);
  }

  get wixPatternsItemCreatedWithAiSrc144Evid3() {
    return new EventsFilter<{
      artifactId: string;
      url: Url;
      cairoVersion: string;
      domain: string;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
      itemName: string;
      itemId: string;
      hostingPlatformContextId: string;
      csid: GUID;
    }>(this.util.getRawEvents, 144, 3, this.validate);
  }

  get wixPatternsClickOnViewDropdownSrc144Evid4() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      resource: string;
      appId: string;
      product: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 144, 4, this.validate);
  }

  get wixPatternsMappingPagesSrc144Evid5() {
    return new EventsFilter<{
      artifactId: string;
      componentName: string;
      componentType: string;
      appId: string;
      components: string;
      pageType: string;
      componentId: string;
      isSinglePage: boolean;
    }>(this.util.getRawEvents, 144, 5, this.validate);
  }

  get wixPatternsSelectAProviderSrc144Evid6() {
    return new EventsFilter<{
      artifactId: string;
      csid: GUID;
      cairoVersion: string;
      domain: string;
      isTPA: boolean;
      componentName: string;
      componentType: string;
      providerName: string;
      resource: string;
      appId: string;
      product: string;
      providerId: string;
      origin: string;
      customOrigin: string;
      url: string;
    }>(this.util.getRawEvents, 144, 6, this.validate);
  }

  get httpClientErrorMappingSrc176Evid100() {
    return new EventsFilter<{
      session_id: string;
      is_override_error: string;
      translated_message: string;
      error_opt_out: boolean;
    }>(this.util.getRawEvents, 176, 100, this.validate);
  }

  get getResolvedErrorSrc176Evid101() {
    return new EventsFilter<{
      session_id: string;
      isEn: boolean;
      mapped_error_not_available: string;
      translated_message: string;
      action_text: string;
      common_errors_load_failed: string;
      is_consumer_resolved_error: boolean;
    }>(this.util.getRawEvents, 176, 101, this.validate);
  }

  get showErrorSrc176Evid102() {
    return new EventsFilter<{
      session_id: string;
      isEn: boolean;
      displayed_message: string;
      displayed_action: string;
      action_was_provided: string;
    }>(this.util.getRawEvents, 176, 102, this.validate);
  }

  get retryErrorSrc176Evid103() {
    return new EventsFilter<{ session_id: string; }>(this.util.getRawEvents, 176, 103, this.validate);
  }

  get httpClientErrorSrc176Evid404() {
    return new EventsFilter<{
      request_id: string;
      panorama_guid: string;
      artifact_id: string;
      hosting_platform: string;
      app_id: string;
      error_code: number;
      is_override_error: string;
      is_override_error_state_function: string;
      error_json: string;
      artifactVersion: string;
      translated_message: string;
      method: string;
      error_message: string;
      exception_message: string;
      client_error_code: string;
      error_type: string;
      is_consumer_resolved_error: boolean;
      full_artifact_id: string;
      url: string;
      serverUrl: string;
      pageUrl: string;
      hostingEnvironment: string;
      hasInternetConnection: boolean;
      session_id: string;
      entity_fqdn: string;
      method_fqn: string;
      server_artifactid: string;
    }>(this.util.getRawEvents, 176, 404, this.validate);
  }

  get pingMarketingConsentUnsubscribeClickSrc19Evid10001() {
    return new EventsFilter<{
      msid: string;
      appDefId: string;
      hashed_email: string;
      metadata: string;
    }>(this.util.getRawEvents, 19, 10001, this.validate);
  }

  get unsubscribeEmailPageView() {
    return new EventsFilter<{
      date_created: DateTime;
      _artificial_ts: DateTime;
      uuid: string;
      topic_id: string;
      contact_id: string;
    }>(this.util.getRawEvents, 19, 1006, this.validate);
  }

  get unsubscribeEmailPageClick() {
    return new EventsFilter<{
      date_created: DateTime;
      _artificial_ts: DateTime;
      uuid: string;
      topic_id: string;
      cta: string;
      contact_id: string;
    }>(this.util.getRawEvents, 19, 1007, this.validate);
  }

  get unsubscribeEmailPersonalizePreferencesClick() {
    return new EventsFilter<{
      date_created: DateTime;
      _artificial_ts: DateTime;
      prev_value: string;
      topic_id: string;
      new_value: string;
      contact_id: string;
    }>(this.util.getRawEvents, 19, 1008, this.validate);
  }

  get pushNotificationNotificationSentToAssure() {
    return new EventsFilter<{
      app_id: string;
      azureMessageId: string;
      messagePlatform: string;
      isMuted: boolean;
      mobileTenant: string;
      activityType: string;
      messageId: GUID;
      correlationId: string;
      appId: string;
    }>(this.util.getRawEvents, 19, 1121, this.validate);
  }

  get pushNotificationNotificationSentToDevice() {
    return new EventsFilter<{
      app_id: string;
      platform: string;
      azureMessageId: string;
      messagePlatform: string;
      state: string;
      isMuted: boolean;
      completedCount: number;
      errorCount: number;
      mobileTenant: string;
      activityType: string;
      messageId: GUID;
      appId: string;
      dMessageId: GUID;
    }>(this.util.getRawEvents, 19, 1122, this.validate);
  }

  get homeNotificationCreatedNew() {
    return new EventsFilter<{
      channel: string;
      is_incognito: boolean;
      is_muted: boolean;
      correlation_id: string;
      initiator_type: string;
      notification_id: string;
      initiator_id: string;
      notification_urgency: string;
      app_id: string;
      topic: string;
      contact_id: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1125, this.validate);
  }

  get notificationsResolveAlertNotificationSrc19Evid1128() {
    return new EventsFilter<{
      resolve_type: string;
      notification_id: string;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1128, this.validate);
  }

  get pingNotificationCreationRequest() {
    return new EventsFilter<{
      template_component_id: string;
      channel: string;
      template_name: string;
      is_incognito: boolean;
      correlation_id: string;
      app_version: string;
      initiator_type: string;
      notification_id: string;
      initiator_id: string;
      setting_group: string;
      app_id: string;
      topic: string;
      contact_id: string;
      ping_template_id: string;
      template_description: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1129, this.validate);
  }

  get pingNotificationSend() {
    return new EventsFilter<{
      channel: string;
      provider: string;
      subaccount_id: string;
      correlation_id: string;
      app_version: string;
      notification_id: string;
      token: string;
      app_id: string;
      target: string;
      contact_id: string;
      os_category: string;
      groupNotificationId: string;
    }>(this.util.getRawEvents, 19, 1130, this.validate);
  }

  get pingNotificationFiltered() {
    return new EventsFilter<{
      channel: string;
      correlation_id: string;
      initiator_type: string;
      reason: string;
      notification_id: string;
      isFilter: boolean;
      initiator_id: string;
      token: string;
      app_id: string;
      topic: string;
      contact_id: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1133, this.validate);
  }

  get androidNotificationReceivedSrc19Evid1134() {
    return new EventsFilter<{
      correlation_id: string;
      audience_id: string;
      initiator_type: string;
      initiator_id: string;
      topic: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1134, this.validate);
  }

  get androidNotificationReceived() {
    return new EventsFilter<{
      pushApproved: boolean;
      is_muted: boolean;
      is_displayed: boolean;
      payload: string;
      correlation_id: string;
      reason: string;
      notification_id: string;
    }>(this.util.getRawEvents, 19, 1135, this.validate);
  }

  get pingReviewSendingList() {
    return new EventsFilter<{
      is_multilingual: boolean;
      correlation_id: string;
      audience_id: string;
      result: string;
      initiator_type: string;
      reason: string;
      initiator_id: string;
      language: string;
      topic: string;
      contact_id: string;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1136, this.validate);
  }

  get pingNotificationFilteredBeforeCreatedStage() {
    return new EventsFilter<{
      recipient_uuid: GUID;
      channel: string;
      correlation_id: string;
      initiator_type: string;
      reason: string;
      notification_id: string;
      initiator_id: string;
      token: string;
      recipient_contact_id: string;
      app_id: string;
      topic: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 19, 1137, this.validate);
  }

  get dummyNameSrc19Evid1256700() {
    return new EventsFilter<{}>(this.util.getRawEvents, 19, 1256700, this.validate);
  }

  get mobileAppSettingsChangeStatusOfNotificationCategoryInOsNotificationsSettings() {
    return new EventsFilter<{
      uuid: string;
      newStatus: string;
      pushPermissionDetailed: string;
      mobileApp: string;
      category: string;
      contact_id: string;
    }>(this.util.getRawEvents, 19, 1333, this.validate);
  }

  get contactIsUnsubscribedFromEmailsSms() {
    return new EventsFilter<{
      channel: string;
      hashed_phone: string;
      hashed_email: string;
      app_id: string;
      flow_id: string;
      msid: string;
    }>(this.util.getRawEvents, 19, 20000, this.validate);
  }

  get smsStatusDeliveredToPingByTwilio() {
    return new EventsFilter<{
      recipient_uuid: GUID;
      segments_number: number;
      subaccount_id: string;
      initiator_type: string;
      notification_id: string;
      initiator_id: string;
      cost: number;
      error_msg: string;
      app_id: string;
      contact_id: GUID;
      notification_status: string;
      sms_country_code: string;
      sms_id: string;
      template_id: string;
    }>(this.util.getRawEvents, 19, 40000, this.validate);
  }

  get errorEvent() {
    return new EventsFilter<{
      dsc: string;
      response_time: number;
      is_rollout: boolean;
      initiator_name: string;
      builderType: string;
      errscp: string;
      site_id: GUID;
      errn: string;
      p4: string;
      majorver: string;
      trgt: string;
      isLiveEditor: boolean;
      ts: number;
      playerVersion: string;
      artifactVersion: string;
      usersOnPageCount: number;
      viewmode: string;
      error_description_short: string;
      data_center: string;
      screenResolution: string;
      p3: string;
      did: GUID;
      isSg: boolean;
      dsOrigin: string;
      p2: string;
      token: string;
      sessionId: string;
      errc: number;
      stack: string;
      viewerName: string;
      app_id: string;
      sev: number;
      cat: number;
      errormsg: string;
      usersOnSiteCount: number;
      p1: string;
      msid: GUID;
      base_version: number;
      iss: number;
    }>(this.util.getRawEvents, 5, 10, this.validate);
  }

  get dashboardDeleteAndRestoreSiteOpenPopup() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
      popup_name: string;
    }>(this.util.getRawEvents, 5, 100, this.validate);
  }

  get pageClassifierSrc5Evid10000() {
    return new EventsFilter<{
      page_id: string;
      page_name: string;
      route: string;
      uuid: string;
      msid: string;
      revision: number;
      pageType: string;
      score: number;
      url: Url;
      previewUrl: string;
      isPatternsPage: boolean;
      fullRoute: string;
    }>(this.util.getRawEvents, 5, 10000, this.validate);
  }

  get dashboardDeleteAndRestoreSiteRestoreSiteClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 101, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsHoverYourFormFields() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1010, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsHoverFieldsInContactList() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1011, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsClickOnDropdownField() {
    return new EventsFilter<{
      choose: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1012, this.validate);
  }

  get formBuilderSubmitButtonSettingsUpdateValueOfSubmitButton() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1013, this.validate);
  }

  get formBuilderFormSubmitSettingsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1014, this.validate);
  }

  get formBuilderFormSettingsDisplayErrorPage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      tabName: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1015, this.validate);
  }

  get formBuilderFormSettingsErrorPageTryAgainClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      tabName: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1016, this.validate);
  }

  get formBuilderFormSettingsCreateEmailMarketing() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      email_marketing_type: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1017, this.validate);
  }

  get formBuilderFormSettingsSubscriberDoubleOptIn() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1018, this.validate);
  }

  get formBuilderFormSettingsSubscriberDoubleOptInLearnMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1019, this.validate);
  }

  get dashboardSiteActivityCenterClickDeleteItem() {
    return new EventsFilter<{
      name: string;
      item_id: GUID;
      source: string;
      is_deleted: boolean;
      view_type: string;
      origin: string;
      items_count: number;
      type: string;
      platform: string;
      msid: GUID;
      is_archived: boolean;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 102, this.validate);
  }

  get formBuilderFormSettingsSubscriberDoubleOptInEnable() {
    return new EventsFilter<{
      builderOrigin: string;
      toggle: boolean;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1020, this.validate);
  }

  get formBuilderFormSettingsSubscriberDoubleOptInSubmitMessage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1021, this.validate);
  }

  get formBuilderFormSettingsInboxOptInOutWhoToNotify() {
    return new EventsFilter<{
      choose: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1022, this.validate);
  }

  get formBuilderFormSettingsInboxOptInOutUpdateEmail() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1023, this.validate);
  }

  get formBuilderFormSettingsInboxOptInOutLearnMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      current_option: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1024, this.validate);
  }

  get formBuilderFormSettingsInboxOptInOutAreYouSure() {
    return new EventsFilter<{
      choose: string;
      builderOrigin: string;
      visitor_id: GUID;
      checkbox: boolean;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1025, this.validate);
  }

  get formBuilderFormSettingsInboxOptInOutFindOutMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1026, this.validate);
  }

  get formBuilderFormSettingsEmailNotificationAddContributer() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1027, this.validate);
  }

  get formBuilderFormSettingsEmailNotificationAddNewEmail() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1028, this.validate);
  }

  get formBuilderFormSettingsEmailNotificationWantToNotifyDonTShowThisAgain() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1029, this.validate);
  }

  get dashboardSiteActivityCenterClickUndoDeletedItem() {
    return new EventsFilter<{
      item_id: GUID;
      source: string;
      is_deleted: boolean;
      view_type: string;
      action_url: string;
      referral: string;
      action_desc: string;
      origin: string;
      items_count: number;
      expire: number;
      type: string;
      platform: string;
      msid: GUID;
      is_archived: boolean;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 103, this.validate);
  }

  get workflowsSettingsClick() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1030, this.validate);
  }

  get workflowsSettingsShowArchive() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1031, this.validate);
  }

  get workflowsSettingsHideArchive() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1032, this.validate);
  }

  get workflowsSettingsSetAutomations() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      origin: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1033, this.validate);
  }

  get workflowsSettingsDeleteWorkflowClick() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1034, this.validate);
  }

  get workflowsSettingsDeleteWorkflowConfirmation() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1035, this.validate);
  }

  get workflowsSettingsAddNewWorkflow() {
    return new EventsFilter<{
      uuid: GUID;
      new_workflow_id: GUID;
      origin: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1036, this.validate);
  }

  get workflowsBoardUpdateBoardNameIconClick() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1037, this.validate);
  }

  get workflowsBoardUpdateBoardNameComplete() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1038, this.validate);
  }

  get workflowsBoardDropdownIconClick() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1039, this.validate);
  }

  get dashboardSiteActivityCenterClickOnArchiveItem() {
    return new EventsFilter<{
      item_id: GUID;
      source: string;
      is_deleted: boolean;
      view_type: string;
      action_url: string;
      referral: string;
      action_desc: string;
      origin: string;
      items_count: number;
      expire: number;
      type: string;
      platform: string;
      msid: GUID;
      is_archived: boolean;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 104, this.validate);
  }

  get workflowsAddNewPhaseClick() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      origin: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1040, this.validate);
  }

  get workflowsAddNewPhaseSave() {
    return new EventsFilter<{
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1041, this.validate);
  }

  get workflowsAddNewCardClick() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      origin: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1042, this.validate);
  }

  get workflowsAddNewCardSave() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1043, this.validate);
  }

  get workflowsPhaseSettingsClick() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1044, this.validate);
  }

  get workflowsPhaseSettingsCreateAutomation() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1045, this.validate);
  }

  get workflowsPhaseSettingsRenameStepClick() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      origin: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1046, this.validate);
  }

  get workflowsPhaseSettingsRenameStepComplete() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1047, this.validate);
  }

  get workflowsPhaseSettingsDeleteStepClick() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1048, this.validate);
  }

  get workflowsPhaseSettingsDeleteStepConfirm() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1049, this.validate);
  }

  get dashboardUserClickedOnContactSNameFromUserActivity() {
    return new EventsFilter<{
      name: string;
      item_id: GUID;
      source: string;
      view_type: string;
      origin: string;
      type: string;
      platform: string;
      msid: GUID;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 105, this.validate);
  }

  get workflowsCardSettingsClick() {
    return new EventsFilter<{
      phase_id: GUID;
      uuid: GUID;
      workflow_name: string;
      card_id: GUID;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1050, this.validate);
  }

  get workflowsCardSettingsCardActions() {
    return new EventsFilter<{
      phase_id: GUID;
      uuid: GUID;
      workflow_name: string;
      origin: string;
      card_id: GUID;
      workflow_id: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1051, this.validate);
  }

  get workflowsCardSettingsEditCardNameComplete() {
    return new EventsFilter<{
      phase_id: GUID;
      uuid: GUID;
      workflow_name: string;
      origin: string;
      card_id: GUID;
      cardName: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1052, this.validate);
  }

  get workflowsBoardSelectABoard() {
    return new EventsFilter<{
      previous_workflow_id: GUID;
      uuid: GUID;
      workflow_name: string;
      previous_workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1053, this.validate);
  }

  get workflowsSettingsLearnMoreClick() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1054, this.validate);
  }

  get workflowsIntroStep1WorkSmarterWithWorkflows() {
    return new EventsFilter<{
      step_no: number;
      is_final_step: boolean;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1055, this.validate);
  }

  get workflowsIntroStep2HowItWorks() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1056, this.validate);
  }

  get workflowsIntroStep3MoveCardsAsYouGo() {
    return new EventsFilter<{
      uuid: GUID;
      isSuccessful: boolean;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1057, this.validate);
  }

  get workflowsIntroStep4SaveTimeWithAutomations() {
    return new EventsFilter<{
      uuid: GUID;
      tooltip_type: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1058, this.validate);
  }

  get workflowsIntroStep5CompleteSatisfaction() {
    return new EventsFilter<{
      uuid: GUID;
      error_type: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1059, this.validate);
  }

  get clickOnSidebarSHeader() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 106, this.validate);
  }

  get workflowsIntroStep6ThatSIt() {
    return new EventsFilter<{
      phase_id: GUID;
      phase_name: string;
      uuid: GUID;
      workflow_name: string;
      workflow_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1060, this.validate);
  }

  get dummyNameSrc5Evid10600() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 10600, this.validate);
  }

  get workflowsGoToBoardFromContactPanel() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      card_id: GUID;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1061, this.validate);
  }

  get workflowsConnectContactToWorkflowFromContactPanel() {
    return new EventsFilter<{
      uuid: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1062, this.validate);
  }

  get workflowsClickUpdateContactInWfFromContactPanel() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      card_id: GUID;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1063, this.validate);
  }

  get workflowsClickOnCompletedArchivedFlowsInContactPanel() {
    return new EventsFilter<{
      uuid: GUID;
      click_action: string;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1064, this.validate);
  }

  get workflowsErrorCardCannotBeRemovedInContactPanel() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      card_id: GUID;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1065, this.validate);
  }

  get workflowsChangePhaseInContactPanel() {
    return new EventsFilter<{
      to_phase_name: string;
      uuid: GUID;
      workflow_name: string;
      origin: string;
      card_id: GUID;
      from_phase_name: string;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1066, this.validate);
  }

  get workflowsClickOnSaveChangesInContactPanel() {
    return new EventsFilter<{
      uuid: GUID;
      workflow_name: string;
      card_id: GUID;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1067, this.validate);
  }

  get workflowsMoveCard() {
    return new EventsFilter<{
      moving_type: string;
      uuid: GUID;
      workflow_name: string;
      origin: string;
      card_id: GUID;
      move_to_step: string;
      workflow_id: GUID;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1068, this.validate);
  }

  get workflowsEmptyStatePageLoaded() {
    return new EventsFilter<{
      msid: GUID;
      uuid: GUID;
    }>(this.util.getRawEvents, 5, 1069, this.validate);
  }

  get sidebarState107() {
    return new EventsFilter<{
      sub_section_name: string;
      hosting_platform: string;
      section_name: string;
      category_items_list: string;
      items_below_fold: string;
      referral_info: string;
      view_type: string;
      active_item: string;
      prev_page_id: string;
      page_id: string;
      active_item_cta: string;
      sub_category_items_list: string;
      second_sub_category_items_list: string;
      platform: string;
      items_above_fold: string;
      hosting_platform_context_id: string;
      hosting: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 107, this.validate);
  }

  get workflowsEmptyStateClickOnGetStarted() {
    return new EventsFilter<{
      msid: GUID;
      uuid: GUID;
    }>(this.util.getRawEvents, 5, 1070, this.validate);
  }

  get workflowsTemplatesModalIsPresented() {
    return new EventsFilter<{
      msid: GUID;
      uuid: GUID;
    }>(this.util.getRawEvents, 5, 1071, this.validate);
  }

  get workflowsClickOnUseTemplateOrStartFromScratchOnTemplatesModal() {
    return new EventsFilter<{
      template_name: string;
      uuid: GUID;
      msid: GUID;
      template_id: GUID;
    }>(this.util.getRawEvents, 5, 1072, this.validate);
  }

  get workflowsClickOnDismissTemplatesModal() {
    return new EventsFilter<{
      msid: GUID;
      uuid: GUID;
    }>(this.util.getRawEvents, 5, 1073, this.validate);
  }

  get cookiesBannerUouUserClickOnVisitorDataOption() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 1074, this.validate);
  }

  get cookiesBannerUouUserHoverOverTooltip() {
    return new EventsFilter<{ name: string; }>(this.util.getRawEvents, 5, 1075, this.validate);
  }

  get cookiesBannerUouCookieConsentBannerGetStartedClick() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 1076, this.validate);
  }

  get cookiesBannerUouDisplayCookieBannerOnSiteCta() {
    return new EventsFilter<{ toggle: boolean; }>(this.util.getRawEvents, 5, 1077, this.validate);
  }

  get cookiesBannerUouUserClickedOnAdvancedOption() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1078, this.validate);
  }

  get cookiesBannerUouUserClickedOnTheGeneralXButton() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1079, this.validate);
  }

  get mobileDashboardCreateNewSite() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 108, this.validate);
  }

  get cookiesBannerUouSavePublishClick() {
    return new EventsFilter<{
      general_text: string;
      essential_cookies_text: string;
      url_privacy_policy: Url;
      changed_button_style: string;
      custom_font_changed: string;
      custom_text_size_changed: string;
      audience: string;
      settings_button_text: string;
      banner_color: string;
      custom_colors_contrast_ratio: string;
      functional_cookies_text: string;
      changed_second_color: string;
      decline_all_button: string;
      link_option: string;
      consent_button_text: string;
      custom_color_accessible: string;
      revisit_settings_button_location: string;
      save_button_text: string;
      revisit_settings_button: string;
      privacy_policy_link_text: string;
      cookie_status: string;
      analytics_cookies_text: string;
      marketing_cookies_text: string;
      changed_main_color: string;
    }>(this.util.getRawEvents, 5, 1080, this.validate);
  }

  get cookiesBannerUouUserWithPopUpCta() {
    return new EventsFilter<{
      action: string;
      pop_up_type: string;
    }>(this.util.getRawEvents, 5, 1081, this.validate);
  }

  get cookiesBannerUouAdvancedOptionsCta() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 1082, this.validate);
  }

  get cookiesBannerUouSetUpAPrivacyPolicyClicks() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 1083, this.validate);
  }

  get cookiesBannerUouAddADoNotSellDateLinkClick() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1084, this.validate);
  }

  get cookiesBannerUouUouClickOnDoNotSellMyDataLink() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1085, this.validate);
  }

  get cookiesBannerUouUouDisableDataTransfersPopUpIsDisplay() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1086, this.validate);
  }

  get cookiesBannerUouUouWithDisableDataTransfersPopUp() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 1087, this.validate);
  }

  get cookiesBannerUouUserConsentLogCta() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 1088, this.validate);
  }

  get cookiesBannerUouExportConsentLogCta() {
    return new EventsFilter<{
      action: string;
      time_option: string;
    }>(this.util.getRawEvents, 5, 1089, this.validate);
  }

  get cookiesBannerUouAPopUpIsDisplay() {
    return new EventsFilter<{ pop_up_type: string; }>(this.util.getRawEvents, 5, 1090, this.validate);
  }

  get cookiesBannerUouSearchMembersById() {
    return new EventsFilter<{ member_id_filled: string; }>(this.util.getRawEvents, 5, 1091, this.validate);
  }

  get cookiesBannerUouReviewRequirementsAlert() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1092, this.validate);
  }

  get formBuilderFormAddNewFieldInnerTabsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      tab_name: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1093, this.validate);
  }

  get formBuilderEditorXAddASubscribeCheckbox() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1094, this.validate);
  }

  get formBuilderMigratedFormContactFormToWixFormSuccess() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1095, this.validate);
  }

  get formBuilderConditionalFormAddNewRule() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1096, this.validate);
  }

  get formBuilderConditionalFormLearnMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1097, this.validate);
  }

  get formBuilderConditionalFormIfClickOnDropdown() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1098, this.validate);
  }

  get formBuilderConditionalFormIfChooseFromDropdown() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      fieldType: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1099, this.validate);
  }

  get accountManagerStartLoadingAccountManager() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      initial_load: boolean;
      platform: string;
    }>(this.util.getRawEvents, 5, 110, this.validate);
  }

  get formBuilderConditionalFormIfFilledNotFilled() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      filledOption: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1100, this.validate);
  }

  get formBuilderConditionalFormIfFilledSelectionOption() {
    return new EventsFilter<{
      count: number;
      choose: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1101, this.validate);
  }

  get formBuilderConditionalFormThenClickOnDropdown() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1102, this.validate);
  }

  get formBuilderConditionalFormThenChooseFromDropdown() {
    return new EventsFilter<{
      count: number;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1103, this.validate);
  }

  get formBuilderConditionalFormIsClickOnDropdown() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1104, this.validate);
  }

  get formBuilderConditionalFormIsChooseFromDropdown() {
    return new EventsFilter<{
      builderOrigin: string;
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1105, this.validate);
  }

  get formBuilderConditionalFormSaveRule() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1106, this.validate);
  }

  get formBuilderConditionalFormMoreActionClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1107, this.validate);
  }

  get formBuilderConditionalFormMoreActionChoose() {
    return new EventsFilter<{
      choose: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1108, this.validate);
  }

  get formBuilderConditionalFormContradictingRuleWarning() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1109, this.validate);
  }

  get accountManagerFinishLoadingAccountManager() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      initial_load: boolean;
      platform: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 111, this.validate);
  }

  get formBuilderConditionalFormSaveRuleError() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      reason: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1110, this.validate);
  }

  get formBuilderMigratedFormContactFormToWixFormPhoneNumberIssue() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1111, this.validate);
  }

  get formBuilderConditionalFormViewRuleFromFieldSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1112, this.validate);
  }

  get formBuilderConditionalFormLearnMoreFromTooltipFieldSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1113, this.validate);
  }

  get crmHomeIntegrationsMarketingConnect() {
    return new EventsFilter<{
      view_type: string;
      connectTab: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1114, this.validate);
  }

  get crmHomeIntegrationsFinanceViewAll() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1115, this.validate);
  }

  get crmHomeIntegrationsFinanceConnect() {
    return new EventsFilter<{
      view_type: string;
      connectTab: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1116, this.validate);
  }

  get accountSettingsDisableSocialAccountConfirmationModalLoad() {
    return new EventsFilter<{
      provider_id: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 1119, this.validate);
  }

  get accountManagerPageComponentStartLoadingAccountManager() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      sub_view: string;
      prev_view: string;
      prev_sub_view: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 112, this.validate);
  }

  get accountSettingsDisableSocialAccountClickDisableInConfirmationModal() {
    return new EventsFilter<{
      provider_id: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 1120, this.validate);
  }

  get crmHomeGoToMarketingTools() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1122, this.validate);
  }

  get formBuilderPaymentFormMoveStateInFunnel() {
    return new EventsFilter<{
      fromState: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      toState: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1123, this.validate);
  }

  get formBuilderPaymentFormCloseFunnel() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1124, this.validate);
  }

  get formBuilderPaymentFormQuestionMarkFunnel() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1125, this.validate);
  }

  get formBuilderPaymentFormDemoSiteFunnel() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1126, this.validate);
  }

  get formBuilderPaymentFormChoosePaymentFormType() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1127, this.validate);
  }

  get formBuilderPaymentFormEnterItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1128, this.validate);
  }

  get formBuilderPaymentFormEnterPrice() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1129, this.validate);
  }

  get accountManagerPageComponentFinishLoadingAccountManager() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      sub_view: string;
      prev_view: string;
      prev_sub_view: string;
      platform: string;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 113, this.validate);
  }

  get dummyNameSrc5Evid1130() {
    return new EventsFilter<{
      channel: string;
      correlation_id: string;
      notification_id: string;
      app_id: string;
      target: string;
      contact_id: string;
    }>(this.util.getRawEvents, 5, 1130, this.validate);
  }

  get dummyNameSrc5Evid1131() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1131, this.validate);
  }

  get notificationInvalidTokens() {
    return new EventsFilter<{
      channel: string;
      device_token: string;
      app: string;
      contact_id: string;
    }>(this.util.getRawEvents, 5, 1132, this.validate);
  }

  get formBuilderPaymentFormHoverPrice() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1133, this.validate);
  }

  get formBuilderPaymentFormDeleteItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1134, this.validate);
  }

  get formBuilderPaymentFormAddAnotherItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1135, this.validate);
  }

  get formBuilderPaymentFormHoverDeleteItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1136, this.validate);
  }

  get formBuilderPaymentFormReachLimitOfItems() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      numberOfItems: number;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1137, this.validate);
  }

  get formBuilderPaymentFormTellUsMoreItems() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1138, this.validate);
  }

  get formBuilderPaymentFormEnterMinMaxPrice() {
    return new EventsFilter<{
      minMax: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1139, this.validate);
  }

  get accountManagerClickOnSidebarItem() {
    return new EventsFilter<{
      name: string;
      sidebar_name: string;
      referral_info: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 114, this.validate);
  }

  get formBuilderPaymentFormConnectPaymentMethod() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1140, this.validate);
  }

  get formBuilderPaymentFormLearnMoreStep4() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1141, this.validate);
  }

  get formBuilderPaymentFormDashboardContinueGreenBanner() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1142, this.validate);
  }

  get formBuilderPaymentFormDashboardCloseGreenBanner() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1143, this.validate);
  }

  get formBuilderPaymentFormChangePaymentMethod() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1145, this.validate);
  }

  get formBuilderPaymentFormDiscardFunnel() {
    return new EventsFilter<{
      builderOrigin: string;
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1146, this.validate);
  }

  get formBuilderPaymentFormPaymentSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      fieldType: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1147, this.validate);
  }

  get formBuilderPaymentFormOpenPaymentOverview() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1148, this.validate);
  }

  get formBuilderPaymentFormGeneralSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1149, this.validate);
  }

  get accountManagerClickOnBackInSidebarItem() {
    return new EventsFilter<{
      name: string;
      sidebar_name: string;
      referral_info: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 115, this.validate);
  }

  get formBuilderPaymentFormSettingsAddAnotherItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1150, this.validate);
  }

  get formBuilderPaymentFormSettingsItemMoreActions() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1151, this.validate);
  }

  get formBuilderPaymentFormSettingsItemMoreActionsChoose() {
    return new EventsFilter<{
      builderOrigin: string;
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1152, this.validate);
  }

  get formBuilderPaymentFormSettingsConnectPaymentWhenPaymentNotConnected() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1153, this.validate);
  }

  get formBuilderPaymentFormSettingsRestoreField() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1154, this.validate);
  }

  get formBuilderPaymentFormSettingsStopAcceptingPayments() {
    return new EventsFilter<{
      builderOrigin: string;
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1155, this.validate);
  }

  get settingsLobbySectionIsSeen() {
    return new EventsFilter<{
      section_name: string;
      view_type: string;
      platform: string;
      section_loaction_on_page: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1156, this.validate);
  }

  get settingsLobbyClickOnItem() {
    return new EventsFilter<{
      item_location_on_page: number;
      section_name: string;
      click_type: string;
      view_type: string;
      cta_name: string;
      page_id: string;
      item_location: string;
      item_name: string;
      status: string;
      platform: string;
      hosting: string;
      msid: GUID;
      categoryName: string;
      pageName: string;
      categoryLocationOnPage: number;
    }>(this.util.getRawEvents, 5, 1158, this.validate);
  }

  get formBuilderSubmissionLimitReasonForLimit() {
    return new EventsFilter<{
      builderOrigin: string;
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1159, this.validate);
  }

  get foldersMarkUnmarkSelectAllButton() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      sub_view: string;
      platform: string;
      hosting: string;
      view: string;
    }>(this.util.getRawEvents, 5, 116, this.validate);
  }

  get formBuilderSubmissionLimitReasonForLimitInfoHover() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1160, this.validate);
  }

  get reportNetwork() {
    return new EventsFilter<{
      referer_host: string;
      duration: number;
      has_been_active: boolean;
      is_cached: boolean;
      encoded_body_size: number;
      path: string;
      headers_size: number;
      is_blocking: boolean;
      stall_queue_time: number;
      last_referer_host: string;
      user_interactions_count: number;
      response_start: number;
      last_referer_path_name: string;
      transferSize: number;
      request_start: number;
      initiator_type: string;
      host_name: string;
      download_time: number;
      dns_time: number;
      pixel_session_id: string;
      navigation_id: string;
      referer_path_name: string;
      dcl: number;
      version_num: number;
      connection_time: number;
      response_status_code: number;
      load_time: number;
      referer: string;
      server_response_time: number;
      event_start_time: number;
      dom_complete: number;
      protocol: string;
    }>(this.util.getRawEvents, 5, 11601, this.validate);
  }

  get formBuilderSubmissionLimitLimitByNumberTotalNumber() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: number;
    }>(this.util.getRawEvents, 5, 1161, this.validate);
  }

  get formBuilderSubmissionLimitLimitByNumberEditMessage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1162, this.validate);
  }

  get formBuilderSubmissionLimitLimitByNumberNumberInfoHover() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1163, this.validate);
  }

  get formBuilderSubmissionLimitLimitByNumberMessageInfoHover() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1164, this.validate);
  }

  get formBuilderSubmissionLimitLimitByDateEnteredDate() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1165, this.validate);
  }

  get formBuilderSubmissionLimitLimitByDateChangeTimeFormat() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1166, this.validate);
  }

  get formBuilderSubmissionLimitLimitByDateChangeTimeFormatInvalid() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1167, this.validate);
  }

  get formBuilderSubmissionLimitLimitByDateChangeDefaultTime() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1168, this.validate);
  }

  get formBuilderSubmissionLimitLimitByDateChangeMessage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1169, this.validate);
  }

  get foldersClickOnChangeViewMode() {
    return new EventsFilter<{
      click_name: string;
      view_mode: string;
      view_type: string;
      sub_view: string;
      origin: string;
      platform: string;
      hosting: string;
      view: string;
    }>(this.util.getRawEvents, 5, 117, this.validate);
  }

  get formBuilderSubmissionLimitLimitByDateTimezoneSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1170, this.validate);
  }

  get formBuilderSubmissionLimitRestoreSuccessMessage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1171, this.validate);
  }

  get viewInDashboard() {
    return new EventsFilter<{
      name: string;
      widget_name: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1172, this.validate);
  }

  get formBuilderAutofillMemberEmailsEnableToggle() {
    return new EventsFilter<{
      builderOrigin: string;
      toggle: boolean;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1173, this.validate);
  }

  get formBuilderAutofillMemberEmailsMembersAreaLearnMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1174, this.validate);
  }

  get formBuilderAutofillMemberEmailsBrowserAutocompleteLearnMore() {
    return new EventsFilter<{
      state: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1175, this.validate);
  }

  get formBuilderAutofillMemberEmailsMainTooltipHover() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1176, this.validate);
  }

  get formBuilderAutofillMemberEmailsLetMembersEdit() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1177, this.validate);
  }

  get formBuilderAutofillMemberEmailsDropdownEmail() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1178, this.validate);
  }

  get formBuilderAutofillMemberEmailsChooseDifferentEmail() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1179, this.validate);
  }

  get foldersTooltipShown() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      sub_view: string;
      platform: string;
      hosting: string;
      view: string;
    }>(this.util.getRawEvents, 5, 118, this.validate);
  }

  get formBuilderAutofillMemberEmailsAddAnEmailField() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1180, this.validate);
  }

  get veloIdeModalIsOpened() {
    return new EventsFilter<{
      modal_type: string;
      context: string;
      page_id: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11801, this.validate);
  }

  get veloIdeCodeHasBeenUpdated() {
    return new EventsFilter<{
      modal_type: string;
      context: string;
      page_id: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11802, this.validate);
  }

  get veloIdeClickOnMoreActions() {
    return new EventsFilter<{
      modal_type: string;
      action_name: string;
      context: string;
      page_id: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11803, this.validate);
  }

  get veloIdeClickOnATab() {
    return new EventsFilter<{
      modal_type: string;
      tab_name: string;
      context: string;
      page_id: string;
      tab_type: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11804, this.validate);
  }

  get veloIdeModalEndOfProcess() {
    return new EventsFilter<{
      modal_type: string;
      context: string;
      page_id: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      end_type: string;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11805, this.validate);
  }

  get veloIdeModalClickOnLinks() {
    return new EventsFilter<{
      modal_type: string;
      context: string;
      page_id: string;
      link_to: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11806, this.validate);
  }

  get veloIdeModalUnsuccessfulSave() {
    return new EventsFilter<{
      modal_type: string;
      context: string;
      page_id: string;
      error_type: string;
      window_width: number;
      origin: string;
      external_id: GUID;
      app_id: GUID;
      window_height: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 11807, this.validate);
  }

  get formBuilderAutofillMemberEmailsAddedMembersArea() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1181, this.validate);
  }

  get formBuilderSubmissionLimitUouSeenLimitMessage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1182, this.validate);
  }

  get sidebarModalOfFteToTheNewSidebarIsLoadedWithSpecificCluster() {
    return new EventsFilter<{
      category_items_list: string;
      origin: string;
      installedApps: string;
      pageName: string;
      clusterName: string;
    }>(this.util.getRawEvents, 5, 1185, this.validate);
  }

  get dashboardSiteSettingsLocationsModalPageView() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      fields: string;
      platform: string;
      location_details: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1189, this.validate);
  }

  get foldersClickOnShowMoreShoeLess() {
    return new EventsFilter<{
      name: string;
      view_mode: string;
      view_type: string;
      sub_view: string;
      platform: string;
      hosting: string;
      view: string;
    }>(this.util.getRawEvents, 5, 119, this.validate);
  }

  get dashboardUpgradeLink() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 12, this.validate);
  }

  get ascendPagePageNavigationClick() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      item_name: string;
      category: string;
      prev_view: string;
      platform: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 120, this.validate);
  }

  get workspaceSelectorSelectWorkspaceModalView() {
    return new EventsFilter<{
      num_workspaces: number;
      page_view: string;
      account_type: string;
      clicked_workspace_id: GUID;
      clicked_workspace_role: string;
      platform: string;
      previous_workspace_id: string;
      previous_workspace_role: string;
    }>(this.util.getRawEvents, 5, 12002, this.validate);
  }

  get workspaceSelectorSelectWorkspaceModalCta() {
    return new EventsFilter<{
      num_workspaces: number;
      page_view: string;
      account_type: string;
      clicked_workspace_id: GUID;
      clicked_workspace_role: string;
      platform: string;
      previous_workspace_id: string;
      previous_workspace_role: string;
      cta: string;
    }>(this.util.getRawEvents, 5, 12003, this.validate);
  }

  get workspaceSelectorSelectWorkspaceModalClose() {
    return new EventsFilter<{
      num_workspaces: number;
      page_view: string;
      account_type: string;
      clicked_workspace_id: GUID;
      clicked_workspace_role: string;
      platform: string;
      previous_workspace_id: string;
      previous_workspace_role: string;
      reason: string;
    }>(this.util.getRawEvents, 5, 12004, this.validate);
  }

  get switchWorkspaceModalSelectWorkspaceModalView() {
    return new EventsFilter<{
      page_view: string;
      active_workspace_id: GUID;
      active_workspace_role: string;
      original_workspace_id: string;
      original_workspace_role: string;
    }>(this.util.getRawEvents, 5, 12010, this.validate);
  }

  get switchWorkspaceModalSelectWorkspaceModalCta() {
    return new EventsFilter<{
      page_view: string;
      active_workspace_id: GUID;
      active_workspace_role: string;
      original_workspace_id: string;
      original_workspace_role: string;
      cta: string;
    }>(this.util.getRawEvents, 5, 12011, this.validate);
  }

  get switchWorkspaceModalWorkspaceModalClose() {
    return new EventsFilter<{
      page_view: string;
      active_workspace_id: GUID;
      active_workspace_role: string;
      original_workspace_id: string;
      original_workspace_role: string;
      reason: string;
    }>(this.util.getRawEvents, 5, 12012, this.validate);
  }

  get formBuilderBizMgrFormsBizTipsClickOnTheTip() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      app_name: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1208, this.validate);
  }

  get invoicesAddAProductVariantOpenModal() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1209, this.validate);
  }

  get ascendPageAscendVideoClick() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      prev_view: string;
      platform: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 121, this.validate);
  }

  get invoicesAddAProductVariantAddToInvoice() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1210, this.validate);
  }

  get foldersHoverOverThePermissionIcon1212() {
    return new EventsFilter<{
      sub_view: string;
      folder: string;
      origin: string;
      view_level: string;
      platform: string;
      msid: GUID;
      folder_name: string;
      number_of_items: number;
    }>(this.util.getRawEvents, 5, 1212, this.validate);
  }

  get invoicesCreateOrderNewInvoiceClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1213, this.validate);
  }

  get dashboardFinishLoadingLoadingTimeFromStartModule() {
    return new EventsFilter<{
      view_type: string;
      sub_view: string;
      platform: string;
      hosting: string;
      refferal_info: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 1215, this.validate);
  }

  get sitesListPageFoldersLoaded1216() {
    return new EventsFilter<{
      view_mode: string;
      folders: string;
      num_displayed_sites: number;
      platform: string;
    }>(this.util.getRawEvents, 5, 1216, this.validate);
  }

  get deleteLocationModalIsOpened() {
    return new EventsFilter<{
      is_multiple_choice: boolean;
      is_default: boolean;
      page_view: string;
      view_type: string;
      is_draft: boolean;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1217, this.validate);
  }

  get successfullyDeletedLocation() {
    return new EventsFilter<{
      is_multiple_choice: boolean;
      is_default: boolean;
      page_view: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1218, this.validate);
  }

  get foldersClickOnCreateNewFolder() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      sub_view: string;
      nesting_level: number;
      origin: string;
      view_level: string;
      platform: string;
      hosting: string;
      view: string;
    }>(this.util.getRawEvents, 5, 122, this.validate);
  }

  get locationModalFloatingNotification() {
    return new EventsFilter<{
      name: string;
      page_view: string;
      view_type: string;
      origin: string;
      type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1225, this.validate);
  }

  get foldersClickOnCreateNewFolderInDialog() {
    return new EventsFilter<{
      view_type: string;
      sub_view: string;
      nesting_level: number;
      platform: string;
      hosting: string;
      folder_name: string;
      view: string;
    }>(this.util.getRawEvents, 5, 123, this.validate);
  }

  get apesSaveEditedNotification() {
    return new EventsFilter<{
      view_type: string;
      rule_id: GUID;
      componentChanged: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1234, this.validate);
  }

  get apesSaveEditedNotificationSrc5Evid1235() {
    return new EventsFilter<{
      view_type: string;
      rule_id: GUID;
      componentChanged: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1235, this.validate);
  }

  get apesEditNotificationSelectAudience() {
    return new EventsFilter<{
      audience: string;
      view_type: string;
      rule_id: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1238, this.validate);
  }

  get foldersClickOnMoveToFolderFromDialog() {
    return new EventsFilter<{
      referral_url: Url;
      destination_nesting_level: number;
      num_sites_moved: number;
      view_type: string;
      origin_nesting_level: number;
      folder: string;
      origin: string;
      moved_item_type: string;
      platform: string;
      num_folders_moved: number;
      msid: string;
    }>(this.util.getRawEvents, 5, 124, this.validate);
  }

  get suggestionsFeedbackClickOnNavigationButtonInPopup() {
    return new EventsFilter<{
      logo_value: string;
      hosting_platform: string;
      platformName: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1240, this.validate);
  }

  get formBuilderBizMgrClickOnMoreActions() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1243, this.validate);
  }

  get formBuilderBizMgrClickOnMoreActionsOfASpecificForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1246, this.validate);
  }

  get formBuilderBizMgrClickOnViewForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1247, this.validate);
  }

  get formBuilderBizMgrClickOnEditForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1248, this.validate);
  }

  get formBuilderBizMgrClickOnDeleteForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1249, this.validate);
  }

  get foldersClickOnFolderSQuickActions() {
    return new EventsFilter<{
      name: string;
      view_mode: string;
      view_type: string;
      sub_view: string;
      nesting_level: number;
      origin: string;
      cta: string;
      view_level: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 125, this.validate);
  }

  get customerNotificationsSettingsClickInsidePageWithoutEmailsSections() {
    return new EventsFilter<{
      name: string;
      section_name: string;
      view_type: string;
      page_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1250, this.validate);
  }

  get customerNotificationsSettingsClickOnHideUnhide() {
    return new EventsFilter<{
      section_name: string;
      view_type: string;
      origin: string;
      status: boolean;
      platform: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1251, this.validate);
  }

  get customerNotificationsSettingsPreviewEditClickOnToggle() {
    return new EventsFilter<{
      channel: string;
      view_type: string;
      rule_id: GUID;
      status: boolean;
      platform: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1252, this.validate);
  }

  get customerNotificationsSettingsPageLoad() {
    return new EventsFilter<{
      available_sections: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1253, this.validate);
  }

  get bizManagerShowWarningMessage() {
    return new EventsFilter<{
      name: string;
      page_view: string;
      view_type: string;
      unsupported_language: string;
      unsupport_apps: string;
      fold_name: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1254, this.validate);
  }

  get formBuilderBizMgrClickOnGoToEditorToPublishYourSite() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1256, this.validate);
  }

  get formBuilderBizMgrClickOnGoToEditorToCreateSubmissionTable() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1257, this.validate);
  }

  get copyOfFormBuilderBizMgrClickOnGoToEditorToRemoveForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1258, this.validate);
  }

  get customerNotificationsSettingsPreviewEditShowTooltip() {
    return new EventsFilter<{
      view_type: string;
      rule_id: string;
      platform: string;
      msid: GUID;
      error_name: string;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1259, this.validate);
  }

  get foldersApproveActionFromFolderSQuickActionPopup() {
    return new EventsFilter<{
      view_type: string;
      nesting_level: number;
      origin: string;
      cta: string;
      platform: string;
      popup_name: string;
      folder_name: string;
    }>(this.util.getRawEvents, 5, 126, this.validate);
  }

  get formBuilderBizMgrEmptyStateClickOnWatchVideo() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1263, this.validate);
  }

  get formBuilderBizMgrClickOnLoadMoreForms() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1264, this.validate);
  }

  get formBuilderBizMgrMoreActionsViewRemovedForms() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1265, this.validate);
  }

  get formBuilderBizMgrMoreActionsLearnMore() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1266, this.validate);
  }

  get formBuilderBizMgrMoreActionsSendFeedback() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1267, this.validate);
  }

  get sidebarTooltipOfModalOfFteToTheNewSidebarIsClicked() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1268, this.validate);
  }

  get foldersSortListView() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      sub_view: string;
      order: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 127, this.validate);
  }

  get verticalsEmailNotificationSentSrc5Evid1270() {
    return new EventsFilter<{
      channel: string;
      view_type: string;
      notificationId: GUID;
      contact_id: string;
      platform: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1270, this.validate);
  }

  get verticalsEmailNotificationSent() {
    return new EventsFilter<{
      channel: string;
      view_type: string;
      contact_id: string;
      platform: string;
      notificationid: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1271, this.validate);
  }

  get verticalsEmailNotificationClicked() {
    return new EventsFilter<{
      channel: string;
      button_name: string;
      view_type: string;
      contact_id: string;
      platform: string;
      notificationid: string;
      msid: GUID;
      deep_link: string;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1272, this.validate);
  }

  get sidebarTooltipOfModalOfFteToTheNewSidebarIsShown() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 1274, this.validate);
  }

  get sidebarModalOfFteToTheNewSidebarIsClicked() {
    return new EventsFilter<{
      category_items_list: string;
      clickName: string;
      installedApps: string;
      pageName: string;
      clusterName: string;
    }>(this.util.getRawEvents, 5, 1276, this.validate);
  }

  get apesLoadSystemNotificationsModalEnd() {
    return new EventsFilter<{
      isPreinstalled: boolean;
      view_type: string;
      origin: string;
      loadTime: number;
      edited: boolean;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1277, this.validate);
  }

  get accountSettingsCloseYourWixAccountEnterPage() {
    return new EventsFilter<{
      uuid: GUID;
      is_workspace: boolean;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 1278, this.validate);
  }

  get accountSettingsCloseYourWixAccountCloseAccountRequestSubmited() {
    return new EventsFilter<{
      context: string;
      uuid: GUID;
      is_workspace: boolean;
      view_type: string;
      reason: string;
      platform: string;
      free_text: string;
    }>(this.util.getRawEvents, 5, 1279, this.validate);
  }

  get foldersMarkASite() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 128, this.validate);
  }

  get formBuilderComplexPhoneSettingsShowCountryCodeDropdownToggle() {
    return new EventsFilter<{
      toggle_state: boolean;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1280, this.validate);
  }

  get formBuilderComplexPhoneSettingsShowFieldTitleToggle() {
    return new EventsFilter<{
      toggle_state: boolean;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1281, this.validate);
  }

  get formBuilderComplexPhoneSettingsEnterFieldTitle() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1282, this.validate);
  }

  get formBuilderComplexPhoneSettingsShowInitialTextOfThePhoneFieldSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1283, this.validate);
  }

  get formBuilderComplexPhoneSettingsPlaceHolderTextOfThePhoneField() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1284, this.validate);
  }

  get formBuilderComplexPhoneSettingsIsFieldRequired() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      is_required: boolean;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1285, this.validate);
  }

  get formBuilderComplexPhoneSettingsCountryCodeEnterFieldTitle() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1286, this.validate);
  }

  get formBuilderComplexPhoneSettingsCountryCodeIncludeCodesFrom() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1287, this.validate);
  }

  get formBuilderComplexPhoneSettingsCountryCodeShowInitialTextSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1289, this.validate);
  }

  get myAccountSelectSiteFromSiteListPopup() {
    return new EventsFilter<{
      site_id: GUID;
      view_type: string;
      sub_view: string;
      num_selected_sites: number;
      origin: string;
      place: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 129, this.validate);
  }

  get formBuilderComplexPhoneSettingsCountryCodeShowInitialTextValue() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1290, this.validate);
  }

  get formBuilderComplexPhoneSettingsSelectNumberFormat() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1291, this.validate);
  }

  get formBuilderComplexPhoneSettingsEnteredNumberFormat() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1292, this.validate);
  }

  get formBuilderComplexPhoneSettingsCountryCodeClickOnManageCodeList() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1295, this.validate);
  }

  get formBuilderComplexPhoneEditFieldClick() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1299, this.validate);
  }

  get dashboardSearch() {
    return new EventsFilter<{
      view_type: string;
      no_of_html_sites: number;
      text: string;
      no_of_folders: number;
      place: string;
      no_of_sites: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 13, this.validate);
  }

  get foldersClickOnFolder() {
    return new EventsFilter<{
      view_type: string;
      sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      folder_name: string;
      view: string;
    }>(this.util.getRawEvents, 5, 130, this.validate);
  }

  get crmHomeScrollDown() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1300, this.validate);
  }

  get financialServicesSettingsChangeTab() {
    return new EventsFilter<{
      tabTo: string;
      view_type: string;
      tabFrom: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1301, this.validate);
  }

  get financialServicesSettingsInvoicesClickCard() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      card: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1302, this.validate);
  }

  get financialServicesSettingsInvoicesEditNumbering() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1303, this.validate);
  }

  get financialServicesSettingsInvoicesEditLogo() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1304, this.validate);
  }

  get financialServicesSettingsInvoicesBusinessInfoEditThem() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1305, this.validate);
  }

  get financialServicesSettingsInvoicesBusinessInfoEditField() {
    return new EventsFilter<{
      field: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1306, this.validate);
  }

  get financialServicesSettingsInvoicesDefaultsNotesEditNotes() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1307, this.validate);
  }

  get financialServicesSettingsInvoicesDefaultsNotesLegalTerms() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1308, this.validate);
  }

  get financialServicesSettingsInvoicesDefaultsNotesPreviewInvoice() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1309, this.validate);
  }

  get ascendPpPageView() {
    return new EventsFilter<{
      referralInfo: string;
      view_type: string;
      origin: string;
      app_id: GUID;
      num_of_packages: number;
      platform: string;
    }>(this.util.getRawEvents, 5, 131, this.validate);
  }

  get financialServicesSettingsPriceQuotesBusinessDetailsSiteSettings() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1310, this.validate);
  }

  get financialServicesSettingsPriceQuotesBusinessDetailsGoToSiteSettings() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1311, this.validate);
  }

  get financialServicesSettingsPriceQuotesEditNumbering() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1312, this.validate);
  }

  get financialServicesSettingsInvoicesSettingsClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1313, this.validate);
  }

  get crmHomeGeneralVideo() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1314, this.validate);
  }

  get invoicesItemsListChooseAProduct() {
    return new EventsFilter<{
      ifVariantModal: boolean;
      view_type: string;
      appDefId: GUID;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1315, this.validate);
  }

  get invoicesItemsListAddNewProduct() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1316, this.validate);
  }

  get invoicesItemsListLinkInTooltipProducts() {
    return new EventsFilter<{
      view_type: string;
      appDefId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1317, this.validate);
  }

  get ascendPpClickOnShowMoreLess() {
    return new EventsFilter<{
      referralInfo: string;
      view_type: string;
      ascend_product: string;
      origin: string;
      productName: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 132, this.validate);
  }

  get invoicesWidgetMoreAction() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      contactId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1320, this.validate);
  }

  get invoicesWidgetMoreActionChooseAnAction() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      origin: string;
      contactId: GUID;
      platform: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1321, this.validate);
  }

  get invoicesWidgetResendViaEmail() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      contactId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1322, this.validate);
  }

  get invoicesWidgetChangeTab() {
    return new EventsFilter<{
      tabTo: string;
      view_type: string;
      tabFrom: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1323, this.validate);
  }

  get invoicesWidgetCreateNew() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1324, this.validate);
  }

  get invoicesWidgetPreviewInvoice() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      origin: string;
      contactId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1325, this.validate);
  }

  get invoicesWidgetSeeAllInvoices() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      appDefId: GUID;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1326, this.validate);
  }

  get invoicesWidgetReportsViewReport() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1327, this.validate);
  }

  get invoicesWidgetReportsTimePicker() {
    return new EventsFilter<{
      time_frame: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1328, this.validate);
  }

  get invoicesEditModesEditInvoice() {
    return new EventsFilter<{
      ifOrderExist: boolean;
      hasViewedInvoice: boolean;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
      invoiceStatus: string;
    }>(this.util.getRawEvents, 5, 1329, this.validate);
  }

  get ascendPpScrollToEnd() {
    return new EventsFilter<{
      timeInPage: number;
      referralInfo: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 133, this.validate);
  }

  get invoicesEditModesEditCustomerInfoModalChoose() {
    return new EventsFilter<{
      option: string;
      view_type: string;
      platform: string;
      msid: GUID;
      invoiceStatus: string;
    }>(this.util.getRawEvents, 5, 1330, this.validate);
  }

  get invoicesEditModesNegativePriceToast() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
      invoiceStatus: string;
    }>(this.util.getRawEvents, 5, 1331, this.validate);
  }

  get clickOnWixStudioLogoSrc5Evid1332() {
    return new EventsFilter<{
      page_view: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 5, 1332, this.validate);
  }

  get crmDiscoverCrmTools() {
    return new EventsFilter<{
      view_type: string;
      pageView: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1333, this.validate);
  }

  get formBuilderComplexPhoneLayoutsDesignSelected() {
    return new EventsFilter<{
      selected_design: string;
      field: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1334, this.validate);
  }

  get formBuilderComplexAddressShowTheseSubfields() {
    return new EventsFilter<{
      visitor_id: GUID;
      button_name: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      isOn: boolean;
    }>(this.util.getRawEvents, 5, 1337, this.validate);
  }

  get formBuilderComplexAddressIncludeCountriesFrom() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1338, this.validate);
  }

  get formBuilderComplexAddressShowSubfieldTitles() {
    return new EventsFilter<{
      toggle: boolean;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1339, this.validate);
  }

  get ascendPpClickOnPackageInPp() {
    return new EventsFilter<{
      isChecked: boolean;
      timeInPage: number;
      referralInfo: string;
      buttonType: string;
      view_type: string;
      package_name: string;
      origin: string;
      packageId: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 134, this.validate);
  }

  get formBuilderComplexAddressSubfieldTitles() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1340, this.validate);
  }

  get formBuilderComplexAddressSubfieldPlaceholder() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1341, this.validate);
  }

  get formBuilderComplexAddressGeneralSettingRequired() {
    return new EventsFilter<{
      visitor_id: GUID;
      checkbox: boolean;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1342, this.validate);
  }

  get formBuilderComplexAddressSubfieldTitlesEnterText() {
    return new EventsFilter<{
      field: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1343, this.validate);
  }

  get formBuilderComplexAddressSubfieldPlaceholdersEnterText() {
    return new EventsFilter<{
      field: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1344, this.validate);
  }

  get formBuilderComplexAddressSubfieldPlaceholdersDefaultCountryChoose() {
    return new EventsFilter<{
      visitor_id: GUID;
      country: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1345, this.validate);
  }

  get formBuilderComplexAddressManageCountriesList() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1346, this.validate);
  }

  get formBuilderComplexAddressManageCountriesListFinish() {
    return new EventsFilter<{
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1347, this.validate);
  }

  get formBuilderComplexAddressSelectRequiredSubfieldOpen() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1348, this.validate);
  }

  get formBuilderComplexAddressSelectRequiredSubfieldChoose() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      requiredFields: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1349, this.validate);
  }

  get ascendPpCyclePageView() {
    return new EventsFilter<{
      referralInfo: string;
      view_type: string;
      package_name: string;
      origin: string;
      app_id: GUID;
      packageId: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 135, this.validate);
  }

  get formBuilderAutocompleteAddressFieldShowFieldTitleToggle() {
    return new EventsFilter<{
      toggle: boolean;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1353, this.validate);
  }

  get formBuilderAutocompleteAddressFieldFieldTitle() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1354, this.validate);
  }

  get formBuilderAutocompleteAddressFieldPlaceholderText() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1356, this.validate);
  }

  get formBuilderAutocompleteAddressFieldRequired() {
    return new EventsFilter<{
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1357, this.validate);
  }

  get formBuilderAutocompleteAddressFieldCountrySearch() {
    return new EventsFilter<{
      option: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1358, this.validate);
  }

  get formBuilderAutocompleteAddressFieldCountrySearchOption() {
    return new EventsFilter<{
      visitor_id: GUID;
      changed: boolean;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1359, this.validate);
  }

  get ascendPpClickOnCycleInPp() {
    return new EventsFilter<{
      cycle_name: string;
      referralInfo: string;
      view_type: string;
      package_name: string;
      origin: string;
      packageId: GUID;
      platform: string;
      cycleId: number;
    }>(this.util.getRawEvents, 5, 136, this.validate);
  }

  get formBuilderAutocompleteAddressFieldAddressLayoutChanged() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1360, this.validate);
  }

  get formBuilderAutocompleteAddressFieldViewerChooseAnAddress() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1363, this.validate);
  }

  get ascendPpClickOnNextInCyclePage() {
    return new EventsFilter<{
      cycle_name: string;
      isChecked: boolean;
      timeInPage: number;
      referralInfo: string;
      view_type: string;
      package_name: string;
      origin: string;
      cycle_id: number;
      packageId: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 137, this.validate);
  }

  get customerNotificationsSettingsPreviewEditChooseAudience() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      rule_id: GUID;
      platform: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 1375, this.validate);
  }

  get formBuilderComplexPhoneCountryCodeFieldDeleted() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1376, this.validate);
  }

  get dashboardSiteSelectorIsOpen() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      site_list: string;
      platform: string;
      msid: GUID;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 1377, this.validate);
  }

  get dashboardSiteSelectorIsLoadedWithoutScreenshots() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      platform: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 1378, this.validate);
  }

  get dashboardSiteSelectorErrorLoading() {
    return new EventsFilter<{
      is_from_search: boolean;
      page_view: string;
      view_type: string;
      platform: string;
      msid: GUID;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 1379, this.validate);
  }

  get ascendPpPurchasePageView() {
    return new EventsFilter<{
      cycle_name: string;
      referralInfo: string;
      view_type: string;
      package_name: string;
      origin: string;
      app_id: GUID;
      packageId: GUID;
      platform: string;
      cycleId: number;
    }>(this.util.getRawEvents, 5, 138, this.validate);
  }

  get dashboardSiteSelectorClickOnSite() {
    return new EventsFilter<{
      location: string;
      is_from_search: boolean;
      page_view: string;
      msid_clicked: GUID;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1380, this.validate);
  }

  get dashboardClickInSiteSelector() {
    return new EventsFilter<{
      is_from_search: boolean;
      page_view: string;
      view_type: string;
      item_name: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1381, this.validate);
  }

  get formBuilderComplexAddressEditFieldClick() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1382, this.validate);
  }

  get crmHomeInboxViewMessages() {
    return new EventsFilter<{
      countMessages: number;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1383, this.validate);
  }

  get crmHomeTopCarouselClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1384, this.validate);
  }

  get crmHomeTopCarouselMainCtaClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
      bannerName: string;
    }>(this.util.getRawEvents, 5, 1385, this.validate);
  }

  get crmHomeTopCarouselLoadStart() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1386, this.validate);
  }

  get crmHomeTopCarouselLoadEnd() {
    return new EventsFilter<{
      view_type: string;
      loadingTime: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1387, this.validate);
  }

  get formBuilderReportOnSubmissionAsSpam() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      button_name: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1389, this.validate);
  }

  get ascendPpPurchasePageChangeCard() {
    return new EventsFilter<{
      cycle_name: string;
      referralInfo: string;
      view_type: string;
      package_name: string;
      selection: string;
      origin: string;
      app_id: GUID;
      packageId: GUID;
      platform: string;
      cycleId: number;
    }>(this.util.getRawEvents, 5, 139, this.validate);
  }

  get ascendSelectCancelReason() {
    return new EventsFilter<{
      referralInfo: string;
      cancel_reason_text: string;
      cancel_reason_name: string;
      view_type: string;
      premium: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1390, this.validate);
  }

  get ascendCancelWindowApproveCancel() {
    return new EventsFilter<{
      referralInfo: string;
      view_type: string;
      selection: string;
      premium: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1391, this.validate);
  }

  get bmApiCallReceivedSrc5Evid1392() {
    return new EventsFilter<{
      method_name: string;
      url: Url;
      stack: string;
      route: string;
    }>(this.util.getRawEvents, 5, 1392, this.validate);
  }

  get ascendPpPurchasePageEnterPromo() {
    return new EventsFilter<{
      cycle_name: string;
      referralInfo: string;
      view_type: string;
      package_name: string;
      selection: string;
      origin: string;
      app_id: GUID;
      packageId: GUID;
      platform: string;
      cycleId: number;
    }>(this.util.getRawEvents, 5, 140, this.validate);
  }

  get rolesAndPermissionsSetUpTeamClick() {
    return new EventsFilter<{
      click_origin: string;
      platform: string;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1400, this.validate);
  }

  get teamManagementTeammatesPageLoad() {
    return new EventsFilter<{
      context: string;
      referral_info: string;
      origin: string;
      platform: string;
      msid: GUID;
      app_id: string;
      contributors_quota: number;
      contributors_count: number;
    }>(this.util.getRawEvents, 5, 1401, this.validate);
  }

  get teamManagementFilterByStatus() {
    return new EventsFilter<{
      context: string;
      status_selected: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1402, this.validate);
  }

  get teamManagementFilterByRole() {
    return new EventsFilter<{
      num_selected: number;
      context: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1403, this.validate);
  }

  get teamManagementViewTeamClicked() {
    return new EventsFilter<{
      context: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 1404, this.validate);
  }

  get teamManagementChangeRoleOpenDialog() {
    return new EventsFilter<{
      teammate_id: GUID;
      invite_status: string;
      context: string;
      current_role_ids: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1405, this.validate);
  }

  get teamManagementChangeRoleUpdate() {
    return new EventsFilter<{
      teammate_id: GUID;
      new_role_ids: string;
      invite_status: string;
      context: string;
      prev_role_ids: string;
      assignment_type: string;
      is_client: boolean;
      num_sites: number;
      platform: string;
      msid: GUID;
      num_folders: number;
    }>(this.util.getRawEvents, 5, 1406, this.validate);
  }

  get teamManagementRemoveTeammateOpenDialog() {
    return new EventsFilter<{
      teammate_id: GUID;
      invite_status: string;
      context: string;
      role_ids: string;
      platform: string;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1407, this.validate);
  }

  get teamManagementRemoveTeammateRemoveSuccess() {
    return new EventsFilter<{
      teammate_id: GUID;
      invite_status: string;
      context: string;
      role_ids: string;
      platform: string;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1408, this.validate);
  }

  get teamManagementInvitePeopleClick() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      upgrade_required: boolean;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1409, this.validate);
  }

  get ascendPpPurchasePageSubmitPurchase() {
    return new EventsFilter<{
      cycle_name: string;
      referralInfo: string;
      view_type: string;
      package_name: string;
      origin: string;
      app_id: GUID;
      packageId: GUID;
      platform: string;
      cycleId: number;
    }>(this.util.getRawEvents, 5, 141, this.validate);
  }

  get teamManagementInvitePeoplePageLoad() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
      contributors_quota: number;
      contributors_count: number;
      app_id: string;
      Has_ai_assistant: boolean;
    }>(this.util.getRawEvents, 5, 1410, this.validate);
  }

  get teamManagementInvitePeopleSendInvite() {
    return new EventsFilter<{
      context: string;
      number_of_invalid_emails: number;
      invite_role_ids: string;
      assignment_type: string;
      origin: string;
      invite_id: GUID;
      num_sites: number;
      platform: string;
      msid: GUID;
      number_of_valid_emails: number;
      num_folders: number;
      Logged_account_locations: string;
      New_collaborator_locations: string;
      contributors_quota: number;
      invite_role_names: string;
      contributors_count: number;
      app_id: string;
      Has_ai_assistant: boolean;
    }>(this.util.getRawEvents, 5, 1411, this.validate);
  }

  get teamManagementInvitePeopleResendInvite() {
    return new EventsFilter<{
      invite_status: string;
      context: string;
      invite_role_ids: string;
      invite_id: GUID;
      platform: string;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1412, this.validate);
  }

  get teamManagementInvitePeopleGetInviteLink() {
    return new EventsFilter<{
      invite_status: string;
      context: string;
      invite_id: GUID;
      platform: string;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1413, this.validate);
  }

  get teamManagementManageRolesClick() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1414, this.validate);
  }

  get teamManagementManageRolesPageLoad() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1415, this.validate);
  }

  get teamManagementManageRolesViewRole() {
    return new EventsFilter<{
      context: string;
      role_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1416, this.validate);
  }

  get teamManagementManageRolesRolePageLoad() {
    return new EventsFilter<{
      context: string;
      role_id: string;
      origin: string;
      mode: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1417, this.validate);
  }

  get teamManagementManageRolesDuplicateAndEditRole() {
    return new EventsFilter<{
      context: string;
      role_id: string;
      role_type: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 1418, this.validate);
  }

  get teamManagementManageRolesEditCustomRole() {
    return new EventsFilter<{
      context: string;
      role_id: string;
      msid: GUID;
      origin: string;
    }>(this.util.getRawEvents, 5, 1419, this.validate);
  }

  get teamManagementManageRolesUpdateRole() {
    return new EventsFilter<{
      num_scopes: number;
      context: string;
      role_id: string;
      old_scope_ids: string;
      new_scope_ids: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1420, this.validate);
  }

  get teamManagementManageRolesCreateNewRoleClick() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
      Has_ai_assistant: boolean;
    }>(this.util.getRawEvents, 5, 1421, this.validate);
  }

  get teamManagementManageRolesSaveNewRole() {
    return new EventsFilter<{
      custom_role_scopes: string;
      num_scopes: number;
      context: string;
      role_id: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1422, this.validate);
  }

  get teamManagementManageRolesDeleteCustomRoleClick() {
    return new EventsFilter<{
      num_scopes: number;
      context: string;
      role_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1423, this.validate);
  }

  get teamManagementManageRolesDeleteCustomRoleSuccess() {
    return new EventsFilter<{
      num_scopes: number;
      context: string;
      role_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1424, this.validate);
  }

  get teamManagementManageRolesCannotDeleteRole() {
    return new EventsFilter<{
      num_scopes: number;
      context: string;
      role_id: string;
      platform: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1425, this.validate);
  }

  get teamManagementLearnMoreClick() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1426, this.validate);
  }

  get teamManagementEditTeamProfileClick() {
    return new EventsFilter<{ platform: string; }>(this.util.getRawEvents, 5, 1427, this.validate);
  }

  get teamManagementSaveTeamProfile() {
    return new EventsFilter<{
      is_logo_shown: boolean;
      onboarding: boolean;
      platform: string;
      is_valid_team_name: boolean;
    }>(this.util.getRawEvents, 5, 1428, this.validate);
  }

  get teamManagementJoinTheTeamPageLoad() {
    return new EventsFilter<{
      accepted_by_user: GUID;
      already_accepted: boolean;
      invited_to_account_id: GUID;
      context: string;
      origin: string;
      invite_id: GUID;
      invitee_type: string;
      platform: string;
      email_type: string;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1429, this.validate);
  }

  get teamManagementJoinTheTeamClickContinue() {
    return new EventsFilter<{
      accepted_by_user: GUID;
      invited_to_account_id: GUID;
      invite_id: GUID;
      action_chosen: string;
      platform: string;
      app_id: string;
      context: string;
    }>(this.util.getRawEvents, 5, 1430, this.validate);
  }

  get teamManagementJoinTheTeamClickOnLearnMore() {
    return new EventsFilter<{
      accepted_by_user: GUID;
      already_accepted: boolean;
      invited_to_account_id: GUID;
      invite_id: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 1431, this.validate);
  }

  get rolesAndPermissionsClickOnUpgradeButton() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1432, this.validate);
  }

  get rolesAndPermissionsInvitePeopleError() {
    return new EventsFilter<{
      context: string;
      error_message: string;
      platform: string;
      msid: GUID;
      app_id: string;
    }>(this.util.getRawEvents, 5, 1433, this.validate);
  }

  get rolesAndPermissionsUpgradePopUpLoad() {
    return new EventsFilter<{
      context: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1434, this.validate);
  }

  get rolesAndPermissionsAcceptInviteFromMobilePageLoad() {
    return new EventsFilter<{
      context: string;
      inviteToken: string;
      invite_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1435, this.validate);
  }

  get rolesAndPermissionsAcceptInviteFromMobileClickContinueToSite() {
    return new EventsFilter<{
      context: string;
      inviteToken: string;
      invite_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1436, this.validate);
  }

  get rolesAndPermissionsAcceptInviteFromMobileClickManageSiteOnTheWixApp() {
    return new EventsFilter<{
      context: string;
      inviteToken: string;
      invite_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1437, this.validate);
  }

  get rolesAndPermissionsInvitePeopleAnswerOnInvitePurpose() {
    return new EventsFilter<{
      other_text: string;
      context: string;
      is_partner: boolean;
      invite_for: string;
      invite_id: GUID;
      platform: string;
      msid: GUID;
      num_invites: string;
    }>(this.util.getRawEvents, 5, 1438, this.validate);
  }

  get rolesAndPermissionsInvitePeopleSkipOnInvitePurposeQuestion() {
    return new EventsFilter<{
      click_type: string;
      context: string;
      is_partner: boolean;
      invite_id: GUID;
      platform: string;
      msid: GUID;
      num_invites: string;
    }>(this.util.getRawEvents, 5, 1439, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersSelectSitesAndFoldersModalLoad() {
    return new EventsFilter<{
      teammate_id: GUID;
      context: string;
      role_ids: string;
      role_id: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 1440, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersClickOnSelectInSfModal() {
    return new EventsFilter<{
      teammate_id: GUID;
      context: string;
      role_ids: string;
      role_id: string;
      assignment_type: string;
      num_sites: number;
      platform: string;
      num_folders: number;
      view: string;
    }>(this.util.getRawEvents, 5, 1441, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersClickOnSelectMore() {
    return new EventsFilter<{
      teammate_id: GUID;
      context: string;
      role_ids: string;
      role_id: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 1442, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersClickOnShowMoreSites() {
    return new EventsFilter<{
      teammate_id: GUID;
      context: string;
      role_ids: string;
      role_id: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 1443, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersRemoveSiteFolderClick() {
    return new EventsFilter<{
      teammate_id: GUID;
      context: string;
      type_removed: string;
      role_ids: string;
      role_id: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 1444, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersClickOnAssignMoreRoles() {
    return new EventsFilter<{
      teammate_id: GUID;
      context: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 1445, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersSiteRpWithTeamModalLoad() {
    return new EventsFilter<{
      context: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1446, this.validate);
  }

  get rolesAndPermissionsSitesAndFoldersChooseActionInSiteRpWithTeamModal() {
    return new EventsFilter<{
      context: string;
      action_chosen: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1447, this.validate);
  }

  get rolesAndPermissionsPeoplePermissionsComponentLoad() {
    return new EventsFilter<{
      folder_id: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1448, this.validate);
  }

  get rolesAndPermissionsPeoplePermissionsComponentClickOnManage() {
    return new EventsFilter<{
      folder_id: number;
      manage_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1449, this.validate);
  }

  get rolesAndPermissionsTeamManagementSearchText() {
    return new EventsFilter<{
      context: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 1450, this.validate);
  }

  get headerLoaded() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1452, this.validate);
  }

  get formBuilderCaptchaBoxModalLoadedClient() {
    return new EventsFilter<{
      visitor_id: GUID;
      reason: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      btype: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1453, this.validate);
  }

  get formBuilderCaptchaBoxModalClosedClient() {
    return new EventsFilter<{
      visitor_id: GUID;
      reason: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      btype: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1454, this.validate);
  }

  get customerNotificationsSettingsPreviewEditLoadingTime() {
    return new EventsFilter<{
      view_type: string;
      loadingTime: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1455, this.validate);
  }

  get settingsLobbyHoverOverAnItem() {
    return new EventsFilter<{
      item_location_on_page: number;
      section_name: string;
      view_type: string;
      cta_name: string;
      page_id: string;
      item_location: string;
      item_name: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1457, this.validate);
  }

  get bizmgrComponentRequestToLoad() {
    return new EventsFilter<{
      component_name: string;
      state: string;
      view_type: string;
      sub_view: string;
      component_app_id: string;
      app_id: string;
      platform: string;
      component_id: string;
      hosting: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 1458, this.validate);
  }

  get bizmgrComponentLoadingStart() {
    return new EventsFilter<{
      component_name: string;
      hosting_platform: string;
      state: string;
      view_type: string;
      sub_view: string;
      page_id: string;
      host_id: string;
      component_app_id: string;
      app_id: string;
      platform: string;
      component_id: string;
      hosting_platform_context_id: string;
      hosting: string;
      component_type: string;
      msid: GUID;
      view: string;
      route: string;
      internalRoute: string;
    }>(this.util.getRawEvents, 5, 1459, this.validate);
  }

  get bizmgrComponentLoadingFinish() {
    return new EventsFilter<{
      component_name: string;
      hosting_platform: string;
      state: string;
      loading_time_from_start_loading_page: number;
      view_type: string;
      prev_page_id: string;
      loading_time_from_host_load: number;
      sub_view: string;
      page_id: string;
      is_first: boolean;
      host_id: string;
      component_app_id: string;
      loading_time_from_host_platform_load: number;
      app_id: string;
      platform: string;
      component_id: string;
      hosting_platform_context_id: string;
      hosting: string;
      component_type: string;
      msid: GUID;
      view: string;
      loading_time: number;
      route: string;
      internalRoute: string;
    }>(this.util.getRawEvents, 5, 1460, this.validate);
  }

  get bizmgrComponentLoadingWithAnError() {
    return new EventsFilter<{
      component_name: string;
      hosting_platform: string;
      state: string;
      context: string;
      view_type: string;
      loading_time_from_host_load: number;
      sub_view: string;
      error_type: string;
      host_id: string;
      component_app_id: string;
      loading_time_from_host_platform_load: number;
      app_id: string;
      platform: string;
      component_id: string;
      hosting: string;
      component_type: string;
      msid: GUID;
      interval_load_time: number;
      view: string;
      route: string;
      internalRoute: string;
    }>(this.util.getRawEvents, 5, 1461, this.validate);
  }

  get bizmgrComponentComponentWasShown() {
    return new EventsFilter<{
      component_name: string;
      state: string;
      view_type: string;
      sub_view: string;
      host_id: string;
      component_app_id: string;
      app_id: string;
      platform: string;
      component_id: string;
      hosting: string;
      msid: GUID;
      view: string;
      route: string;
      internalRoute: string;
    }>(this.util.getRawEvents, 5, 1462, this.validate);
  }

  get dashboardFinishLoadingBasicDashboardWidgets() {
    return new EventsFilter<{
      loading_time_from_start: number;
      sub_view: string;
      loading_time_from_module: number;
      hosting: string;
      refferal_info: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 1463, this.validate);
  }

  get invoicesSetBusinessInfoModalClickOnAddContinue() {
    return new EventsFilter<{
      view_type: string;
      appDefId: GUID;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1464, this.validate);
  }

  get invoicesSetBusinessInfoModalClickOnCancel() {
    return new EventsFilter<{
      view_type: string;
      appDefId: GUID;
      origin: string;
      cancelType: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1465, this.validate);
  }

  get headerFullyLoaded() {
    return new EventsFilter<{
      page_view: string;
      is_partner: boolean;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1467, this.validate);
  }

  get dashboardClickOnItemFromHeader() {
    return new EventsFilter<{
      name: string;
      page_view: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 147, this.validate);
  }

  get rolesAndPermissionsInvitePeopleAddRemoveAnotherRoleOnDiffSiteClick() {
    return new EventsFilter<{
      referral_info: string;
      button_name: string;
      role_id: string;
      origin: string;
      invite_id: GUID;
      platform: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 1472, this.validate);
  }

  get nyaExposureEvent() {
    return new EventsFilter<{
      msid: GUID;
      exposure_name: string;
    }>(this.util.getRawEvents, 5, 148, this.validate);
  }

  get generalExposureEvent() {
    return new EventsFilter<{
      exposure_name: string;
      label_name: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 149, this.validate);
  }

  get formBuilderBizManagerChooseAForm() {
    return new EventsFilter<{
      option: string;
      visitor_id: GUID;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1493, this.validate);
  }

  get formBuilderBackofficeFormChooseATemplate() {
    return new EventsFilter<{
      option: string;
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1494, this.validate);
  }

  get formBuilderBackofficeFormChooseElement() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      fieldType: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1496, this.validate);
  }

  get formBuilderBackofficeFormDeleteElement() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      fieldType: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1497, this.validate);
  }

  get formBuilderBackofficeFormCloneElement() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      fieldType: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1498, this.validate);
  }

  get dashboardSiteNavigation() {
    return new EventsFilter<{
      view_type: string;
      link: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 15, this.validate);
  }

  get dashboardMySitesActionSelectionPageView() {
    return new EventsFilter<{
      view_type: string;
      no_of_html_sites: number;
      origin: string;
      no_of_sites: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 150, this.validate);
  }

  get formBuilderBackofficeFormSaveForm() {
    return new EventsFilter<{
      template_name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1501, this.validate);
  }

  get formBuilderBackofficeFormShareForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1504, this.validate);
  }

  get formBuilderBackofficeFormPreviewForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      form_guid: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1505, this.validate);
  }

  get formBuilderBackofficeFormFormSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1506, this.validate);
  }

  get formBuilderBackofficeFormEditTitleDescription() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1507, this.validate);
  }

  get dashboardMySitesSiteSelectionPageView() {
    return new EventsFilter<{
      view_type: string;
      no_of_html_sites: number;
      origin: string;
      no_of_sites: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 151, this.validate);
  }

  get crmHomeSuggestionsCarouselClickCta() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
      bannerName: string;
    }>(this.util.getRawEvents, 5, 1511, this.validate);
  }

  get crmHomeSuggestionsCarouselCloseBanner() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
      bannerName: string;
    }>(this.util.getRawEvents, 5, 1512, this.validate);
  }

  get crmHomeSuggestionsCarouselClickOnCarousel() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1513, this.validate);
  }

  get dashboardMySitesSiteSelectionPageNumberView() {
    return new EventsFilter<{
      view_type: string;
      no_of_html_sites: number;
      no_of_sites: number;
      platform: string;
      msid: GUID;
      page_number: number;
      prev_page: number;
    }>(this.util.getRawEvents, 5, 152, this.validate);
  }

  get dashboardMySitesClickPromote() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      place: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 153, this.validate);
  }

  get formBuilderBackofficeFormSubmissionClick() {
    return new EventsFilter<{
      form_name: string;
      visitorId: GUID;
      visitor_id: GUID;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      form_guid: GUID;
      template: string;
      referrer: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1531, this.validate);
  }

  get formBuilderBackofficeFormSubmissionSuccess() {
    return new EventsFilter<{
      form_name: string;
      visitorId: GUID;
      visitor_id: GUID;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      form_guid: GUID;
      template: string;
      referrer: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1532, this.validate);
  }

  get formBuilderBackofficeFormSubmissionFailed() {
    return new EventsFilter<{
      form_name: string;
      visitorId: GUID;
      visitor_id: GUID;
      errorReason: string;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      form_guid: GUID;
      template: string;
      referrer: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1533, this.validate);
  }

  get formBuilderBackofficeFormReorderElements() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1534, this.validate);
  }

  get formBuilderBackofficeFormViewSubmissionTableFromSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1535, this.validate);
  }

  get formBuilderBackofficeFormAddEmailInSettings() {
    return new EventsFilter<{
      builderOrigin: string;
      emailType: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1536, this.validate);
  }

  get formBuilderBackofficeFormSettingsToggleEmailType() {
    return new EventsFilter<{
      builderOrigin: string;
      emailType: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1539, this.validate);
  }

  get dashboardMySitesWelcomeMessageForProsDisplayed() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 154, this.validate);
  }

  get quotesCreateInvoiceEnterItemDescription() {
    return new EventsFilter<{
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1540, this.validate);
  }

  get quotesCreateInvoiceClickOnSeeMoreItems() {
    return new EventsFilter<{
      view_type: string;
      productSource: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1541, this.validate);
  }

  get quotesCreateInvoiceRearrangeItems() {
    return new EventsFilter<{
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1542, this.validate);
  }

  get quotesCreateInvoiceClickOnAddTax() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1543, this.validate);
  }

  get quotesCreateInvoiceTaxSelected() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1544, this.validate);
  }

  get quotesCreateInvoiceClickOnInvoiceSettings() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1545, this.validate);
  }

  get quotesCreateInvoiceAddRemoveDiscount() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1546, this.validate);
  }

  get quotesCreateInvoiceLeavingCreateInvoicePagePopUpAppears() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1547, this.validate);
  }

  get quotesCreateInvoiceLeavingCreateInvoicePagePopUpResolution() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1548, this.validate);
  }

  get quotesPreviewInvoiceClickInPreviewPageMenu() {
    return new EventsFilter<{
      source: string;
      externalId: GUID;
      view_type: string;
      invoiceType: string;
      origin: string;
      invoiceSource: GUID;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1549, this.validate);
  }

  get dashboardMySitesWelcomeMessageForProsClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 155, this.validate);
  }

  get quotesCreateInvoiceUserClickOnSendInvoice() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1550, this.validate);
  }

  get quotesCreateInvoiceSendInvoiceModalResolution() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1551, this.validate);
  }

  get quotesCreateInvoiceSendInvoiceModalFieldChange() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      fieldName: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1552, this.validate);
  }

  get quotesCreateInvoiceAdditionalInfoFieldChange() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      fieldName: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1553, this.validate);
  }

  get quotesCreateInvoiceChangingEmailOfAContactForPaidInvoice() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1554, this.validate);
  }

  get quotesCreateInvoiceAdditionalInfoHoverOnTooltipShown() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      fieldName: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1555, this.validate);
  }

  get notificationClickOnAccountNotification() {
    return new EventsFilter<{
      feed_name: string;
      channel: string;
      view_type: string;
      grouped_sites: string;
      contact_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1556, this.validate);
  }

  get formBuilderBackofficeFormSettingsContactSync() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1557, this.validate);
  }

  get dashboardAccountSettingsRenderedWithShowProBoxValue() {
    return new EventsFilter<{
      view_type: string;
      show_pro_box: boolean;
      platform: string;
    }>(this.util.getRawEvents, 5, 156, this.validate);
  }

  get formBuilderBackofficeFormRemoveDescription() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1560, this.validate);
  }

  get invoicesNewRecurrentInvoiceClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1564, this.validate);
  }

  get invoicesChooseADueDateRecurringInvoices() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1565, this.validate);
  }

  get invoicesRecurringSelectABillingCycle() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      value: string;
    }>(this.util.getRawEvents, 5, 1566, this.validate);
  }

  get invoicesRecurringSelectNumberOfOccurrences() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      value: string;
    }>(this.util.getRawEvents, 5, 1567, this.validate);
  }

  get invoicesRecurringSelectCustomNumberOfOccurrences() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      value: string;
    }>(this.util.getRawEvents, 5, 1568, this.validate);
  }

  get invoicesRecurringIsAutoCharge() {
    return new EventsFilter<{
      chargeAutomatically: boolean;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1569, this.validate);
  }

  get dashboardMySitesSiteHomeAlertMessageFromPremiumDisplay() {
    return new EventsFilter<{
      alert_id: GUID;
      alert_type: string;
      view_type: string;
      premium_alert_id: string;
      platform: string;
      hosting: string;
    }>(this.util.getRawEvents, 5, 157, this.validate);
  }

  get invoicesRecurringClickOnGetStarted() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1570, this.validate);
  }

  get invoicesRecurringClickOnHowDoRecurringInvoicesWork() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1571, this.validate);
  }

  get invoicesRecurringSetPaymentTermsPageClickOnNext() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1572, this.validate);
  }

  get invoicesRecurringSetPaymentTermsPageClickOnCancel() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1573, this.validate);
  }

  get invoicesRecurringClickOnBackToastInNewRecurringInvoicesCreationPage() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1574, this.validate);
  }

  get invoicesRecurringClickOnConnectNowForAutoCharging() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1575, this.validate);
  }

  get invoicesRecurringClickOnLearnMoreAboutAutomaticCharging() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1576, this.validate);
  }

  get invoicesRecurringFilterInvoices() {
    return new EventsFilter<{
      name: string;
      num_of_invoices: number;
      view_type: string;
      origin_device: string;
      platform: string;
      filter_type: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1577, this.validate);
  }

  get invoicesRecurringTableActions() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      platform: string;
      msid: string;
      action: string;
    }>(this.util.getRawEvents, 5, 1578, this.validate);
  }

  get invoicesRecurringSearchInvoices() {
    return new EventsFilter<{
      num_of_invoices: number;
      view_type: string;
      text: string;
      num_of_results: number;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1579, this.validate);
  }

  get dashboardMySitesSiteHomeAlertMessageFromPremiumClick() {
    return new EventsFilter<{
      alert_type: string;
      view_type: string;
      premium_alert_id: string;
      platform: string;
      hosting: string;
      action: string;
    }>(this.util.getRawEvents, 5, 158, this.validate);
  }

  get invoicesRecurringCancelSubscription() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      value: string;
    }>(this.util.getRawEvents, 5, 1580, this.validate);
  }

  get invoicesRecurringClickOnNewRecurringInvoiceSrc5Evid1581() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1581, this.validate);
  }

  get invoicesRecurringHoverOnNextWhenNotConnectedToPaymentMethod() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1582, this.validate);
  }

  get invoicesRecurringBackToRecurringInvoiceFromConnectPayment() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1583, this.validate);
  }

  get cookieBannerThemeClicked() {
    return new EventsFilter<{
      is_banner_live: string;
      theme_clicked: string;
    }>(this.util.getRawEvents, 5, 1584, this.validate);
  }

  get formBuilderFormSettingsNotificationsClickOnButton() {
    return new EventsFilter<{
      recommendations_chosen: string;
      uuid: GUID;
      visitor_id: GUID;
      button_name: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1586, this.validate);
  }

  get invoicesRecurringClickOnNewRecurringInvoice() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1587, this.validate);
  }

  get formBuilderFormSettingsNotificationsToggle() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      type: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1588, this.validate);
  }

  get mySitesShowTooltip() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      num_of_sites: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 159, this.validate);
  }

  get inAppTipsGenericExposureEvent() {
    return new EventsFilter<{
      offering_guid: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1590, this.validate);
  }

  get invoicesOwnerappClickOnCreateNewInvoice() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      tabName: string;
      invoiceType: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1592, this.validate);
  }

  get invoicesOwnerappClickOnInvoice() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      tabName: string;
      invoiceType: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 1593, this.validate);
  }

  get invoicesOwnerappClickOnViewAllInvoice() {
    return new EventsFilter<{
      view_type: string;
      tabName: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1594, this.validate);
  }

  get invoicesOwnerappClickOnTabs() {
    return new EventsFilter<{
      button_name: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1595, this.validate);
  }

  get dashboardSiteSelectorStartLoading() {
    return new EventsFilter<{
      filtered: string;
      selectionType: string;
      view_type: string;
      action_url: Url;
      referral: Url;
      status: string;
      siteType: string;
      version_experienced: string;
      site_type_enriched: number;
      platform: string;
      page_url: Url;
      device: string;
    }>(this.util.getRawEvents, 5, 1596, this.validate);
  }

  get dashboardSiteSelectorSearch() {
    return new EventsFilter<{
      filtered_by: string;
      selectionType: string;
      view_type: string;
      site_type: string;
      siteType: string;
      site_type_enriched: number;
      platform: string;
      device: string;
    }>(this.util.getRawEvents, 5, 1597, this.validate);
  }

  get dashboardSiteSelectorSearchResults() {
    return new EventsFilter<{
      filtered_by: string;
      selectionType: string;
      view_type: string;
      site_type: string;
      status: string;
      site_type_enriched: number;
      type: string;
      platform: string;
      device: string;
    }>(this.util.getRawEvents, 5, 1598, this.validate);
  }

  get dashboardSiteSelectorUserNotification() {
    return new EventsFilter<{
      filtered_by: string;
      selectionType: string;
      view_type: string;
      notificationType: string;
      siteType: string;
      site_type_enriched: number;
      platform: string;
      device: string;
    }>(this.util.getRawEvents, 5, 1599, this.validate);
  }

  get dashboardSiteQuickActionClick() {
    return new EventsFilter<{
      name: string;
      site_class: string;
      view_type: string;
      sub_view: string;
      referral: string;
      origin: string;
      cta: string;
      esi: GUID;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 16, this.validate);
  }

  get mySitesTooltipClose() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      num_of_sites: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 160, this.validate);
  }

  get headerStartLoading() {
    return new EventsFilter<{
      page_view: string;
      is_partner: boolean;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1601, this.validate);
  }

  get invoicesRecurringMessagePresentedWhenUserReachesMaxNumberOfRecurringInvoices() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1602, this.validate);
  }

  get formBuilderWixDataCheck() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      origin: string;
      msid: GUID;
      installed: boolean;
    }>(this.util.getRawEvents, 5, 1607, this.validate);
  }

  get dashboardSiteSelectorMoreSitesLoadedSuccessfully() {
    return new EventsFilter<{
      filtered: string;
      selectionType: string;
      view_type: string;
      site_type: string;
      referral: Url;
      loadingTime: number;
      status: string;
      siteType: string;
      site_type_enriched: number;
      platform: string;
      sites_count: number;
      device: string;
    }>(this.util.getRawEvents, 5, 1608, this.validate);
  }

  get mySitesHoverSite() {
    return new EventsFilter<{
      view_type: string;
      ds_origin: string;
      is_premium: boolean;
      msid: GUID;
      is_published: boolean;
    }>(this.util.getRawEvents, 5, 161, this.validate);
  }

  get formBuilderBackofficeFormPostSaveForm() {
    return new EventsFilter<{
      template_name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1611, this.validate);
  }

  get formBuilderBackOfficeFormClickEditForm() {
    return new EventsFilter<{
      form_name: string;
      template_name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1618, this.validate);
  }

  get searchSearchInDialog() {
    return new EventsFilter<{
      query: string;
      view_type: string;
      triggred_from: string;
      sub_view: string;
      results: string;
      origin: string;
      seen_results: string;
      platform: string;
      view: string;
      hosting_platform_context_id: string;
      isFromSettingsSearch: boolean;
    }>(this.util.getRawEvents, 5, 162, this.validate);
  }

  get formBuilderBackofficeFormShareOpenForm() {
    return new EventsFilter<{
      builderOrigin: string;
      uuid: GUID;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1621, this.validate);
  }

  get formBuilderBackofficeFormShareCopyLink() {
    return new EventsFilter<{
      builderOrigin: string;
      uuid: GUID;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1622, this.validate);
  }

  get rolesAndPermissionsInvitePeopleClickOnGetYourMailbox() {
    return new EventsFilter<{
      context: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1625, this.validate);
  }

  get rolesAndPermissionsMarkAsAClient() {
    return new EventsFilter<{
      teammate_id: GUID;
      invite_status: string;
      role_ids: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1626, this.validate);
  }

  get dashboardDuplicateSiteActionWindowNavigationClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      cta: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1627, this.validate);
  }

  get formBuilderBackofficeFormCloseNote() {
    return new EventsFilter<{
      form_name: string;
      template_name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1628, this.validate);
  }

  get searchScrollingInResultView() {
    return new EventsFilter<{
      view_type: string;
      sub_view: string;
      origin: string;
      platform: string;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 163, this.validate);
  }

  get formBuilderBackofficeFormClickOnLink() {
    return new EventsFilter<{
      form_name: string;
      template_name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      nextView: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1631, this.validate);
  }

  get invoicesRecurringSelectPremiumPlanIncludedOnlyServices() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
      value: string;
    }>(this.util.getRawEvents, 5, 1632, this.validate);
  }

  get invoicesRecurringAddPremiumPlanClick() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1633, this.validate);
  }

  get invoicesRecurringPremiumPlanSelected() {
    return new EventsFilter<{
      package_id: string;
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1634, this.validate);
  }

  get invoicesRecurringErrorMessageForInvoiceAmountLowerThenPremium() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      errorReason: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1635, this.validate);
  }

  get invoicesRecurringTableActionsCancelModalClick() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      platform: string;
      msid: string;
      action: string;
    }>(this.util.getRawEvents, 5, 1636, this.validate);
  }

  get searchFocusedOnASearchResult() {
    return new EventsFilter<{
      title_id: string;
      result: string;
      section_index: number;
      query: string;
      view_type: string;
      sub_view: string;
      section: string;
      item_index_in_section: number;
      origin: string;
      is_first_hover: boolean;
      title: string;
      platform: string;
      item_index: number;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 164, this.validate);
  }

  get cookieBannerCustomColorInaccessible() {
    return new EventsFilter<{
      is_banner_site_palette_equal: string;
      is_banner_live: string;
      is_site_palette_inaccessible: string;
    }>(this.util.getRawEvents, 5, 1644, this.validate);
  }

  get clickOnSearchEverywhereInSettingsLobbysSearchSrc5Evid1646() {
    return new EventsFilter<{
      query: string;
      origin: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 1646, this.validate);
  }

  get gizaOverlayPageModalCtaClicked1648() {
    return new EventsFilter<{
      hosting_platform: string;
      page_id: string;
      page_name: string;
      app_id: string;
      hosting_platform_context_id: string;
      cta: string;
    }>(this.util.getRawEvents, 5, 1648, this.validate);
  }

  get bizManagerSidebarItemSelectedHighlighted() {
    return new EventsFilter<{
      name: string;
      sidebar_name: string;
      view_type: string;
      counter: number;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1649, this.validate);
  }

  get searchClickOnSearchResult() {
    return new EventsFilter<{
      title_id: string;
      section_index: number;
      query: string;
      view_type: string;
      sub_view: string;
      section: string;
      item_index_in_section: number;
      origin: string;
      title: string;
      platform: string;
      item_index: number;
      view: string;
      category: string;
      pageId: string;
      isFromSettingsSearch: boolean;
      resultPageId: string;
      resultPageName: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 165, this.validate);
  }

  get cookieBannerUouRestoreDefaultText() {
    return new EventsFilter<{
      is_cookie_banner_published: boolean;
      default_text_location: string;
      was_cookie_banner_published: boolean;
    }>(this.util.getRawEvents, 5, 1650, this.validate);
  }

  get invoicesRecurringClientSelected() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      contact_id: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1651, this.validate);
  }

  get invoicesRecurringSiteOfClientSelected() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      clientBillingMsids: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1652, this.validate);
  }

  get formBuilderBizMgrFromTheAdditionalActionMenuClickAction() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      button_name: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1654, this.validate);
  }

  get formBuilderBizMgrFormDeletion() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      button_name: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1656, this.validate);
  }

  get chatSettingsPcfOfflineOnlineFormChevron() {
    return new EventsFilter<{
      teammate_id: GUID;
      invite_status: string;
      role_ids: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1658, this.validate);
  }

  get searchCloseSearchDialog() {
    return new EventsFilter<{
      result: string;
      query: string;
      view_type: string;
      sub_view: string;
      reason: string;
      time_in_dialog: number;
      origin: string;
      platform: string;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 166, this.validate);
  }

  get siteActionsDropDownListShown() {
    return new EventsFilter<{
      view_mode: string;
      site_class: string;
      sub_account_id: GUID;
      view_type: string;
      sub_view: string;
      origin: string;
      cta: string;
      platform: string;
      msid: GUID;
      permitted_items: string;
      itemsList: string;
    }>(this.util.getRawEvents, 5, 1662, this.validate);
  }

  get teamManagementSwitchToStudioPageLoad() {
    return new EventsFilter<{ platform: string; }>(this.util.getRawEvents, 5, 1664, this.validate);
  }

  get formBuilderBackofficeFormUserChangeLtrRtl() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1665, this.validate);
  }

  get formBuilderBackofficeFormAutoAddressRadioButton() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 1666, this.validate);
  }

  get cookieBannerCustomFontAndSizeClicked() {
    return new EventsFilter<{
      click_description: string;
      click_type: string;
      is_banner_live: string;
    }>(this.util.getRawEvents, 5, 1669, this.validate);
  }

  get clickOnSeeMoreButton() {
    return new EventsFilter<{
      title_id: string;
      result: string;
      section_index: number;
      query: string;
      view_type: string;
      sub_view: string;
      section: string;
      origin: string;
      title: string;
      platform: string;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 167, this.validate);
  }

  get bizManagerSetupWidgetSectionCompleted() {
    return new EventsFilter<{
      group_id: string;
      skipped_items: string;
      resolved_items: string;
      asset_campaign_guid: string;
      visibility_trigger: string;
      setup_location: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1671, this.validate);
  }

  get clickOnShowAllButton() {
    return new EventsFilter<{
      title_id: string;
      result: string;
      section_index: number;
      query: string;
      view_type: string;
      sub_view: string;
      section: string;
      origin: string;
      title: string;
      platform: string;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 168, this.validate);
  }

  get ssoSettingsChangeActivationStatus() {
    return new EventsFilter<{
      sso_id: GUID;
      view_type: string;
      is_mandatory: boolean;
      sso_user_type: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 1684, this.validate);
  }

  get ssoSettingsIsMandatoryToggleStatus() {
    return new EventsFilter<{
      sso_id: GUID;
      view_type: string;
      status: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 1685, this.validate);
  }

  get mySitesUnableToMoveSiteToTrashMessageShown() {
    return new EventsFilter<{
      view_type: string;
      reason: string;
      origin: string;
      messageTitle: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1686, this.validate);
  }

  get financialSettingsGoToInvoicesPriceQuotes() {
    return new EventsFilter<{
      view_type: string;
      type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1688, this.validate);
  }

  get invoicesFirstTimeExpirienceGetStarted() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1689, this.validate);
  }

  get invoicesFirstTimeExpirienceLearnMore() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1690, this.validate);
  }

  get invoicesDepositRequestDeposit() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1692, this.validate);
  }

  get invoicesDepositChooseFlatOrPercentageDeposit() {
    return new EventsFilter<{
      toggle: boolean;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1693, this.validate);
  }

  get invoicesDepositLearnMore() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1694, this.validate);
  }

  get invoicesConnectPaymentLearnMore() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1695, this.validate);
  }

  get invoicesDepositDropDeposit() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 1697, this.validate);
  }

  get pingPingWidgetLoadedInEditNotificationDialog() {
    return new EventsFilter<{
      view_type: string;
      config: string;
      isPMFlow: boolean;
      platform: string;
      msid: GUID;
      ruleId: string;
    }>(this.util.getRawEvents, 5, 1698, this.validate);
  }

  get pingSaveInEditNotificationDialog() {
    return new EventsFilter<{
      eventInfo: string;
      previousStatus: string;
      pingTemplateId: string;
      view_type: string;
      config: string;
      isWidgetless: boolean;
      componentChanged: string;
      isPMFlow: boolean;
      platform: string;
      msid: GUID;
      ruleId: string;
      currentStatus: string;
    }>(this.util.getRawEvents, 5, 1699, this.validate);
  }

  get dashboardSiteAppPromo() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 17, this.validate);
  }

  get teamManagementClickToLearnMore() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 170, this.validate);
  }

  get locationsLoadedOnBusinessInfoPageSrc5Evid1700() {
    return new EventsFilter<{
      msid: GUID;
      hostingPlatformContextId: string;
      numLocations: number;
    }>(this.util.getRawEvents, 5, 1700, this.validate);
  }

  get apesUpdateTooltip() {
    return new EventsFilter<{
      isPreinstalled: boolean;
      pingTemplateId: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 1701, this.validate);
  }

  get apesVersioningPreviewNewEmail() {
    return new EventsFilter<{
      isPreinstalled: boolean;
      pingTemplateId: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 1702, this.validate);
  }

  get apesVersioningUpdateNewVersion() {
    return new EventsFilter<{
      isPreinstalled: boolean;
      pingTemplateId: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 1703, this.validate);
  }

  get apesVersioningUpdateNewVersionError() {
    return new EventsFilter<{
      isPreinstalled: boolean;
      pingTemplateId: string;
      view_type: string;
      errorReason: string;
      origin: string;
      platform: string;
      msid: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 1704, this.validate);
  }

  get apesVersioningSaveAnUpdateError() {
    return new EventsFilter<{
      isPreinstalled: boolean;
      pingTemplateId: string;
      view_type: string;
      errorReason: string;
      origin: string;
      platform: string;
      msid: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 1705, this.validate);
  }

  get dashboardAfterSiteSelectorStartedLoadingAndBeforeFinished() {
    return new EventsFilter<{
      filtered: string;
      selectionType: string;
      view_type: string;
      place_description: string;
      referral: string;
      status: string;
      siteType: string;
      site_type_enriched: number;
      platform: string;
      page_url: Url;
      device: string;
    }>(this.util.getRawEvents, 5, 1706, this.validate);
  }

  get formBuilderEmailSettingsInSchemaButExperimentClosed() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1708, this.validate);
  }

  get siteSelectorSiteChosen() {
    return new EventsFilter<{
      filtered: string;
      positionIndex: number;
      is_partner_dashboard: boolean;
      result: string;
      selectionType: string;
      view_type: string;
      sites_available: number;
      action_url: Url;
      siteType: string;
      previous_position_index: number;
      referer: Url;
      esi: GUID;
      platform: string;
      is_default_selection: boolean;
      sites_count: number;
      device: string;
    }>(this.util.getRawEvents, 5, 1709, this.validate);
  }

  get teamManagementEditTeamProfileOpenDialog() {
    return new EventsFilter<{
      onboarding: boolean;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 171, this.validate);
  }

  get mySitesClickOnUrl() {
    return new EventsFilter<{
      url: Url;
      sub_view: string;
      sectionTitle: string;
      origin: string;
      cta: string;
      platform: string;
      view: string;
    }>(this.util.getRawEvents, 5, 1713, this.validate);
  }

  get dashboardSiteCategoryShown() {
    return new EventsFilter<{
      has_category: boolean;
      site_category: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1714, this.validate);
  }

  get dashboardSiteSelectorClickForDebuggingPurposes() {
    return new EventsFilter<{
      filtered: string;
      positionIndex: number;
      site_id: GUID;
      is_partner_dashboard: boolean;
      result: string;
      selectionType: string;
      view_type: string;
      siteTypeName: string;
      action_url: Url;
      siteType: string;
      sites_number: number;
      cta: string;
      position: number;
      site_type_enriched: number;
      referer: Url;
      esi: GUID;
      platform: string;
      msid: GUID;
      sites_count: number;
      device: string;
    }>(this.util.getRawEvents, 5, 1715, this.validate);
  }

  get dashboardSiteSelectorLoadedSuccessfullyForDebuggingPurposes() {
    return new EventsFilter<{
      filtered: string;
      is_partner_dashboard: boolean;
      sitePublished: string;
      selectionType: string;
      view_type: string;
      account_sites_number: number;
      referral: string;
      loadingTime: number;
      status: string;
      siteType: string;
      site_type_enriched: number;
      platform: string;
      sites_count: number;
      device: string;
    }>(this.util.getRawEvents, 5, 1716, this.validate);
  }

  get dashboardLabelingPointInSiteSelectorForDebuggingPurposes() {
    return new EventsFilter<{
      meta_site_id: GUID;
      metaSiteId: GUID;
      uuid: GUID;
      label_version: string;
      msid: GUID;
      page_url: Url;
    }>(this.util.getRawEvents, 5, 1719, this.validate);
  }

  get teamManagementPickLogo() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      action_type: string;
    }>(this.util.getRawEvents, 5, 172, this.validate);
  }

  get formBuilderPdfAttachmentsClickOnCheckbox() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      checkbox: boolean;
      form_comp_id: string;
      vsi: GUID;
      type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1721, this.validate);
  }

  get bmACallForTokenRefreshIsFailing() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1722, this.validate);
  }

  get wixStudioExplanatoryModalForEditorXMigrationOpenedSrc5Evid1723() {
    return new EventsFilter<{
      hosting_platform: string;
      route: string;
      hosting_platform_context_id: string;
      prevRoute: string;
    }>(this.util.getRawEvents, 5, 1723, this.validate);
  }

  get wixStudioExplanatoryModalForEditorXMigrationCtaClickedSrc5Evid1724() {
    return new EventsFilter<{
      hosting_platform: string;
      route: string;
      hosting_platform_context_id: string;
      prevRoute: string;
      cta: string;
    }>(this.util.getRawEvents, 5, 1724, this.validate);
  }

  get transferSiteSiteCanTBeTransferredPopUpView() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      block_from_transfer_reason: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1725, this.validate);
  }

  get cookiesBannerSettingsWindowChange() {
    return new EventsFilter<{
      new_value: string;
      old_value: string;
    }>(this.util.getRawEvents, 5, 1727, this.validate);
  }

  get finishFocusWidgetSection() {
    return new EventsFilter<{
      skipped_items: string;
      resolved_items: string;
      asset_campaign_guid: string;
      section_name: string;
      widget_name: string;
      offering_guid: string;
      origin: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1728, this.validate);
  }

  get teamManagementSave() {
    return new EventsFilter<{
      is_logo_shown: boolean;
      view_type: string;
      platform: string;
      is_valid_team_name: boolean;
    }>(this.util.getRawEvents, 5, 173, this.validate);
  }

  get focusWidgetClickViewAll() {
    return new EventsFilter<{
      name: string;
      location: string;
      widget_name: string;
      origin: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1730, this.validate);
  }

  get mySitesWhenDialogPopsUp() {
    return new EventsFilter<{
      name: string;
      view_mode: string;
      view_type: string;
      num_selected_sites: number;
      origin: string;
      view_level: string;
      platform: string;
      hosting: string;
    }>(this.util.getRawEvents, 5, 1732, this.validate);
  }

  get focusWidgetItemViewedInList() {
    return new EventsFilter<{
      offering_name: string;
      visibility_trigger: string;
      campaign_name: string;
      offering_guid: string;
      asset_location_from_group_list: number;
      origin: string;
      item_state: string;
      asset_campaign_id: string;
      hosting: string;
      msid: GUID;
      campaign_id: string;
      placement_id: GUID;
    }>(this.util.getRawEvents, 5, 1733, this.validate);
  }

  get mySitesClickOnButtonInDialog() {
    return new EventsFilter<{
      name: string;
      view_mode: string;
      to_level: string;
      view_type: string;
      num_selected_sites: number;
      origin: string;
      cta: string;
      from_level: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 1735, this.validate);
  }

  get dashboardFinishLoadingAllWidgets() {
    return new EventsFilter<{
      view_type: string;
      is_account_mgr: boolean;
      loading_time_from_host_load: number;
      sub_view: string;
      host_id: string;
      loading_time_from_performance_now: number;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 1736, this.validate);
  }

  get teamManagementAddMembersOpenDialog() {
    return new EventsFilter<{
      view_type: string;
      roles_displayed: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 174, this.validate);
  }

  get sapir1() {
    return new EventsFilter<{
      view_type: string;
      errorType: string;
      referral: string;
      loadingTime: number;
      siteType: string;
      platform: string;
      device: string;
    }>(this.util.getRawEvents, 5, 1748, this.validate);
  }

  get teamManagementAddMembersSendInvite() {
    return new EventsFilter<{
      number_of_invalid_emails: number;
      view_type: string;
      roles_displayed: string;
      number_of_existing_emails: number;
      origin: string;
      invite_role: string;
      platform: string;
      number_of_valid_emails: number;
    }>(this.util.getRawEvents, 5, 175, this.validate);
  }

  get formBuilderBizMgrSafShareOptions() {
    return new EventsFilter<{
      visitor_id: GUID;
      socialButton: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1751, this.validate);
  }

  get formFormsInContactPanelViewSubmission() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1753, this.validate);
  }

  get formFormsInContactPanelViewSubmissionsList() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      vsi: GUID;
      origin: string;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1754, this.validate);
  }

  get formFormsInContactPanelDownloadFileFormSubmission() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      file_type: string;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1755, this.validate);
  }

  get formBuilderPaymentFormClickDoneAfterEnterItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1757, this.validate);
  }

  get formBuilderPaymentFormHoverNextButtonAdi() {
    return new EventsFilter<{
      step: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1759, this.validate);
  }

  get teamManagementAddMembersInviteClickSuccess() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      invite_role: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 176, this.validate);
  }

  get headerClickOnItemInOneOfTheHeaderDialogsDropDownMenus() {
    return new EventsFilter<{
      view_type: string;
      pageView: string;
      itemName: string;
      platform: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 1768, this.validate);
  }

  get teamManagementAddMembersInviteClickFail() {
    return new EventsFilter<{
      error_desc: string;
      view_type: string;
      origin: string;
      invite_role: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 177, this.validate);
  }

  get renderingPlatformRedirect() {
    return new EventsFilter<{
      reason: string;
      redirectTo: string;
    }>(this.util.getRawEvents, 5, 1770, this.validate);
  }

  get mySitesUnableToMoveSitesToTrashModalIsShownOnBulkMoveToTrashOrSingleSiteMoveToTrash() {
    return new EventsFilter<{
      view_mode: string;
      view_type: string;
      sub_view: string;
      origin: string;
      num_untrashed_sites: number;
      platform: string;
      hosting: string;
      reasons: string;
    }>(this.util.getRawEvents, 5, 1771, this.validate);
  }

  get teamManagementDeleteTeamMemberOpenDialog() {
    return new EventsFilter<{
      invite_status: string;
      role: string;
      view_type: string;
      origin: string;
      member_id: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 178, this.validate);
  }

  get teamManagementDeleteTeamMemberDeleteClick() {
    return new EventsFilter<{
      invite_status: string;
      role: string;
      view_type: string;
      origin: string;
      member_id: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 179, this.validate);
  }

  get formBuilderOneAppModalShown() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      modal_name: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1790, this.validate);
  }

  get formBuilderOneAppModalAction() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      modal_name: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      form_guid: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1791, this.validate);
  }

  get formBuilderOneAppFormSelectorEmptyState() {
    return new EventsFilter<{
      uuid: GUID;
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1792, this.validate);
  }

  get formBuilderFormSectionLoadedInSpacesApp() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      form_guid: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1794, this.validate);
  }

  get formBuilderOneAppLearnMoreClick() {
    return new EventsFilter<{
      linkUrl: string;
      visitor_id: GUID;
      placement: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1796, this.validate);
  }

  get formBuilderOneApp3DotsSwipe() {
    return new EventsFilter<{
      method: string;
      visitor_id: GUID;
      placement: string;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1797, this.validate);
  }

  get dashboardSiteNewsViewAll() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 18, this.validate);
  }

  get teamManagementDeleteTeamMemberDeleteClickSuccess() {
    return new EventsFilter<{
      invite_status: string;
      role: string;
      view_type: string;
      origin: string;
      member_id: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 180, this.validate);
  }

  get formBuilderOneAppClickInsideSwipeAction() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1800, this.validate);
  }

  get formBuilderOneAppWidgetClick() {
    return new EventsFilter<{
      click_name: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1805, this.validate);
  }

  get formBuilderOneAppFormsListPageOpened() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_count: number;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1806, this.validate);
  }

  get formBuilderOneAppSubmissionsListPageOpened() {
    return new EventsFilter<{
      submission_count: number;
      dynamic_values: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1807, this.validate);
  }

  get teamManagementDeleteTeamMemberDeleteClickFail() {
    return new EventsFilter<{
      invite_status: string;
      role: string;
      view_type: string;
      origin: string;
      member_id: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 181, this.validate);
  }

  get focusWidgetHoverOverProgressBarToShowPopover() {
    return new EventsFilter<{
      hosting: string;
      msid: GUID;
      placement_id: string;
    }>(this.util.getRawEvents, 5, 1812, this.validate);
  }

  get formBuilderOneAppFormsResultsPageOpened() {
    return new EventsFilter<{
      visitor_id: GUID;
      submissionId: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1814, this.validate);
  }

  get formBuilderOneAppFormsResultsPageActions() {
    return new EventsFilter<{
      visitor_id: GUID;
      submissionId: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 1815, this.validate);
  }

  get teamManagementGetInviteLink() {
    return new EventsFilter<{
      invite_status: string;
      role: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 182, this.validate);
  }

  get teamManagementEditRoleOpenDialog() {
    return new EventsFilter<{
      invite_status: string;
      view_type: string;
      roles_displayed: string;
      origin: string;
      member_id: GUID;
      platform: string;
    }>(this.util.getRawEvents, 5, 183, this.validate);
  }

  get teamManagementSwitchToStudioClickToSwitch() {
    return new EventsFilter<{ platform: string; }>(this.util.getRawEvents, 5, 1838, this.validate);
  }

  get teamManagementSwitchToStudioLearnMore() {
    return new EventsFilter<{ platform: string; }>(this.util.getRawEvents, 5, 1839, this.validate);
  }

  get teamManagementEditRoleUpdateClick() {
    return new EventsFilter<{
      new_role: string;
      is_accepted: boolean;
      view_type: string;
      roles_displayed: string;
      prev_role: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 184, this.validate);
  }

  get searchToDeleteSrc5Evid1847() {
    return new EventsFilter<{
      query: string;
      view_type: string;
      triggred_from: string;
      sub_view: string;
      results: string;
      origin: string;
      seen_results: string;
      platform: string;
      view: string;
      hosting_platform_context_id: string;
      isFromSettingsSearch: boolean;
    }>(this.util.getRawEvents, 5, 1847, this.validate);
  }

  get teamManagementResendInviteClick() {
    return new EventsFilter<{
      invite_status: string;
      view_type: string;
      origin: string;
      invite_id: GUID;
      invite_role: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 185, this.validate);
  }

  get leavingWithoutSavingModalOpenedSrc5Evid1858() {
    return new EventsFilter<{
      hosting_platform: string;
      route: string;
      hosting_platform_context_id: string;
      internal_route: string;
      originAction: string;
      displayMode: string;
      componentType: string;
      componentId: string;
    }>(this.util.getRawEvents, 5, 1858, this.validate);
  }

  get dashboardContributorsClickOnMangeRolesAndPermissions() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 187, this.validate);
  }

  get rolesAndPermissionsManageRolesEditRoleSrc5Evid1871() {
    return new EventsFilter<{
      context: string;
      role_id: string;
      role_type: string;
      origin: string;
      platform: string;
      role_name: string;
      Has_ai_assistant: boolean;
    }>(this.util.getRawEvents, 5, 1871, this.validate);
  }

  get rolesAndPermissionsInviteTeammatesSendInviteClickSrc5Evid1874() {
    return new EventsFilter<{
      context: string;
      origin: string;
      invite_id: GUID;
      number_of_valid_emails: number;
      role_ids: string;
      app_id: string;
      Has_ai_assistant: boolean;
    }>(this.util.getRawEvents, 5, 1874, this.validate);
  }

  get restoreSiteModalOpenedSrc5Evid1875() {
    return new EventsFilter<{
      hosting_platform: string;
      page_id: string;
      page_name: string;
      route: string;
      hosting_platform_context_id: string;
      internal_route: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 1875, this.validate);
  }

  get restoreSiteModalCtaClickedSrc5Evid1876() {
    return new EventsFilter<{
      hosting_platform: string;
      page_id: string;
      page_name: string;
      route: string;
      hosting_platform_context_id: string;
      internal_route: string;
      cta: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 1876, this.validate);
  }

  get leavingWithoutSavingModalCtaClickedSrc5Evid1878() {
    return new EventsFilter<{
      hosting_platform: string;
      route: string;
      hosting_platform_context_id: string;
      internal_route: string;
      cta: string;
      componentId: string;
      componentType: string;
      displayMode: string;
    }>(this.util.getRawEvents, 5, 1878, this.validate);
  }

  get ascendHoverOnUpgradeAscend() {
    return new EventsFilter<{
      appName: string;
      uuid: GUID;
      button_name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 188, this.validate);
  }

  get ascendClickOnUpgradeAscend() {
    return new EventsFilter<{
      appName: string;
      uuid: GUID;
      button_name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 189, this.validate);
  }

  get microActionAdditionalInfo() {
    return new EventsFilter<{
      asset_version: string;
      offering_name: string;
      info_value: string;
      asset_location_on_page: string;
      info_origin: string;
      offering_guid: string;
      info_type: string;
      origin: string;
      msid: GUID;
      campaign_id: string;
      placement_id: string;
    }>(this.util.getRawEvents, 5, 1895, this.validate);
  }

  get dashboardSiteNewsClickItem() {
    return new EventsFilter<{
      feed_type: string;
      msg_origin: string;
      name: string;
      item_id: GUID;
      source: string;
      url: string;
      is_deleted: boolean;
      view_type: string;
      origin: string;
      campaignId: GUID;
      title: string;
      lang: string;
      type: string;
      platform: string;
      msid: GUID;
      is_archived: boolean;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 19, this.validate);
  }

  get ascendPpClickOnMoveToWixPremiumPp() {
    return new EventsFilter<{
      timeInPage: number;
      referralInfo: string;
      button_name: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 190, this.validate);
  }

  get newFormsFormListTabOpenedOldFormsForms() {
    return new EventsFilter<{
      tab_name: string;
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1901, this.validate);
  }

  get websitePageChecklistInteractWithStepInAList() {
    return new EventsFilter<{
      tab_name: string;
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 1902, this.validate);
  }

  get ascendPpThankYouPage() {
    return new EventsFilter<{
      package_id: string;
      cycle_name: string;
      view_type: string;
      package_name: string;
      app_id: GUID;
      type: string;
      packageId: GUID;
      platform: string;
      cycleId: number;
    }>(this.util.getRawEvents, 5, 191, this.validate);
  }

  get privacyCookiesCookieConsentBannerCardCtaClickSrc5Evid1927() {
    return new EventsFilter<{ cta_name: string; }>(this.util.getRawEvents, 5, 1927, this.validate);
  }

  get invoicesMoreActionsClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 193, this.validate);
  }

  get invoicesMoreActionsChooseOption() {
    return new EventsFilter<{
      option: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 194, this.validate);
  }

  get mobileClickOnCreateNewSite() {
    return new EventsFilter<{
      page_view: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 196, this.validate);
  }

  get dashboardFetchDealerLayoutFailed() {
    return new EventsFilter<{
      view_type: string;
      type: string;
      platform: string;
      msid: GUID;
      dashboard_type: string;
    }>(this.util.getRawEvents, 5, 1999, this.validate);
  }

  get dashboardUserSeeFeed() {
    return new EventsFilter<{
      feedId: GUID;
      source: string;
      url: string;
      view_type: string;
      more3sec: boolean;
      origin: string;
      campaignId: GUID;
      title: string;
      type: string;
      platform: string;
      msid: GUID;
      aboveTheFold: boolean;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 20, this.validate);
  }

  get mySitesClickInUnableToMoveSitesToTrashDialog() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      cta: string;
      platform: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 2000, this.validate);
  }

  get samplingPageFeatures() {
    return new EventsFilter<{
      pageId: string;
      pageType: string;
      pageRoute: string;
      numberOfTableComponents: number;
      numberOfTabsComponents: number;
      numberOfGridComponents: number;
      numberOfNestedTablesComponents: number;
      isWixPatternsPage: boolean;
      isWixPatternsComponent: boolean;
      wixPatternsComponentsInPage: string;
      wixPatternsPageType: string;
    }>(this.util.getRawEvents, 5, 20000, this.validate);
  }

  get clickingOnQuickActionButtonThreeDots() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 2001, this.validate);
  }

  get tooltipForOwnerApp() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2002, this.validate);
  }

  get tooltipForOwnerAppClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2003, this.validate);
  }

  get downloadModal() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2004, this.validate);
  }

  get downloadModalClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 2005, this.validate);
  }

  get downloadModalSuccessMessage() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2006, this.validate);
  }

  get downloadModalErrorMessage() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2007, this.validate);
  }

  get automationMainTableUserSearchFocusOut() {
    return new EventsFilter<{
      view_type: string;
      searchText: string;
      platform: string;
      numOfResults: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2008, this.validate);
  }

  get searchClickedToOpenSearch() {
    return new EventsFilter<{
      sub_view: string;
      origin: string;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 202, this.validate);
  }

  get osClickOnFavorites() {
    return new EventsFilter<{
      displayMode: string;
      action: string;
      pageName: string;
      pageId: string;
      appId: string;
      isEmptyFavorites: boolean;
      favoriteItemsList: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 5, 203, this.validate);
  }

  get osFavoritesPopupShown() {
    return new EventsFilter<{
      pageName: string;
      pageId: string;
      appId: string;
      view: string;
      isEmptyFavorites: boolean;
      isEmptyRecentlyViewed: boolean;
      recentlyViewedItemsList: string;
      favoriteItemsList: string;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 5, 204, this.validate);
  }

  get dashboardSiteNewsFilter() {
    return new EventsFilter<{
      name: string;
      location: string;
      view_type: string;
      origin: string;
      type: string;
      platform: string;
      filter_type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 21, this.validate);
  }

  get osFavoritesPopupCtaClicked() {
    return new EventsFilter<{
      pageName: string;
      pageId: string;
      appId: string;
      view: string;
      cta: string;
      ctaType: string;
      numFavoritePages: number;
      numRecentlyViewedPages: number;
      hostingPlatformContextId: string;
    }>(this.util.getRawEvents, 5, 210, this.validate);
  }

  get osFavoritesPagesEdit() {
    return new EventsFilter<{
      pageName: string;
      pageId: string;
      appId: string;
      cta: string;
      favoritesName: string;
      wasSuccess: boolean;
      hostingPlatformContextId: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 215, this.validate);
  }

  get dashboardSettingsUpdate() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      providerId: string;
      click_from: string;
      origin: string;
      platform: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 22, this.validate);
  }

  get gizaSdkApiCallReceivedSrc5Evid2222() {
    return new EventsFilter<{
      hosting_platform: string;
      app_id: string;
      method_name: string;
      component_id: string;
      hosting_platform_context_id: string;
      tool: string;
    }>(this.util.getRawEvents, 5, 2222, this.validate);
  }

  get dashboardTpaUpgradeClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      app_id: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 23, this.validate);
  }

  get automationsPriceQuotesInvoicesSendFeedbackForm() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 232, this.validate);
  }

  get automationsPriceQuotesInvoicesSubmitFeedbackForm() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 233, this.validate);
  }

  get dashboardSiteSelectorLoaded() {
    return new EventsFilter<{
      filtered: string;
      is_partner_dashboard: boolean;
      sitePublished: string;
      selectionType: string;
      view_type: string;
      account_sites_number: number;
      referral: string;
      loadingTime: number;
      status: string;
      siteType: string;
      site_type_enriched: number;
      platform: string;
      sites_count: number;
      device: string;
    }>(this.util.getRawEvents, 5, 24, this.validate);
  }

  get mobileClickOnChangeLng() {
    return new EventsFilter<{
      to_lng: string;
      platform: string;
      from_lng: string;
    }>(this.util.getRawEvents, 5, 244, this.validate);
  }

  get quotesPrintInvoice() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 245, this.validate);
  }

  get quotesPayInvoiceClickSrc5Evid246() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 246, this.validate);
  }

  get dashboardSiteSelectorButton() {
    return new EventsFilter<{
      filtered: string;
      positionIndex: number;
      site_id: GUID;
      is_partner_dashboard: boolean;
      result: string;
      selectionType: string;
      view_type: string;
      siteTypeName: string;
      action_url: Url;
      referral: string;
      siteType: string;
      sites_number: number;
      cta: string;
      position: number;
      site_type_enriched: number;
      esi: GUID;
      platform: string;
      msid: GUID;
      sites_count: number;
      device: string;
    }>(this.util.getRawEvents, 5, 25, this.validate);
  }

  get homeClickNotificationCta() {
    return new EventsFilter<{
      app_id: GUID;
      app_def_id: string;
      view_type: string;
      activity_type: string;
      notification_id: GUID;
      num_of_new: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 250, this.validate);
  }

  get waiverClientAppWaiverStatusDropdown() {
    return new EventsFilter<{
      origin: string;
      contact_id: string;
      currentValue: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2501, this.validate);
  }

  get waiverClientAppWaiverStatusChangedManually() {
    return new EventsFilter<{
      previous_value: string;
      origin: string;
      contact_id: string;
      currentValue: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2502, this.validate);
  }

  get waiverClientAppSendWaiverToClient() {
    return new EventsFilter<{
      origin: string;
      contact_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 2503, this.validate);
  }

  get homeMarkNotificationUnread() {
    return new EventsFilter<{
      view_type: string;
      notification_id: GUID;
      app_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 251, this.validate);
  }

  get homeMarkNotificationRead() {
    return new EventsFilter<{
      view_type: string;
      activity_type: string;
      notification_id: string;
      app_id: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 252, this.validate);
  }

  get homeMarkAllUnreadNotifications() {
    return new EventsFilter<{
      channel: string;
      view_type: string;
      notification_ids: string;
      origin: string;
      num_of_unread: number;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 253, this.validate);
  }

  get homeNotificationBadgeShown() {
    return new EventsFilter<{
      view_type: string;
      on_page_load: boolean;
      origin: string;
      num_of_new: number;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 254, this.validate);
  }

  get homeAllowBlockBrowserNotificationClick() {
    return new EventsFilter<{
      view_type: string;
      user_reply: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 255, this.validate);
  }

  get notificationsClickOnAllSitesTab() {
    return new EventsFilter<{
      feed_name: string;
      tab_name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      view: string;
    }>(this.util.getRawEvents, 5, 256, this.validate);
  }

  get dashboardEnterEditorx() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 257, this.validate);
  }

  get dashboardQuickActionsDragNDrop() {
    return new EventsFilter<{
      duration: number;
      name: string;
      view_type: string;
      direction: string;
      isToTopSix: boolean;
      to: number;
      isFromTopSix: boolean;
      from: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 26, this.validate);
  }

  get triggersServerTpaActivationInitiatedCompleted() {
    return new EventsFilter<{
      instanceId: GUID;
      visitorId: GUID;
      biToken: GUID;
      activationRequestId: string;
      activityId: GUID;
      recipeName: string;
      activityType: string;
      providerId: GUID;
      token: string;
      contactId: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 260, this.validate);
  }

  get triggersServerTpaActivationInitiatedFailed() {
    return new EventsFilter<{
      instanceId: GUID;
      visitorId: GUID;
      biToken: GUID;
      activationRequestId: string;
      activityId: GUID;
      recipeName: string;
      activityType: string;
      providerId: GUID;
      token: string;
      contactId: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 261, this.validate);
  }

  get triggersServerTaskScheduled() {
    return new EventsFilter<{
      instanceId: GUID;
      visitorId: GUID;
      biToken: GUID;
      activityId: GUID;
      startAt: DateTime;
      contactId: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 262, this.validate);
  }

  get triggersServerTpaActivationCompletedSuccessfully() {
    return new EventsFilter<{
      instanceId: GUID;
      visitorId: GUID;
      biToken: GUID;
      activationRequestId: string;
      activityId: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 263, this.validate);
  }

  get triggersServerTpaActivationCompleteFailed() {
    return new EventsFilter<{
      instanceId: GUID;
      visitorId: GUID;
      biToken: GUID;
      errorMsg: string;
      activationRequestId: string;
      activityId: GUID;
      errorType: string;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 264, this.validate);
  }

  get triggersServerTriggerScheduleCancelled() {
    return new EventsFilter<{
      instanceId: GUID;
      visitorId: GUID;
      biToken: GUID;
      activityId: GUID;
      ruleId: GUID;
    }>(this.util.getRawEvents, 5, 266, this.validate);
  }

  get notificationNotificationAutomationCreated() {
    return new EventsFilter<{
      channels: string;
      channel: string;
      recipients_type: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 269, this.validate);
  }

  get dashboardClickOnSideBar() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 27, this.validate);
  }

  get invoicesClickOnSendInvoiceButton() {
    return new EventsFilter<{
      instanceId: GUID;
      totalAmountLong: number;
      createOrder: boolean;
      isValid: boolean;
      uuid: GUID;
      paymentType: string;
      view_type: string;
      invoiceId: GUID;
      origin: string;
      status: string;
      currency: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 270, this.validate);
  }

  get notificationShowNotification() {
    return new EventsFilter<{
      is_high_priority: boolean;
      feed_name: string;
      channel: string;
      source: string;
      correlation_id: GUID;
      view_type: string;
      notification_ids: string;
      origin: string;
      mode: string;
      correlationId: string;
      contact_id: string;
      platform: string;
      notificationid: string;
      msid: GUID;
      page_number: number;
    }>(this.util.getRawEvents, 5, 271, this.validate);
  }

  get notificationClickOnNotification() {
    return new EventsFilter<{
      is_high_priority: boolean;
      feed_name: string;
      clickOrigin: string;
      channel: string;
      correlation_id: GUID;
      click_type: string;
      view_type: string;
      notification_id: string;
      origin: string;
      correlationId: string;
      contact_id: string;
      platform: string;
      notificationid: string;
      msid: GUID;
      deep_link: string;
      grouped_notifications: string;
    }>(this.util.getRawEvents, 5, 272, this.validate);
  }

  get notificationsEnableDesktopNotificationsFirstTime() {
    return new EventsFilter<{
      feed_name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 273, this.validate);
  }

  get notificationsPushNotificationToggleIsDisplayed() {
    return new EventsFilter<{
      feed_name: string;
      view_type: string;
      origin: string;
      permission_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 274, this.validate);
  }

  get notificationsEnableToTurnOnOffAllSiteNotificationsExperts() {
    return new EventsFilter<{
      toggle: boolean;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 275, this.validate);
  }

  get notificationsEnableToTurnOnOffNotificationsPerChannel() {
    return new EventsFilter<{
      channel: string;
      toggle: boolean;
      view_type: string;
      section: string;
      platform: string;
      group: string;
      contactId: GUID;
      notificationName: string;
      targetEntity: string;
      targetMsid: string;
    }>(this.util.getRawEvents, 5, 276, this.validate);
  }

  get notificationsShowMobileDialog() {
    return new EventsFilter<{
      view_type: string;
      is_installed_oneapp: boolean;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 277, this.validate);
  }

  get notificationsDisplayPopupForUserBlockedDesktopNotifications() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 278, this.validate);
  }

  get notificationCloseAHighPriorityNotifications() {
    return new EventsFilter<{
      feed_name: string;
      channel: string;
      view_type: string;
      notification_ids: string;
      origin: string;
      platform: string;
      notificationid: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 279, this.validate);
  }

  get dashboardShowMorePopularShortcutsClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 28, this.validate);
  }

  get notificationsDisplayDesktopNotificationsBanner() {
    return new EventsFilter<{
      feed_name: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 280, this.validate);
  }

  get notificationsClickOnDesktopNotificationsBanner() {
    return new EventsFilter<{
      feed_name: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 281, this.validate);
  }

  get notificationsResolveAlertNotification() {
    return new EventsFilter<{
      contactId: GUID;
      clickName: string;
      ClickTypeInfo: string;
      clickArea: string;
    }>(this.util.getRawEvents, 5, 282, this.validate);
  }

  get invoicesUserSendInvoice() {
    return new EventsFilter<{
      instanceId: GUID;
      totalAmountLong: number;
      createOrder: boolean;
      uuid: GUID;
      depositType: string;
      paymentType: string;
      view_type: string;
      invoiceId: GUID;
      origin: string;
      status: string;
      invoiceTitle: string;
      invoiceSource: string;
      currency: string;
      platform: string;
      msid: GUID;
      discountPercentage: number;
    }>(this.util.getRawEvents, 5, 283, this.validate);
  }

  get bizManagerSetupWidgetOmniPhaseCompletedInDashboard() {
    return new EventsFilter<{
      skipped_items: string;
      resolved_items: string;
      asset_campaign_guid: string;
      number_of_resolved_items: number;
      view_type: string;
      number_of_skipped_items: number;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 284, this.validate);
  }

  get automationsDaComponentShowPage() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 285, this.validate);
  }

  get automationsDaComponentManageAutomations() {
    return new EventsFilter<{
      view_type: string;
      status: boolean;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 286, this.validate);
  }

  get automationsDaComponentCreateYourOwn() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      invoiceSource: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 287, this.validate);
  }

  get automationsDaComponentRecommendationClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 288, this.validate);
  }

  get automationsDaComponentExploreMoreClick() {
    return new EventsFilter<{
      exposure_name: string;
      view_type: string;
      value_from_was: number;
      value_from_dealer: number;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 289, this.validate);
  }

  get dashboardLessPopularShortcutsClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 29, this.validate);
  }

  get clickOnSearchInHelpCenterInSearchSrc5Evid292() {
    return new EventsFilter<{
      query: string;
      view_type: string;
      sub_view: string;
      origin: string;
      view: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 292, this.validate);
  }

  get errorPageClick295() {
    return new EventsFilter<{
      component_name: string;
      hosting_platform: string;
      error_location: string;
      view_type: string;
      host_id: string;
      component_app_id: string;
      platform: string;
      component_id: string;
      hosting_platform_context_id: string;
      hosting: string;
      component_type: string;
      msid: GUID;
      error_name: string;
    }>(this.util.getRawEvents, 5, 295, this.validate);
  }

  get accountDialogClickItem() {
    return new EventsFilter<{
      item_id: string;
      item_index_ex_separators: number;
      page_view: string;
      view_type: string;
      items_displayed: string;
      item_name: string;
      origin: string;
      platform: string;
      msid: GUID;
      item_index: number;
    }>(this.util.getRawEvents, 5, 296, this.validate);
  }

  get errorPage297() {
    return new EventsFilter<{
      component_name: string;
      hosting_platform: string;
      error_location: string;
      view_type: string;
      error_type: string;
      host_id: string;
      component_app_id: string;
      app_id: string;
      platform: string;
      component_id: string;
      hosting_platform_context_id: string;
      hosting: string;
      component_type: string;
      msid: GUID;
      page_url: string;
      error_name: string;
    }>(this.util.getRawEvents, 5, 297, this.validate);
  }

  get dashboardTourUserSeesTourBanner() {
    return new EventsFilter<{
      experiment_name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 30, this.validate);
  }

  get dashboardStartLoading() {
    return new EventsFilter<{
      prev_module_id: string;
      __cookies_prefix__wixsession: string;
      referral_additional_info: string;
      referral_info: string;
      view_type: string;
      is_account_mgr: boolean;
      sub_view: string;
      screen_width: number;
      initial_load: boolean;
      app_ids: string;
      window_width: number;
      origin: string;
      is_biz_mgr: boolean;
      screen_height: number;
      prev_view: string;
      prevPageComponentId: string;
      app_id: string;
      prev_sub_view: string;
      window_height: number;
      platform: string;
      origin_app_id: string;
      hosting: string;
      msid: GUID;
      pageComponentId: string;
      module_id: string;
      view: string;
    }>(this.util.getRawEvents, 5, 300, this.validate);
  }

  get dashboardEntryFeeding() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 3000, this.validate);
  }

  get clickOnGoToEditorFromBmSrc5Evid3001() {
    return new EventsFilter<{
      hostingPlatformContextId: string;
      pageId: string;
      pageName: string;
    }>(this.util.getRawEvents, 5, 3001, this.validate);
  }

  get homeCloseDialog() {
    return new EventsFilter<{
      wixsession: string;
      page_view: string;
      referral_info: string;
      view_type: string;
      origin: string;
      prev_view: string;
      app_id: GUID;
      platform: string;
      msid: GUID;
      action: string;
      view: string;
    }>(this.util.getRawEvents, 5, 301, this.validate);
  }

  get dashboardFinishLoading() {
    return new EventsFilter<{
      __cookies_prefix__wixsession: string;
      view_mode: string;
      referral_additional_info: string;
      loading_time_from_start: number;
      referral_info: string;
      view_type: string;
      is_account_mgr: boolean;
      sub_view: string;
      screen_width: number;
      initial_load: boolean;
      loading_time_from_module: number;
      app_ids: string;
      window_width: number;
      loading_time_from_first_interaction: number;
      origin: string;
      loading_time_from_performance_now: number;
      is_biz_mgr: boolean;
      screen_height: number;
      prev_view: string;
      prevPageComponentId: string;
      app_id: string;
      prev_sub_view: string;
      window_height: number;
      is_pro: boolean;
      platform: string;
      origin_app_id: string;
      hosting: string;
      msid: GUID;
      pageComponentId: string;
      module_id: string;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 302, this.validate);
  }

  get homeOpenDialogClick() {
    return new EventsFilter<{
      wixsession: string;
      page_view: string;
      referral_info: string;
      view_type: string;
      origin: string;
      prev_view: string;
      app_id: GUID;
      platform: string;
      msid: GUID;
      action: string;
      view: string;
    }>(this.util.getRawEvents, 5, 303, this.validate);
  }

  get dialogFirstLoad() {
    return new EventsFilter<{
      wixsession: string;
      referral_info: string;
      view_type: string;
      origin: string;
      prev_view: string;
      app_id: GUID;
      platform: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 304, this.validate);
  }

  get homeMultipleSitesCheck() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      num_displayed_sites: number;
      has_two_sites: boolean;
      prev_view: string;
      platform: string;
      msid: GUID;
      sites_count: number;
    }>(this.util.getRawEvents, 5, 305, this.validate);
  }

  get homeBizMgrEligible() {
    return new EventsFilter<{
      view_type: string;
      phase_number: number;
      platform: string;
      msid: GUID;
      is_eligible: boolean;
    }>(this.util.getRawEvents, 5, 306, this.validate);
  }

  get homeClickOnCreateAnythingItem() {
    return new EventsFilter<{
      name: string;
      page_view: string;
      view_type: string;
      add_app_id: string;
      app_id: GUID;
      platform: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 307, this.validate);
  }

  get myAccountClickOnExpertDashboard() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 308, this.validate);
  }

  get dashboardDashboardHomeIsFullyLoaded() {
    return new EventsFilter<{
      loading_time_from_start: number;
      referral_info: string;
      view_type: string;
      sub_view: string;
      screen_width: number;
      loading_time_from_module: number;
      window_width: number;
      loading_time_from_first_interaction: number;
      loading_time_from_performance_now: number;
      screen_height: number;
      prev_view: string;
      prev_sub_view: string;
      window_height: number;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 309, this.validate);
  }

  get dashboardTourCloseTour() {
    return new EventsFilter<{
      experiment_name: string;
      stage_process: string;
      view_type: string;
      stage_number: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 31, this.validate);
  }

  get dashboardSiteSettingsPageView() {
    return new EventsFilter<{
      available_sections: string;
      name: string;
      focus_section: string;
      view_type: string;
      unseen_sections: string;
      seen_sections: string;
      origin: string;
      alertStatus: string;
      place: string;
      platform: string;
      hosting: string;
      msid: GUID;
      alert_sections: string;
      subscriptions: string;
    }>(this.util.getRawEvents, 5, 310, this.validate);
  }

  get dashboardSiteSettingsExperienceDisplayed() {
    return new EventsFilter<{
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 311, this.validate);
  }

  get dashboardSiteSettingsChangeValue() {
    return new EventsFilter<{
      name: string;
      create_method: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 312, this.validate);
  }

  get dashboardSiteSettingsChangeValueSuccess() {
    return new EventsFilter<{
      name: string;
      create_method: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 313, this.validate);
  }

  get dashboardSiteSettingsChangeValueFailure() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 314, this.validate);
  }

  get dashboardSiteSettingsClickLink() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 315, this.validate);
  }

  get dashboardSiteSettingsDeleteValue() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 316, this.validate);
  }

  get dashboardSiteSettingsDeleteValueSuccess() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 317, this.validate);
  }

  get dashboardSiteSettingsDeleteValueFailure() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 318, this.validate);
  }

  get dashboardSiteSettingsSelectValue() {
    return new EventsFilter<{
      name: string;
      adding_method: string;
      view_type: string;
      experience: string;
      origin: string;
      place: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 319, this.validate);
  }

  get dashboardTourNextStep() {
    return new EventsFilter<{
      experiment_name: string;
      stage_process: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 32, this.validate);
  }

  get dashboardSiteSettingsClosingComponent() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      place: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 320, this.validate);
  }

  get dashboardSiteSettingsDomainSslOption() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      mode: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 321, this.validate);
  }

  get dashboardSiteSettingsDomainSslPopupCancel() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      mode: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 322, this.validate);
  }

  get dashboardSiteSettingsSeoClickEnterAddressManually() {
    return new EventsFilter<{
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 323, this.validate);
  }

  get dashboardSiteSettingsSeoCloseEnterAddressManuallyPopUp() {
    return new EventsFilter<{
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 324, this.validate);
  }

  get dashboardSiteSettingsSeoClickOnGetStarted() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
    }>(this.util.getRawEvents, 5, 325, this.validate);
  }

  get dashboardSiteSettingsOverviewUnpublishSite() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 326, this.validate);
  }

  get dashboardSiteSettingsOverviewUnpublishPopupCancel() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 327, this.validate);
  }

  get renameSiteOpenRenameDialog() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      cta: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 328, this.validate);
  }

  get dashboardChangeSiteDisplayNameSave() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 329, this.validate);
  }

  get dashboardUserSeeFeedMoreThen3Sec() {
    return new EventsFilter<{
      feedId: GUID;
      source: string;
      url: string;
      view_type: string;
      origin: string;
      campaignId: GUID;
      title: string;
      type: string;
      platform: string;
      msid: GUID;
      aboveTheFold: boolean;
      feed_id: GUID;
    }>(this.util.getRawEvents, 5, 33, this.validate);
  }

  get dashboardChangeUrlSave() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 330, this.validate);
  }

  get needsYourActionNyaWidgetShown() {
    return new EventsFilter<{
      view_type: string;
      num_of_items: number;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 331, this.validate);
  }

  get needsYourActionItemIsShown() {
    return new EventsFilter<{
      item_id: string;
      item_location_on_page: number;
      view_type: string;
      num_of_items: number;
      platform: string;
      hosting: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 332, this.validate);
  }

  get needsYourActionClickOnItem() {
    return new EventsFilter<{
      item_id: string;
      item_location_on_page: number;
      click_type: string;
      view_type: string;
      item_name: string;
      platform: string;
      hosting: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 333, this.validate);
  }

  get settingsLobbyItemExposedSrc5Evid3333() {
    return new EventsFilter<{
      item_location_on_page: number;
      section_name: string;
      item_name: string;
      categoryLocationOnPage: number;
    }>(this.util.getRawEvents, 5, 3333, this.validate);
  }

  get needsYourActionClickOnUndoHidingAnItem() {
    return new EventsFilter<{
      item_id: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 334, this.validate);
  }

  get needsYourActionResolvedNyaItem() {
    return new EventsFilter<{
      item_id: string;
      msid: GUID;
      template_id: string;
    }>(this.util.getRawEvents, 5, 335, this.validate);
  }

  get hooverNewReleasesIcon() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 336, this.validate);
  }

  get tooltipNotificationPopsUp() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 337, this.validate);
  }

  get newReleasesApiRequest() {
    return new EventsFilter<{
      lng: string;
      announcement_id: GUID;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 338, this.validate);
  }

  get closeTooltipPopUp() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 339, this.validate);
  }

  get badgeNotification() {
    return new EventsFilter<{
      view_type: string;
      new_notifications: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 340, this.validate);
  }

  get viewFeatureCard() {
    return new EventsFilter<{
      announcement_id: GUID;
      view_type: string;
      card_position: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 341, this.validate);
  }

  get cardCta() {
    return new EventsFilter<{
      button_type: string;
      announcement_id: GUID;
      button_name: string;
      view_type: string;
      card_position: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 342, this.validate);
  }

  get viewedAllUpdates() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 343, this.validate);
  }

  get settingsOverviewPageClickOnItem() {
    return new EventsFilter<{
      click_name: string;
      hosting_platform: string;
      page_view: string;
      view_type: string;
      item_name: string;
      status_text: string;
      fold_name: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 345, this.validate);
  }

  get iconRender() {
    return new EventsFilter<{
      uuid: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 347, this.validate);
  }

  get quotesBulkActionsPrint() {
    return new EventsFilter<{
      number: string;
      view_type: string;
      filter: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 348, this.validate);
  }

  get setupWidgetItems() {
    return new EventsFilter<{
      skipped_items: string;
      resolved_items: string;
      asset_campaign_guid: string;
      location: string;
      number_of_available_items: number;
      available_items: string;
      number_of_resolved_items: number;
      view_type: string;
      number_of_skipped_items: number;
      setup_location: string;
      platform: string;
      hosting: string;
      msid: GUID;
      trigger: string;
    }>(this.util.getRawEvents, 5, 349, this.validate);
  }

  get dashboardShowSideBar() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      alwaysOpen: boolean;
      selectedItem: string;
      platform: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 35, this.validate);
  }

  get rolesAddNewRoleClick() {
    return new EventsFilter<{
      is_blog_shown: boolean;
      view_type: string;
      roles_displayed: string;
      origin: string;
      platform: string;
      hosting: string;
      is_events_shown: boolean;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 350, this.validate);
  }

  get searchQuery() {
    return new EventsFilter<{
      searchTerms: string;
      lng: string;
      requestURI: string;
      responseCode: number;
      errorMessage: string;
      requestTime: number;
      scannedDocsCount: number;
      matchedDocsCount: number;
      isSuccess: boolean;
      filter: string;
      offset: number;
      queryProfileParams: string;
      responseMessage: string;
      queryProfile: string;
      rankProfile: string;
      limit: number;
      customRankFeatures: string;
    }>(this.util.getRawEvents, 5, 3500, this.validate);
  }

  get rolesAddRoleCloseWindow() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 351, this.validate);
  }

  get rolesAddRoleInviteClick() {
    return new EventsFilter<{
      view_type: string;
      roles_displayed: string;
      origin: string;
      invite_role: string;
      is_valid_email: boolean;
      platform: string;
      hosting: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 352, this.validate);
  }

  get rolesAddRoleInviteClickSuccess() {
    return new EventsFilter<{
      is_blog_shown: boolean;
      view_type: string;
      roles_displayed: string;
      origin: string;
      invite_role: string;
      platform: string;
      hosting: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 353, this.validate);
  }

  get crmHomeButtonClicked() {
    return new EventsFilter<{
      uuid: GUID;
      button_name: string;
      view_type: string;
      section: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 354, this.validate);
  }

  get rolesAddRoleInviteClickFail() {
    return new EventsFilter<{
      error_desc: string;
      view_type: string;
      roles_displayed: string;
      origin: string;
      invite_role: string;
      platform: string;
      hosting: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 355, this.validate);
  }

  get rolesLoginPageLoadStart() {
    return new EventsFilter<{
      view_type: string;
      invite_id: string;
      platform: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 356, this.validate);
  }

  get rolesLoginPageLoadComplete() {
    return new EventsFilter<{
      view_type: string;
      invite_id: string;
      platform: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 357, this.validate);
  }

  get rolesAcceptFail() {
    return new EventsFilter<{
      view_type: string;
      invite_id: string;
      platform: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 358, this.validate);
  }

  get rolesResendInviteClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      invite_role: string;
      platform: string;
      hosting: string;
      invite_email: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 359, this.validate);
  }

  get dashboardCloseBanner() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 36, this.validate);
  }

  get rolesDeleteRoleClick() {
    return new EventsFilter<{
      view_type: string;
      accept_email: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 360, this.validate);
  }

  get rolesDeleteRoleCloseWindow() {
    return new EventsFilter<{
      view_type: string;
      accept_email: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 361, this.validate);
  }

  get rolesDeleteRoleDeleteClick() {
    return new EventsFilter<{
      view_type: string;
      accept_email: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 362, this.validate);
  }

  get rolesDeleteRoleDeleteClickSuccess() {
    return new EventsFilter<{
      view_type: string;
      accept_email: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 363, this.validate);
  }

  get rolesDeleteRoleDeleteClickFail() {
    return new EventsFilter<{
      view_type: string;
      accept_email: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 364, this.validate);
  }

  get rolesAcceptInviteFromMobilePageView() {
    return new EventsFilter<{
      view_type: string;
      inviteToken: string;
      invite_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 365, this.validate);
  }

  get rolesEditRoleClick() {
    return new EventsFilter<{
      is_blog_shown: boolean;
      is_accepted: boolean;
      view_type: string;
      roles_displayed: string;
      origin: string;
      platform: string;
      hosting: string;
      is_events_shown: boolean;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 366, this.validate);
  }

  get rolesEditRoleUpdateClick() {
    return new EventsFilter<{
      is_blog_shown: boolean;
      new_role: string;
      is_accepted: boolean;
      view_type: string;
      roles_displayed: string;
      prev_role: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 367, this.validate);
  }

  get rolesGetInviteLink() {
    return new EventsFilter<{
      view_type: string;
      invite_role: string;
      platform: string;
      hosting: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 368, this.validate);
  }

  get analyticsKpiIsShownInAnalyticsWidget() {
    return new EventsFilter<{
      kpi_period: string;
      kpi_location: number;
      view_type: string;
      kpi_name: string;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 369, this.validate);
  }

  get dashboardNewsUserClickReadMore() {
    return new EventsFilter<{
      source: string;
      feedId: GUID;
      view_type: string;
      origin: string;
      title: string;
      type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 37, this.validate);
  }

  get exposureForAnalyticsTests() {
    return new EventsFilter<{
      num_value: number;
      exposure_name: string;
      bi_profile_num_value: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 3701, this.validate);
  }

  get analyticsTooltip() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 371, this.validate);
  }

  get analyticsClickOnWidgetButtons() {
    return new EventsFilter<{
      click_name: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 372, this.validate);
  }

  get analyticsClickOnKpi() {
    return new EventsFilter<{
      kpi_location: number;
      view_type: string;
      kpi_name: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 373, this.validate);
  }

  get analyticsChooseKpiFromCustomizationList() {
    return new EventsFilter<{
      selected_kpis: string;
      added_kpi_location: string;
      error_desc: string;
      view_type: string;
      added_kpi: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 374, this.validate);
  }

  get analyticsClickOnButtonFromCustomizationList() {
    return new EventsFilter<{
      selected_kpis: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 375, this.validate);
  }

  get analyticsChangeKpisTimePeriod() {
    return new EventsFilter<{
      kpi_period: string;
      view_type: string;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 376, this.validate);
  }

  get analyticsHoverAKpi() {
    return new EventsFilter<{
      kpi_location: number;
      view_type: string;
      kpi_name: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 377, this.validate);
  }

  get notificationsClickOnAChannelSettings() {
    return new EventsFilter<{
      click_name: string;
      channel: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 379, this.validate);
  }

  get dashboardNewsClickViewAll() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 38, this.validate);
  }

  get notificationsClickOnChannelLink() {
    return new EventsFilter<{
      channel: string;
      url: string;
      view_type: string;
      platform: string;
      has_settings: boolean;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 380, this.validate);
  }

  get quotesClickDueDate() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 383, this.validate);
  }

  get quotesChooseDueDate() {
    return new EventsFilter<{
      view_type: string;
      dueDate: DateTime;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 384, this.validate);
  }

  get quotesClickIssueDate() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 385, this.validate);
  }

  get quotesChooseIssueDate() {
    return new EventsFilter<{
      view_type: string;
      invoiceType: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 386, this.validate);
  }

  get notificationGroupNotificationIsDisplayed() {
    return new EventsFilter<{
      feed_name: string;
      channel: string;
      view_type: string;
      notification_id_shown: string;
      notification_ids: string;
      origin: string;
      contact_id: string;
      platform: string;
      page_number: number;
    }>(this.util.getRawEvents, 5, 387, this.validate);
  }

  get quotesViewPayments() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 388, this.validate);
  }

  get quotesSubscriptionViewPayments() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 389, this.validate);
  }

  get dashboardProsSiteActionsOpened() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 39, this.validate);
  }

  get quotesBulkActionsDownloadPdf() {
    return new EventsFilter<{
      number: string;
      view_type: string;
      filter: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 397, this.validate);
  }

  get quotesBulkActionsExportCsv() {
    return new EventsFilter<{
      number: string;
      view_type: string;
      filter: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 398, this.validate);
  }

  get quotesDuplicateInvoice() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 399, this.validate);
  }

  get dashboardClickOnMySites() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 40, this.validate);
  }

  get quotesTabPageView() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      experience: string;
      origin: string;
      place: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 400, this.validate);
  }

  get quotesInvoicesOnboardingPageView() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 401, this.validate);
  }

  get quotesGetPaymentClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 402, this.validate);
  }

  get quotesNewInvoiceClick() {
    return new EventsFilter<{
      originalInvoiceId: GUID;
      view_type: string;
      origin: string;
      status: string;
      create_order: boolean;
      type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 403, this.validate);
  }

  get quotesEmailInvoicePage() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      status: string;
      origin_device: string;
      invoiceSource: string;
      resend: boolean;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 404, this.validate);
  }

  get quotesEmailInvoicePageCancelClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      resend: boolean;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 405, this.validate);
  }

  get quotesViewInvoicePageView() {
    return new EventsFilter<{
      source: string;
      no_of_payments: string;
      paymentType: string;
      view_type: string;
      is_visible: boolean;
      paid: boolean;
      origin: string;
      invoiceSource: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 406, this.validate);
  }

  get quotesChangeValue() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 407, this.validate);
  }

  get quotesCreateInvoiceSaveDraftClick() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      status: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 408, this.validate);
  }

  get quotesCreateInvoiceSaveDraftComplete() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      invoiceSource: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 409, this.validate);
  }

  get dashboardClickToggleSitesListInNavbar() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 41, this.validate);
  }

  get quotesCreateInvoiceSaveDraftFailed() {
    return new EventsFilter<{
      view_type: string;
      reason: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 410, this.validate);
  }

  get submitGdprForm() {
    return new EventsFilter<{
      ticket_id: GUID;
      response_status: string;
      request_type: string;
      response_time: number;
      submission_date: DateTime;
    }>(this.util.getRawEvents, 5, 4101, this.validate);
  }

  get submitGdprFormSrc5Evid4102() {
    return new EventsFilter<{
      ticket_id: GUID;
      response_status: string;
      request_type: string;
      response_time: number;
      submission_date: DateTime;
    }>(this.util.getRawEvents, 5, 4102, this.validate);
  }

  get quotesCreateInvoiceCancelClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 411, this.validate);
  }

  get quotesCreateInvoiceAddLine() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      appDefId: GUID;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 412, this.validate);
  }

  get quotesCreateInvoiceDeleteLine() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 413, this.validate);
  }

  get quotesNewProductClick() {
    return new EventsFilter<{
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 414, this.validate);
  }

  get quotesNewProductSave() {
    return new EventsFilter<{
      price_long: number;
      description: string;
      view_type: string;
      invoiceType: string;
      product_name: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 415, this.validate);
  }

  get quotesNewProductCancel() {
    return new EventsFilter<{
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 416, this.validate);
  }

  get quotesEditProductClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 417, this.validate);
  }

  get quotesDeleteProductClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 418, this.validate);
  }

  get quotesDeleteProductPageOk() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 419, this.validate);
  }

  get dashboardSiteQuickActionDialogApprove() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 42, this.validate);
  }

  get quotesDeleteProductPageCancel() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 420, this.validate);
  }

  get cookiesBannerBannerDisplayed() {
    return new EventsFilter<{ url: Url; }>(this.util.getRawEvents, 5, 4200, this.validate);
  }

  get cookiesBannerPolicyApplied() {
    return new EventsFilter<{
      url: Url;
      third_party: boolean;
      advertisement: boolean;
      request_type: string;
      visitor_id: GUID;
      analytics: boolean;
      functional: boolean;
    }>(this.util.getRawEvents, 5, 4201, this.validate);
  }

  get quotesEditInvoice() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      appDefId: GUID;
      origin: string;
      status: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 421, this.validate);
  }

  get quotesPreviewInvoice() {
    return new EventsFilter<{
      source: string;
      paymentType: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      status: string;
      origin_device: string;
      invoiceSource: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 422, this.validate);
  }

  get quotesPrintInvoiceSrc5Evid423() {
    return new EventsFilter<{
      externalId: GUID;
      paymentType: string;
      view_type: string;
      appDefId: GUID;
      originPage: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 423, this.validate);
  }

  get quotesAddPaymentClick() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      appDefId: GUID;
      origin: string;
      status: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
      fully_paid: boolean;
    }>(this.util.getRawEvents, 5, 424, this.validate);
  }

  get quotesAddPaymentPageOk() {
    return new EventsFilter<{
      paymentMethod: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
      fully_paid: boolean;
    }>(this.util.getRawEvents, 5, 425, this.validate);
  }

  get quotesAddPaymentPageCancel() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 426, this.validate);
  }

  get quotesVoidPageOk() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 428, this.validate);
  }

  get quotesVoidPageCancel() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 429, this.validate);
  }

  get dashboardSiteQuickActionDialogClose() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 43, this.validate);
  }

  get quotesDeleteInvoiceClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      status: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 430, this.validate);
  }

  get quotesDeleteInvoicePageOk() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 431, this.validate);
  }

  get quotesDeleteInvoicePageCancel() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 432, this.validate);
  }

  get quotesSettingsNewTaxClick() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 433, this.validate);
  }

  get quotesSettingsNewTaxPageSave() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 434, this.validate);
  }

  get quotesSettingsNewTaxPageCancel() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 435, this.validate);
  }

  get quotesEditTaxClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 436, this.validate);
  }

  get quotesDeleteTaxClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 437, this.validate);
  }

  get quotesDeleteTaxPageOk() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 438, this.validate);
  }

  get quotesDeleteTaxPageCancel() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 439, this.validate);
  }

  get myAccountClickOnHelp() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      origin_app: string;
      origin: string;
      app_id: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 44, this.validate);
  }

  get quotesShowPaymentPopupPage() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 440, this.validate);
  }

  get quotesConnectPaymentClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 441, this.validate);
  }

  get quotesCreateAnAccountOfPaymentProvider() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 442, this.validate);
  }

  get quotesNonValidPaypalAccountPopup() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 443, this.validate);
  }

  get quotesNonValidPaypalAccountPopupClose() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 444, this.validate);
  }

  get quotesNonValidPaypalAccountPopupClickLink() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      link_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 445, this.validate);
  }

  get quotesSortInvoices() {
    return new EventsFilter<{
      name: string;
      num_of_invoices: number;
      view_type: string;
      order: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 446, this.validate);
  }

  get quotesFilterInvoices() {
    return new EventsFilter<{
      name: string;
      num_of_invoices: number;
      view_type: string;
      origin_device: string;
      platform: string;
      filter_type: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 447, this.validate);
  }

  get quotesSearchInvoices() {
    return new EventsFilter<{
      num_of_invoices: number;
      view_type: string;
      text: string;
      num_of_results: number;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 448, this.validate);
  }

  get quotesDownloadPdf() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      invoiceSource: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 449, this.validate);
  }

  get dashboardAccountSettingsImageAction() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 45, this.validate);
  }

  get quotesResendFromPreviewPage() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      appDefId: GUID;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 450, this.validate);
  }

  get quotesRunReportClickGenerateReportClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      basis: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 451, this.validate);
  }

  get quotesPrintReportClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      basis: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 452, this.validate);
  }

  get quotesExportReportClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      file_type: string;
      platform: string;
      basis: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 453, this.validate);
  }

  get quotesPageView() {
    return new EventsFilter<{
      num_of_invoices: number;
      view_type: string;
      referral: string;
      origin: string;
      num_of_contacts: number;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 454, this.validate);
  }

  get quotesManagePaymentsBannerDisplayed() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 455, this.validate);
  }

  get quotesDismissManagePaymentsBanner() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 456, this.validate);
  }

  get quotesClickCtaInManagePaymentsBanner() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 457, this.validate);
  }

  get quotesClickViewOrderBooking() {
    return new EventsFilter<{
      view_type: string;
      app_name: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 458, this.validate);
  }

  get quotesInvoicesAutomaticallyCreateAndSendInvoices() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      is_auto: boolean;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 459, this.validate);
  }

  get dashboardAccountSettingsImageActionSuccess() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 46, this.validate);
  }

  get quotesAddCustomerClick() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 460, this.validate);
  }

  get quotesChooseACustomer() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      is_new_contact: boolean;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 461, this.validate);
  }

  get quotesRemoveCustomer() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 462, this.validate);
  }

  get quotesDueDateUpdating() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      due_date: DateTime;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 463, this.validate);
  }

  get quotesDateOfIssueUpdating() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      date_of_issue: DateTime;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 464, this.validate);
  }

  get quotesAddDiscount() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      discount: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 465, this.validate);
  }

  get quotesChooseAProduct() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      productSource: string;
      productName: string;
      productId: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 466, this.validate);
  }

  get quotesRemoveProduct() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      product_id: number;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 467, this.validate);
  }

  get quotesEditProductOrService() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      product_id: number;
      productName: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 468, this.validate);
  }

  get quotesSelectTax() {
    return new EventsFilter<{
      uuid: GUID;
      taxRate: number;
      view_type: string;
      tax_name: string;
      product_id: number;
      contact_id: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 469, this.validate);
  }

  get quotesAddingBusinessLogo() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 470, this.validate);
  }

  get quotesAddingBusinessName() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 471, this.validate);
  }

  get quotesClickSaveOnAddBusinessDetailsPage() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 472, this.validate);
  }

  get quotesBoardingPageClickClose() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 473, this.validate);
  }

  get quotesGetTheWixAppBannerDisplayed() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 474, this.validate);
  }

  get quotesDismissGetWixAppBanner() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 475, this.validate);
  }

  get quotesClickCtaInGetWixAppBanner() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 476, this.validate);
  }

  get quotesPrintInvoiceSrc5Evid477() {
    return new EventsFilter<{
      paymentType: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 477, this.validate);
  }

  get quotesPayInvoiceClick() {
    return new EventsFilter<{
      totalAmountLong: number;
      externalId: GUID;
      paymentType: string;
      view_type: string;
      invoiceType: string;
      origin: string;
      invoiceSource: GUID;
      currency: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 478, this.validate);
  }

  get quotesCloseManagePlanBillingTooltip() {
    return new EventsFilter<{
      choose: string;
      view_type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 479, this.validate);
  }

  get quotesCreateInvoiceToggleRecurring() {
    return new EventsFilter<{
      toggle: boolean;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 480, this.validate);
  }

  get quotesPrintFromPreviewPage() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 481, this.validate);
  }

  get quotesPreviewFromInsideTheInvoiceCreation() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 482, this.validate);
  }

  get quotesCancelFromInsideTheInvoiceCreation() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 483, this.validate);
  }

  get quotesPreviewFromTable() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      origin: string;
      appdefid: GUID;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 484, this.validate);
  }

  get mySitesEditSite() {
    return new EventsFilter<{
      view_type: string;
      ds_origin: string;
      origin: string;
      view_level: string;
      place: string;
      is_premium: boolean;
      platform: string;
      hosting: string;
      msid: GUID;
      is_published: boolean;
    }>(this.util.getRawEvents, 5, 486, this.validate);
  }

  get sidebarCategoryItemsShown488() {
    return new EventsFilter<{
      name: string;
      item_id: string;
      hosting_platform: string;
      sidebar_name: string;
      section_name: string;
      category_items_list: string;
      page_view: string;
      view_type: string;
      page_id: string;
      sidebar_state: string;
      level_of_popover: number;
      origin: string;
      disabled: string;
      platform: string;
      hosting_platform_context_id: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 488, this.validate);
  }

  get crmHomeCreateButtonClick() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 489, this.validate);
  }

  get crmHomeCreateButtonChooseOption() {
    return new EventsFilter<{
      uuid: GUID;
      option: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 490, this.validate);
  }

  get crmHomeSecondaryCtaClick() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      tabName: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 491, this.validate);
  }

  get crmHomeCarouselClick() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 492, this.validate);
  }

  get crmHomeManageYourFinancesChoose() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      tabName: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 493, this.validate);
  }

  get crmHomeCustomerManagementToolsChoose() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      tabName: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 494, this.validate);
  }

  get quotesSettingsChangeTabs() {
    return new EventsFilter<{
      tab: string;
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 497, this.validate);
  }

  get quotesSettingsSuccessToast() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 498, this.validate);
  }

  get contactEnrichmentTemporaryEvent() {
    return new EventsFilter<{
      view_type: string;
      hasContacts: boolean;
      origin: string;
      pageView: string;
      contact_id: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 499, this.validate);
  }

  get helpWidgetClickOnSeeAllResults() {
    return new EventsFilter<{
      query: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 5, this.validate);
  }

  get dashboardClickOnConnectDomain() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 50, this.validate);
  }

  get dashboardClickOnSelectPremiumPlan() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 51, this.validate);
  }

  get dashboardClickBuyDomainFirst() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 52, this.validate);
  }

  get dashboardCloseConnectDomainPopUp() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 53, this.validate);
  }

  get dashboardBannerLoadingInit() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 54, this.validate);
  }

  get engageEmailSettingsPageView() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 540, this.validate);
  }

  get engageEmailSettingsUpdateValue() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 541, this.validate);
  }

  get engageEmailSettingsSaveChangesClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 542, this.validate);
  }

  get engageEmailSettingsCancelBack() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 544, this.validate);
  }

  get engageEmailSettingsUnsavedChangesDialog() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      invoiceId: GUID;
      origin: string;
      status: string;
      appdefid: GUID;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 546, this.validate);
  }

  get dashboardBannerLoadingComplete() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 55, this.validate);
  }

  get sideBarItemClick550() {
    return new EventsFilter<{
      name: string;
      prev_app_id: GUID;
      item_id: string;
      sub_section_name: string;
      hosting_platform: string;
      sidebar_name: string;
      section_name: string;
      previous_item_name: string;
      referral_info: string;
      view_type: string;
      is_from_main_sidebar: boolean;
      sidebar_state: string;
      origin: string;
      sub_category_items_list: string;
      items_list: string;
      second_sub_category_items_list: string;
      counter: number;
      app_id: string;
      type: string;
      previous_sidebar_name: string;
      platform: string;
      hosting_platform_context_id: string;
      hosting: string;
      previous_item_id: string;
      msid: GUID;
      legacy_name: string;
      target_page_id: string;
    }>(this.util.getRawEvents, 5, 550, this.validate);
  }

  get bizManagerBizInfoFieldValueChangedNotSaved() {
    return new EventsFilter<{
      name: string;
      sub_category: string;
      hosting_platform: string;
      field_type: string;
      page_view: string;
      industry_id: string;
      view_type: string;
      structure_id: string;
      origin: string;
      category: string;
      fold_name: string;
      platform: string;
      location_details: string;
      hosting: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 551, this.validate);
  }

  get bizManagerBizInfoClickOnSave() {
    return new EventsFilter<{
      name: string;
      hosting_platform: string;
      page_view: string;
      view_type: string;
      origin: string;
      place: string;
      fold_name: string;
      platform: string;
      location_details: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 552, this.validate);
  }

  get bizManagerBizInfoSaveSuccess() {
    return new EventsFilter<{
      name: string;
      sub_category: string;
      hosting_platform: string;
      page_view: string;
      industry_id: string;
      view_type: string;
      structure_id: string;
      origin: string;
      category: string;
      place: string;
      fold_name: string;
      platform: string;
      location_details: string;
      hosting: string;
      msid: GUID;
      is_physical_address: boolean;
    }>(this.util.getRawEvents, 5, 553, this.validate);
  }

  get bizManagerBizInfoClickOnDiscardButton() {
    return new EventsFilter<{
      hosting_platform: string;
      page_view: string;
      view_type: string;
      origin: string;
      place: string;
      platform: string;
      location_details: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 554, this.validate);
  }

  get bizManagerBizInfoApproveDiscard() {
    return new EventsFilter<{
      hosting_platform: string;
      context: string;
      page_view: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 555, this.validate);
  }

  get bizManagerBizInfoCancelDiscard() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      origin: string;
      platform: string;
      location_details: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 556, this.validate);
  }

  get bizManagerBizInfoNavigateAwayDialogIsShown() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 557, this.validate);
  }

  get bizManagerBizInfoNavigateAwayStayInPage() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 558, this.validate);
  }

  get bizManagerBizInfoClickOnButton() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      fold_name: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 559, this.validate);
  }

  get siteHistoryViewerNotLoaded() {
    return new EventsFilter<{
      referralInfo: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 56, this.validate);
  }

  get bizManagerBizInfoNavigateAwayLeaveThisPage() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 560, this.validate);
  }

  get bizManagerStartLoading() {
    return new EventsFilter<{
      context: GUID;
      view_type: string;
      screen_width: number;
      initial_load: boolean;
      app_ids: string;
      window_width: number;
      loading_time_from_performance_now: number;
      screen_height: number;
      app_id: string;
      window_height: number;
      platform: string;
      time_to_first_byte: number;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 561, this.validate);
  }

  get bizManagerFinishLoading() {
    return new EventsFilter<{
      view_type: string;
      num_of_bundles: number;
      initial_load: boolean;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 562, this.validate);
  }

  get bizManagerModuleLoadingStart() {
    return new EventsFilter<{
      wixsession: string;
      prev_module_id: string;
      referral_info: string;
      view_type: string;
      initial_load: boolean;
      origin: string;
      app_id: GUID;
      platform: string;
      origin_app_id: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 564, this.validate);
  }

  get bizManagerModuleLoadingFinish() {
    return new EventsFilter<{
      wixsession: string;
      referral_info: string;
      view_type: string;
      initial_load: boolean;
      origin: string;
      app_id: GUID;
      platform: string;
      origin_app_id: string;
      hosting: string;
      msid: GUID;
      module_id: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 565, this.validate);
  }

  get bizManagerNavigateToViewStart() {
    return new EventsFilter<{
      wixsession: string;
      prev_module_id: string;
      referral_info: string;
      view_type: string;
      sub_view: string;
      prev_view: string;
      app_id: GUID;
      prev_sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
      view: string;
    }>(this.util.getRawEvents, 5, 566, this.validate);
  }

  get dashboardClickOnCreatePriorityTicketExperts() {
    return new EventsFilter<{
      view_type: string;
      origin_app: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 57, this.validate);
  }

  get bizManagerClickOnBackInSidebarItem() {
    return new EventsFilter<{
      name: string;
      sidebar_name: string;
      view_type: string;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
      legacy_name: string;
    }>(this.util.getRawEvents, 5, 570, this.validate);
  }

  get bizManagerSetupWidgetIsDisplayed() {
    return new EventsFilter<{
      done_steps: number;
      asset_campaign_guid: string;
      view_type: string;
      skipped_steps: number;
      steps: number;
      widget_state: string;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 573, this.validate);
  }

  get bizManagerMinimizeExpandSetupWidget() {
    return new EventsFilter<{
      done_steps: number;
      view_type: string;
      skipped_steps: number;
      app_id: string;
      steps: number;
      widget_state: string;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 574, this.validate);
  }

  get bizManagerSetupWidgetShowMessageComplete() {
    return new EventsFilter<{
      asset_campaign_guid: string;
      view_type: string;
      sub_view: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
      view: string;
    }>(this.util.getRawEvents, 5, 575, this.validate);
  }

  get bizManagerSetupWidgetClickCtaAfterShowMessageComplete() {
    return new EventsFilter<{
      asset_campaign_guid: string;
      click_type: string;
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 576, this.validate);
  }

  get bizManagerDisplayAnalyticsWidget() {
    return new EventsFilter<{
      view_type: string;
      app_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 577, this.validate);
  }

  get bizManagerClickOnHelpCenterInDashboardFooter() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      app_id: string;
      platform: string;
      hosting: string;
    }>(this.util.getRawEvents, 5, 578, this.validate);
  }

  get bizManagerClickOnWidgetCta() {
    return new EventsFilter<{
      done_steps: number;
      step_id: number;
      step: string;
      step_guid: GUID;
      view_type: string;
      skipped_steps: number;
      app_id: string;
      steps: number;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 579, this.validate);
  }

  get transferSiteResendTransferEmailClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 58, this.validate);
  }

  get bizManagerHtmlLoaded() {
    return new EventsFilter<{
      view_type: string;
      app_instance_id: GUID;
      app_ids: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 580, this.validate);
  }

  get bizManagerViewStartLoading() {
    return new EventsFilter<{
      referral_info: string;
      view_type: string;
      sub_view: string;
      app_instance_id: GUID;
      initial_load: boolean;
      app_ids: string;
      prev_view: string;
      prev_sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 581, this.validate);
  }

  get bizManagerViewFinishLoading() {
    return new EventsFilter<{
      view_type: string;
      sub_view: string;
      app_instance_id: GUID;
      initial_load: boolean;
      app_ids: string;
      prev_view: string;
      prev_sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 582, this.validate);
  }

  get bizManagerClickLinkFromTooltip() {
    return new EventsFilter<{
      name: string;
      click_type: string;
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
      value: string;
      template_id: string;
    }>(this.util.getRawEvents, 5, 584, this.validate);
  }

  get bizManagerBusinessInfoMergeDialogShown() {
    return new EventsFilter<{
      view_type: string;
      merged_apps: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 585, this.validate);
  }

  get bizManagerBusinessInfoMergeDialogApprove() {
    return new EventsFilter<{
      view_type: string;
      merged_apps: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 586, this.validate);
  }

  get bizManagerBusinessInfoMergeDialogClose() {
    return new EventsFilter<{
      view_type: string;
      merged_apps: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 587, this.validate);
  }

  get managerFullStoryRecordingStarted() {
    return new EventsFilter<{
      videoUrl: Url;
      view_type: string;
      esi: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 588, this.validate);
  }

  get bizManagerDismissTooltip() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      place: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 589, this.validate);
  }

  get transferSiteGetTransferLinkClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 59, this.validate);
  }

  get bizManagerWhatSNextCloseVideoAsset() {
    return new EventsFilter<{
      percentage: number;
      group_id: GUID;
      asset_campaign_guid: string;
      item_id: GUID;
      view_type: string;
      asset_location_on_page: string;
      offering_guid: string;
      asset_location_from_group_list: number;
      asset_campaign_id: string;
      promotion_asset_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 592, this.validate);
  }

  get bizManagerShowUrgentMessages() {
    return new EventsFilter<{
      asset_campaign_guid: string;
      view_type: string;
      offering_guid: string;
      asset_campaign_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 593, this.validate);
  }

  get bizManagerUrgentMessagesClicked() {
    return new EventsFilter<{
      asset_campaign_guid: string;
      click_type: string;
      view_type: string;
      offering_guid: string;
      asset_campaign_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 594, this.validate);
  }

  get bizManagerDashboardAssetClickOnArrow() {
    return new EventsFilter<{
      asset_campaign_guid: string;
      click_type: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 597, this.validate);
  }

  get bizManagerOpenPanelStart() {
    return new EventsFilter<{
      view_type: string;
      panel_name: string;
      sub_view: string;
      contact_id: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
    }>(this.util.getRawEvents, 5, 598, this.validate);
  }

  get bizManagerOpenPanelFinish() {
    return new EventsFilter<{
      view_type: string;
      panel_name: string;
      sub_view: string;
      contact_id: string;
      platform: string;
      hosting: string;
      loading_time_from_interactive: number;
      msid: GUID;
      initiator: string;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 599, this.validate);
  }

  get helpWidgetErrorSearchingItems() {
    return new EventsFilter<{
      query: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 6, this.validate);
  }

  get transferSiteCancelTransferClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 60, this.validate);
  }

  get dummyEventForSiteMembers() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      panel_name: string;
      sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      initiator: string;
      view: string;
    }>(this.util.getRawEvents, 5, 600, this.validate);
  }

  get transferSiteCancelTransferClickApprove() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 61, this.validate);
  }

  get transferSiteCancelTransferAbort() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 62, this.validate);
  }

  get transferSiteReceiverOpenCompleteTransferDialog() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 64, this.validate);
  }

  get quotesNewQuoteClick() {
    return new EventsFilter<{
      original_quoteId: GUID;
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 65, this.validate);
  }

  get bizManagerClickOnSetupSkipUndo() {
    return new EventsFilter<{
      done_steps: number;
      step_id: number;
      step: string;
      click_type: string;
      step_guid: GUID;
      view_type: string;
      skipped_steps: number;
      app_id: string;
      steps: number;
      platform: string;
      hosting: string;
      msid: GUID;
      module_id: string;
    }>(this.util.getRawEvents, 5, 656, this.validate);
  }

  get bizManagerOpenPanelInteractive() {
    return new EventsFilter<{
      view_type: string;
      panel_name: string;
      sub_view: string;
      platform: string;
      hosting: string;
      msid: GUID;
      view: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 657, this.validate);
  }

  get dashboardAccountSettingsHoverOverSendConfirmationI() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 66, this.validate);
  }

  get phoneVerificationHoverOnMotivation() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 660, this.validate);
  }

  get mobilePhoneNumberConfirmationPopUpClickOkForSendingSms() {
    return new EventsFilter<{
      uuid: GUID;
      hashed_phone: string;
      view_type: string;
      origin: string;
      mode: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 661, this.validate);
  }

  get mobilePhoneNumberConfirmationPopUpClickConfirmForSmsCode() {
    return new EventsFilter<{
      uuid: GUID;
      hashed_phone: string;
      view_type: string;
      code: string;
      mode: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 662, this.validate);
  }

  get phoneVerificationPhoneValidation() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 665, this.validate);
  }

  get phoneVerificationCodeValidation() {
    return new EventsFilter<{
      uuid: GUID;
      view_type: string;
      validstatus: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 666, this.validate);
  }

  get mobilePhoneNumberConfirmationOpenPopUp() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 667, this.validate);
  }

  get dashboardAccountSettingsClickLearnMoreInI() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 67, this.validate);
  }

  get bizManagerNewBadgeShow() {
    return new EventsFilter<{
      name: string;
      sidebar_name: string;
      view_type: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 673, this.validate);
  }

  get mobilePhoneNumberConfirmationClickOnEdit() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 678, this.validate);
  }

  get accountSettingsClickOnManagePreferences() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 679, this.validate);
  }

  get dashboardAccountSettingsClickSendConfirmation() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 68, this.validate);
  }

  get accountSettingsDeactivateAccountClickOnLearnMore() {
    return new EventsFilter<{
      view_type: string;
      section: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 680, this.validate);
  }

  get twoFactorAuthenticationSetupEnableClick() {
    return new EventsFilter<{
      view_type: string;
      click_from: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 681, this.validate);
  }

  get accountSettingsUpdatesConfirmEnterPassword() {
    return new EventsFilter<{
      view_type: string;
      is_valid: boolean;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 682, this.validate);
  }

  get twoFactorAuthenticationSetupSendCode() {
    return new EventsFilter<{
      view_type: string;
      phone_type: string;
      mode: string;
      platform: string;
      action: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 683, this.validate);
  }

  get twoFactorAuthenticationSetupConfirmCodeClick() {
    return new EventsFilter<{
      view_type: string;
      mode: string;
      is_valid: boolean;
      platform: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 684, this.validate);
  }

  get twoFactorAuthenticationSetupEditNumber() {
    return new EventsFilter<{
      view_type: string;
      click_from: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 685, this.validate);
  }

  get twoFactorAuthenticationSetupDisableAction() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 686, this.validate);
  }

  get twoFactorAuthenticationSetupDisableClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 687, this.validate);
  }

  get accountSettingsSetPasswordModalLoad() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 688, this.validate);
  }

  get accountSettingsOnRequestToUnlockField() {
    return new EventsFilter<{
      view_type: string;
      click_from: string;
      platform: string;
      field_name: string;
    }>(this.util.getRawEvents, 5, 689, this.validate);
  }

  get quotesFilterQuotes() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin_device: string;
      platform: string;
      filter_type: string;
      msid: string;
      num_of_quotes: number;
    }>(this.util.getRawEvents, 5, 69, this.validate);
  }

  get accountSettingsUpdatesConfirmPasswordModalLoad() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 690, this.validate);
  }

  get exposureEventGoogleConnectSeo() {
    return new EventsFilter<{
      dealer_asset_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 6900, this.validate);
  }

  get accountSettingsForgotPasswordClick() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 691, this.validate);
  }

  get accountSettingsManagePrivacyPreferences() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 695, this.validate);
  }

  get accountSettingsTwoFactorAuthenticationSetupSendCodeSuccess() {
    return new EventsFilter<{
      view_type: string;
      mode: string;
      platform: string;
      action: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 696, this.validate);
  }

  get accountSettingsTwoFactorAuthenticationSetupSendCodeFailed() {
    return new EventsFilter<{
      view_type: string;
      mode: string;
      platform: string;
      action: string;
      origin: string;
    }>(this.util.getRawEvents, 5, 697, this.validate);
  }

  get dummyNameSrc5Evid7100() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 7100, this.validate);
  }

  get mySitesClickOnSelectSite() {
    return new EventsFilter<{
      viewMode: string;
      referral_additional_info: string;
      isPublished: boolean;
      siteTypeName: string;
      position: number;
      isPremium: boolean;
      platform: string;
      msid: GUID;
      siteUrl: string;
      view: string;
    }>(this.util.getRawEvents, 5, 715, this.validate);
  }

  get dashboardViewSite() {
    return new EventsFilter<{
      site_id: GUID;
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 72, this.validate);
  }

  get quotesClickOnCopyLinkFromMoreActions() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 727, this.validate);
  }

  get quotesErrorGenerateLinkFromMoreActions() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 728, this.validate);
  }

  get quotesClickOnCreateLinkFromMoreActions() {
    return new EventsFilter<{
      view_type: string;
      invoiceId: GUID;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 729, this.validate);
  }

  get dashboardClickOnUpgrade() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      hosting: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 73, this.validate);
  }

  get quotesSettingsChangeNumbering() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 730, this.validate);
  }

  get quotesHeaderPreview() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 732, this.validate);
  }

  get quotesOpenFirstCard() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 733, this.validate);
  }

  get quotesDropdownOption() {
    return new EventsFilter<{
      option: string;
      view_type: string;
      text: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 734, this.validate);
  }

  get sidebarModalOfFteToTheNewSidebarIsLoaded() {
    return new EventsFilter<{ category_items_list: string; }>(this.util.getRawEvents, 5, 735, this.validate);
  }

  get quotesLimit5KCsvDownload() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 738, this.validate);
  }

  get accountSettingsStep1ToDisablePartnerDashboard() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 739, this.validate);
  }

  get quotesSearchQuotes() {
    return new EventsFilter<{
      view_type: string;
      text: string;
      num_of_results: number;
      origin_device: string;
      platform: string;
      msid: string;
      num_of_quotes: number;
    }>(this.util.getRawEvents, 5, 74, this.validate);
  }

  get accountSettingsErrorWhenClickToDisablePartnerDashboard() {
    return new EventsFilter<{
      view_type: string;
      errorReason: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 740, this.validate);
  }

  get accountSettingsDisabledEnabledPartnerDashboard() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 741, this.validate);
  }

  get crmHomeSendMessageToInbox() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 745, this.validate);
  }

  get crmHomeAddNewContactWidget() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 746, this.validate);
  }

  get crmHomeChooseContactFromWidget() {
    return new EventsFilter<{
      view_type: string;
      contactId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 747, this.validate);
  }

  get crmHomeSendMessageViaContactsWidget() {
    return new EventsFilter<{
      view_type: string;
      contactId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 748, this.validate);
  }

  get quotesEditQuote() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 75, this.validate);
  }

  get dummyNameSrc5Evid7500() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 7500, this.validate);
  }

  get quotesPreviewQuote() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 76, this.validate);
  }

  get enableDisablePartnersDhasboard() {
    return new EventsFilter<{ action: string; }>(this.util.getRawEvents, 5, 7600, this.validate);
  }

  get quotesCreateQuoteSaveDraftClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 77, this.validate);
  }

  get deprecatedUpdateOrCreateLocation() {
    return new EventsFilter<{
      phoneFilled: boolean;
      desc: string;
      timezone: string;
      data: string;
      address_filled: boolean;
      activity_type: string;
      location_guid: GUID;
      loaction: string;
      status: boolean;
      currency: string;
      type: string;
      msid: GUID;
      checked_by_default: boolean;
      email_filled: boolean;
    }>(this.util.getRawEvents, 5, 7700, this.validate);
  }

  get deleteLocation() {
    return new EventsFilter<{
      location_guid: GUID;
      locationGuid: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 7701, this.validate);
  }

  get setADefaultLocation() {
    return new EventsFilter<{
      locationGuid: GUID;
      oldLocationGuid: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 7702, this.validate);
  }

  get updateOrCreateMultilocationSrc5Evid7703() {
    return new EventsFilter<{
      businessSchedule: string;
      phoneFilled: boolean;
      desc: string;
      emailFilled: boolean;
      timezone: string;
      data: string;
      statusText: string;
      loaction: string;
      activityType: string;
      locationGuid: GUID;
      status: boolean;
      currency: string;
      addressFilled: boolean;
      type: string;
      msid: GUID;
      isDefault: boolean;
    }>(this.util.getRawEvents, 5, 7703, this.validate);
  }

  get updateOrCreateMultilocationSrc5Evid7704() {
    return new EventsFilter<{
      businessSchedule: string;
      number: string;
      city: string;
      desc: string;
      name: string;
      latitude: string;
      email: string;
      timezone: string;
      statusText: string;
      formatted_address: string;
      country: string;
      longitude: string;
      loaction: string;
      revision: number;
      activityType: string;
      locationGuid: GUID;
      apt: string;
      fax: string;
      subdivision: string;
      hint: string;
      postal_code: string;
      type: string;
      msid: GUID;
      isDefault: boolean;
      phone: string;
    }>(this.util.getRawEvents, 5, 7704, this.validate);
  }

  get updateOrCreateMultilocation() {
    return new EventsFilter<{
      businessSchedule: string;
      city: string;
      desc: string;
      name: string;
      latitude: string;
      email: string;
      timezone: string;
      formattedAddress: string;
      statusText: string;
      country: string;
      streetName: string;
      longitude: string;
      postalCode: string;
      streetApt: string;
      revision: number;
      activityType: string;
      locationGuid: GUID;
      fax: string;
      subdivision: string;
      streetNumber: string;
      hint: string;
      locationType: string;
      msid: GUID;
      isDefault: boolean;
      phone: string;
      isInventoryLocation: boolean;
    }>(this.util.getRawEvents, 5, 7705, this.validate);
  }

  get quotesCreateQuoteSaveDraftComplete() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 78, this.validate);
  }

  get quotesCreateQuoteSaveDraftFailed() {
    return new EventsFilter<{
      view_type: string;
      reason: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 79, this.validate);
  }

  get automationsSecurityCheckForAmountOfEmailInGetNotifiedAction() {
    return new EventsFilter<{
      msid: GUID;
      emailCount: number;
    }>(this.util.getRawEvents, 5, 7901, this.validate);
  }

  get uouUnsubscribePageView() {
    return new EventsFilter<{
      visitor_id: GUID;
      view_type: string;
      notification_Id: GUID;
      platform: string;
      msid: GUID;
      device: string;
    }>(this.util.getRawEvents, 5, 798, this.validate);
  }

  get uouUnsubscribeClick() {
    return new EventsFilter<{
      click_type: string;
      visitor_id: GUID;
      view_type: string;
      notification_Id: GUID;
      platform: string;
      msid: GUID;
      device: string;
    }>(this.util.getRawEvents, 5, 799, this.validate);
  }

  get dashboardCreateNewSite() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      sub_view: string;
      creation_type: string;
      origin: string;
      view_level: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 80, this.validate);
  }

  get sampleEventTest() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 800, this.validate);
  }

  get gdprUouSiteOwnerOpenPrivacyGdprTab() {
    return new EventsFilter<{ msid: GUID; }>(this.util.getRawEvents, 5, 801, this.validate);
  }

  get gdprUouSiteOwnerInitiateGdprRequest() {
    return new EventsFilter<{
      msid: GUID;
      origin: string;
    }>(this.util.getRawEvents, 5, 802, this.validate);
  }

  get gdprUouSiteOwnerSelectRequestType() {
    return new EventsFilter<{
      request_type: string;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 803, this.validate);
  }

  get gdprUouSiteOwnerInsertUouInformation() {
    return new EventsFilter<{
      hashed_phone: string;
      request_type: string;
      hashed_mail: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 804, this.validate);
  }

  get gdprUouSiteOwnerReConfirmUouInformation() {
    return new EventsFilter<{
      hashed_phone: string;
      request_type: string;
      hashed_mail: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 805, this.validate);
  }

  get gdprUouSiteOwnerUouRequestSubmissionSuccess() {
    return new EventsFilter<{
      hashed_phone: string;
      request_type: string;
      hashed_mail: string;
      request_id: GUID;
      gdpr_request_id: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 806, this.validate);
  }

  get gdprUouSiteOwnerUouRequestSubmissionFailed() {
    return new EventsFilter<{
      hashed_phone: string;
      request_type: string;
      hashed_mail: string;
      origin: string;
      error_reason: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 807, this.validate);
  }

  get gdprUouSiteOwnerReturnedToPreviousFormStep() {
    return new EventsFilter<{
      hashed_phone: string;
      from_step: string;
      request_type: string;
      hashed_mail: string;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 808, this.validate);
  }

  get gdprUouSiteOwnerWishToLearnMore() {
    return new EventsFilter<{
      learn_more_type: string;
      request_type: string;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 809, this.validate);
  }

  get dashboardSiteSelectorPopupShown() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      siteTypeName: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 81, this.validate);
  }

  get gdprUsersUserOpenedTheGdprForm() {
    return new EventsFilter<{
      request_type: string;
      hashed_mail: string;
    }>(this.util.getRawEvents, 5, 810, this.validate);
  }

  get dummyNameSrc5Evid8100() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 8100, this.validate);
  }

  get gdprUsersUserSubmitTheGdprForm() {
    return new EventsFilter<{
      is_file_loaded: boolean;
      site_contact_hashed_mail: string;
      hashed_phone: string;
      request_type: string;
      hashed_last_name: string;
      hashed_mail: string;
      is_site_has_contact_form: boolean;
      last_site_edit_date: DateTime;
      hashed_first_name: string;
      site_url: Url;
      account_creation_date: DateTime;
      is_premium: boolean;
    }>(this.util.getRawEvents, 5, 811, this.validate);
  }

  get gdprUsersUserGdprFormSubmissionSuccess() {
    return new EventsFilter<{
      ticket_id: GUID;
      is_file_loaded: boolean;
      site_contact_hashed_mail: string;
      hashed_phone: string;
      request_type: string;
      hashed_last_name: string;
      hashed_mail: string;
      is_site_has_contact_form: boolean;
      last_site_edit_date: DateTime;
      hashed_first_name: string;
      site_url: Url;
      request_id: GUID;
      account_creation_date: DateTime;
      is_premium: boolean;
    }>(this.util.getRawEvents, 5, 812, this.validate);
  }

  get gdprUsersUserGdprFormSubmissionFailed() {
    return new EventsFilter<{
      is_file_loaded: boolean;
      site_contact_hashed_mail: string;
      hashed_phone: string;
      request_type: string;
      hashed_last_name: string;
      hashed_mail: string;
      is_site_has_contact_form: boolean;
      last_site_edit_date: DateTime;
      error_reason: string;
      hashed_first_name: string;
      site_url: Url;
      account_creation_date: DateTime;
      is_premium: boolean;
    }>(this.util.getRawEvents, 5, 813, this.validate);
  }

  get cookiesBannerCta() {
    return new EventsFilter<{
      url: Url;
      origin: string;
      action: string;
      esi: string;
    }>(this.util.getRawEvents, 5, 814, this.validate);
  }

  get cookiesBannerSettingsWindowCta() {
    return new EventsFilter<{
      url: Url;
      toggle: boolean;
      action: string;
      esi: string;
    }>(this.util.getRawEvents, 5, 815, this.validate);
  }

  get cookiesBannerPrivacyPolicyClicked() {
    return new EventsFilter<{
      url: Url;
      policy: string;
    }>(this.util.getRawEvents, 5, 816, this.validate);
  }

  get cookiesBannerSettingPageCta() {
    return new EventsFilter<{
      url: Url;
      toggle: boolean;
      policy: string;
      action: string;
    }>(this.util.getRawEvents, 5, 817, this.validate);
  }

  get cookiesBannerSettingPageOptOutConfirmation() {
    return new EventsFilter<{
      url: Url;
      policy: string;
      action: string;
    }>(this.util.getRawEvents, 5, 818, this.validate);
  }

  get crmHomeViewContactViaContactsWidget() {
    return new EventsFilter<{
      view_type: string;
      contactId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 819, this.validate);
  }

  get dashboardSiteSelectorPopupClose() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      siteTypeName: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 82, this.validate);
  }

  get crmHomeSeeAllContactsViaContactsWidget() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 820, this.validate);
  }

  get crmHomeImportContactsViaContactsBanner() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 821, this.validate);
  }

  get crmHomeTasksWidgetAddNewTask() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 822, this.validate);
  }

  get crmHomeTasksWidgetSeeAllTasks() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 823, this.validate);
  }

  get dashboardSiteSelectorPopupSelectAction() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      siteTypeName: string;
      platform: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 83, this.validate);
  }

  get quotesEmailQuotesPage() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      resend: boolean;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 84, this.validate);
  }

  get sendFaqMessage() {
    return new EventsFilter<{
      visitorId: GUID;
      answer: boolean;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8400, this.validate);
  }

  get crmHomeWorkflowsWidgetGoToWorkflows() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 844, this.validate);
  }

  get toastShown85() {
    return new EventsFilter<{
      name: string;
      hosting_platform: string;
      active_page_id: string;
      scope: string;
      trigger_entity_type: string;
      view_type: string;
      severity: string;
      type: string;
      platform: string;
      hosting_platform_context_id: string;
      hosting: string;
      timeout: number;
      msid: GUID;
      trigger_entity_id: string;
      toast_timeout: string;
      message: string;
      app_id: string;
    }>(this.util.getRawEvents, 5, 85, this.validate);
  }

  get crmHomeWorkflowsWidgetUseTemplate() {
    return new EventsFilter<{
      view_type: string;
      template: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 852, this.validate);
  }

  get crmHomeWorkflowsWidgetStartFromScratch() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 853, this.validate);
  }

  get crmHomeIntegrationsCommunicationsViewAll() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 854, this.validate);
  }

  get crmHomeIntegrationsCommunicationsConnect() {
    return new EventsFilter<{
      view_type: string;
      connectTab: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 855, this.validate);
  }

  get toastClicked86() {
    return new EventsFilter<{
      name: string;
      hosting_platform: string;
      active_page_id: string;
      scope: string;
      trigger_entity_type: string;
      click_type: string;
      view_type: string;
      severity: string;
      type: string;
      platform: string;
      hosting_platform_context_id: string;
      hosting: string;
      timeout: number;
      msid: GUID;
      trigger_entity_id: string;
      toast_timeout: string;
    }>(this.util.getRawEvents, 5, 86, this.validate);
  }

  get crmHomeIntegrationsMarketingViewAll() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 860, this.validate);
  }

  get dummyNameSrc5Evid8600() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 8600, this.validate);
  }

  get siteMembersSignupSettingsEditFieldTextSettings() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      setting_value: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 864, this.validate);
  }

  get formBuilderGetSubscribersFormManageSubscribersClick() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 867, this.validate);
  }

  get formBuilderGetSubscribersFormManageSubscribersActionsClick() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 868, this.validate);
  }

  get formBuilderCaptachaStatus() {
    return new EventsFilter<{
      visitor_id: GUID;
      authentication_status: string;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 869, this.validate);
  }

  get quotesEmailQuotePageCancelClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      resend: boolean;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 87, this.validate);
  }

  get formBuilderTooltipForAddFieldForbiddenWords() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
      field_name: string;
      entered_text: string;
    }>(this.util.getRawEvents, 5, 870, this.validate);
  }

  get startLoading8702() {
    return new EventsFilter<{
      hosting_platform: string;
      hosting_platform_context_id: GUID;
    }>(this.util.getRawEvents, 5, 8702, this.validate);
  }

  get formBuilderManageChoicesUpdateDisplayName() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 871, this.validate);
  }

  get formBuilderManageChoicesAddAChoiceClick() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 872, this.validate);
  }

  get formBuilderManageChoicesEditChoice() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 873, this.validate);
  }

  get formBuilderManageChoicesDeleteChoice() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 874, this.validate);
  }

  get formBuilderManageChoicesUpdateChoiceName() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 875, this.validate);
  }

  get formBuilderManageChoicesSetAsDefaultChoice() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      choice_name: string;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 876, this.validate);
  }

  get formBuilderManageChoicesDuplicateChoiceClick() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      choice_name: string;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 877, this.validate);
  }

  get formBuilderManageChoicesDuplicateChoiceComplete() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      choice_name: string;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 878, this.validate);
  }

  get formBuilderManageChoicesReorderChoiceComplete() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      choice_name: string;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 879, this.validate);
  }

  get quotesPrintQuote() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 88, this.validate);
  }

  get formBuilderMultiStepDragStep() {
    return new EventsFilter<{
      step_name: string;
      builderOrigin: string;
      from_step: number;
      visitor_id: GUID;
      total_number_of_steps: number;
      form_comp_id: string;
      vsi: GUID;
      to_step: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 882, this.validate);
  }

  get formBuilderMultiStepClickOnManageSteps() {
    return new EventsFilter<{
      builderOrigin: string;
      click_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 883, this.validate);
  }

  get formBuilderMultiStepEditStepActions() {
    return new EventsFilter<{
      step_name: string;
      step_no: number;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 885, this.validate);
  }

  get formBuilderMultiStepAddNewStep() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 886, this.validate);
  }

  get formBuilderMultiStepAddNewField() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 887, this.validate);
  }

  get formBuilderBackofficeFormSubscriberUserActions() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
      action: string;
    }>(this.util.getRawEvents, 5, 888, this.validate);
  }

  get formBuilderMultiStepClickOnAscendPlan() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 889, this.validate);
  }

  get quotesDownloadPdfQuote() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 89, this.validate);
  }

  get formBuilderMultiStepBackNextButtonChangeText() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      button: string;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 890, this.validate);
  }

  get finishLoading8900() {
    return new EventsFilter<{
      hosting_platform: string;
      view_type: string;
      screen_width: number;
      window_width: number;
      screen_height: number;
      window_height: number;
      platform: string;
      hosting_platform_context_id: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 8900, this.validate);
  }

  get exposureEventForPaginationTest() {
    return new EventsFilter<{
      folders_number: number;
      is_pagination_user: boolean;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8906, this.validate);
  }

  get formBuilderMultiStepBackNextButtonFinishUpdateText() {
    return new EventsFilter<{
      name: string;
      builderOrigin: string;
      visitor_id: GUID;
      button: string;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 891, this.validate);
  }

  get invoiceSettingsSelectTaxDetailsCustomFieldCheckbox() {
    return new EventsFilter<{
      showTaxAmount: boolean;
      showItemsSubtotalPerTax: boolean;
      view_type: string;
      showTaxColumn: boolean;
      checkbox: boolean;
      value2: string;
      platform: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 8917, this.validate);
  }

  get invoiceSettingsClickOnLink() {
    return new EventsFilter<{
      view_type: string;
      modal_name: string;
      origin: string;
      platform: string;
      msid: string;
      value: string;
    }>(this.util.getRawEvents, 5, 8918, this.validate);
  }

  get formBuilderMultiStepUouClickOnBackNextSubmit() {
    return new EventsFilter<{
      step_name: string;
      step_no: number;
      builderOrigin: string;
      visitor_id: GUID;
      total_number_of_steps: number;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 892, this.validate);
  }

  get bookingAnywhereNoPermission() {
    return new EventsFilter<{
      view_type: string;
      buttonName: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8920, this.validate);
  }

  get mySitesMainPageFinishLoading() {
    return new EventsFilter<{
      success: boolean;
      total_folders_count: number;
      view_mode: string;
      total_sites_count: number;
      num_displayed_folders: number;
      referral_info: string;
      origin: string;
      num_displayed_sites: number;
      is_pro: boolean;
      platform: string;
      page_url: Url;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 8921, this.validate);
  }

  get addNoteTermClick() {
    return new EventsFilter<{
      source: string;
      view_type: string;
      appDefId: GUID;
      invoiceType: string;
      origin: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 8923, this.validate);
  }

  get mySitesSiteLessLoaded() {
    return new EventsFilter<{
      success: boolean;
      referral_info: string;
      origin: string;
      platform: string;
      page_url: string;
      loading_time: number;
    }>(this.util.getRawEvents, 5, 8926, this.validate);
  }

  get wixInvoicesClickingOnGroupsDropDownInSettings() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      card: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 8929, this.validate);
  }

  get formBuilderBackofficeFormDeleteKeepSubscribeItem() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 893, this.validate);
  }

  get invoicesSettingsSaveButton() {
    return new EventsFilter<{
      invoiceNumber: string;
      showTaxAmount: boolean;
      hasLogo: boolean;
      documentName: string;
      showItemsSubtotalPerTax: boolean;
      customFields: string;
      invoiceEmail: string;
      view_type: string;
      showTaxColumn: boolean;
      card_name: string;
      origin: string;
      showTransactionDetails: boolean;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8930, this.validate);
  }

  get manageFolderDropDownListShown() {
    return new EventsFilter<{
      sub_view: string;
      origin: string;
      cta: string;
      platform: string;
      permitted_items: string;
      itemsList: string;
    }>(this.util.getRawEvents, 5, 8933, this.validate);
  }

  get wixInvoicesLeavingSettingsWithoutSavingPopUp() {
    return new EventsFilter<{
      view_type: string;
      modal_name: string;
      fieldName: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8934, this.validate);
  }

  get discardModalClick() {
    return new EventsFilter<{
      view_type: string;
      modal_name: string;
      platform: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 8935, this.validate);
  }

  get wixInvoicesClickOnTabsToChoseProductFrom() {
    return new EventsFilter<{
      button_name: string;
      view_type: string;
      productSource: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8936, this.validate);
  }

  get invoiceSettingsSaveButtonClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8937, this.validate);
  }

  get wixInvoicesSavingItemDescription() {
    return new EventsFilter<{
      view_type: string;
      productSource: string;
      origin: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8938, this.validate);
  }

  get gizaApiCallReceived() {
    return new EventsFilter<{
      hosting_platform: string;
      app_id: string;
      method_name: string;
      component_id: string;
      hosting_platform_context_id: string;
      tool: string;
    }>(this.util.getRawEvents, 5, 8939, this.validate);
  }

  get formBuilderMultiStepClickOnRestoreButtons() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 894, this.validate);
  }

  get clickDoneToEditFilterView() {
    return new EventsFilter<{
      click_type: string;
      ds_origin: string;
      nesting_level: number;
      origin: string;
      view_level: string;
      is_premium: boolean;
      platform: string;
      msid: string;
      is_published: boolean;
    }>(this.util.getRawEvents, 5, 8940, this.validate);
  }

  get clickOnSaveView() {
    return new EventsFilter<{
      action_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8941, this.validate);
  }

  get mySitesEditCustomizeColumnView() {
    return new EventsFilter<{
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8942, this.validate);
  }

  get mySitesClickOnGoToDashboardLink() {
    return new EventsFilter<{
      site_class: string;
      site_owner_id: GUID;
      sub_view: string;
      nesting_level: number;
      origin: string;
      cta: string;
      is_premium: boolean;
      platform: string;
      msid: GUID;
      is_published: boolean;
    }>(this.util.getRawEvents, 5, 8943, this.validate);
  }

  get mySitesClickOnBackToMySitesFromAnEmptyFolder() {
    return new EventsFilter<{
      sub_view: string;
      origin: string;
      platform: string;
      folder_name: string;
    }>(this.util.getRawEvents, 5, 8944, this.validate);
  }

  get mySitesSiteListPageStartLoading() {
    return new EventsFilter<{
      referral_url: string;
      url: string;
      num_displayed_folders: number;
      sub_view: string;
      page_experience: string;
      origin: string;
      num_displayed_sites: number;
      view_level: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8945, this.validate);
  }

  get mySitesSiteListFolderNavigation() {
    return new EventsFilter<{
      prev_folder_id: string;
      referral_url: string;
      current_folder_name: string;
      url: string;
      num_displayed_folders: number;
      sub_view: string;
      origin: string;
      cta: string;
      num_displayed_sites: number;
      platform: string;
      prev_folder_name: string;
      current_folder_id: string;
    }>(this.util.getRawEvents, 5, 8946, this.validate);
  }

  get mySitesClickSiteItem() {
    return new EventsFilter<{
      view_mode: string;
      sections_list: string;
      site_class: string;
      site_owner_id: GUID;
      sub_view: string;
      origin: string;
      is_premium: boolean;
      platform: string;
      msid: GUID;
      is_published: boolean;
      action_description: string;
    }>(this.util.getRawEvents, 5, 8947, this.validate);
  }

  get mySitesClicksActionsInSidePanel() {
    return new EventsFilter<{
      site_class: string;
      site_owner_id: GUID;
      sub_view: string;
      origin: string;
      cta: string;
      view_level: string;
      is_premium: boolean;
      platform: string;
      msid: GUID;
      deep_link: Url;
      is_published: boolean;
    }>(this.util.getRawEvents, 5, 8948, this.validate);
  }

  get clickStartGuideOrCloseDoItWithMeTool() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      type: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8949, this.validate);
  }

  get wixInvoicesChargeWithCreditCardClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      status: string;
      origin_device: string;
      invoiceSource: GUID;
      type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
      fully_paid: boolean;
    }>(this.util.getRawEvents, 5, 8954, this.validate);
  }

  get wixInvoicesPaymentMethodClick() {
    return new EventsFilter<{
      view_type: string;
      appDefId: GUID;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
      fully_paid: boolean;
    }>(this.util.getRawEvents, 5, 8956, this.validate);
  }

  get wixInvoicesToastIsShown() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      type: string;
      platform: string;
      timeout: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8957, this.validate);
  }

  get wixInvoicesRequestPaymentClickInAutomation() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8958, this.validate);
  }

  get wixInvoicesChargeWithCreditCardClickInTheModalMoto() {
    return new EventsFilter<{
      view_type: string;
      is_new: boolean;
      origin: string;
      origin_device: string;
      invoiceSource: GUID;
      type: string;
      platform: string;
      msid: string;
      invoice_id: GUID;
      fully_paid: boolean;
    }>(this.util.getRawEvents, 5, 8959, this.validate);
  }

  get formBuilderSubmitButtonSettingsClickOnSetupPaymentForm() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      form_type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 896, this.validate);
  }

  get wixInvoicesMotoCashierWidgetIsShown() {
    return new EventsFilter<{
      totalAmountLong: number;
      name: string;
      is_deposit: boolean;
      view_type: string;
      is_new: boolean;
      origin: string;
      currency: string;
      paidAmountLong: number;
      type: string;
      platform: string;
      msid: GUID;
      invoice_id: GUID;
      fully_paid: boolean;
    }>(this.util.getRawEvents, 5, 8960, this.validate);
  }

  get wixInvoicesMotoPaidModal() {
    return new EventsFilter<{
      is_deposit: boolean;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: GUID;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 8961, this.validate);
  }

  get mySitesRefreshAfterMoveToFolder() {
    return new EventsFilter<{
      time_to_refresh: number;
      start_time: DateTime;
      end_time: DateTime;
      experiment_from_site_list: string;
      platform: string;
      msid: string;
      experiment_from_modal: string;
    }>(this.util.getRawEvents, 5, 8962, this.validate);
  }

  get wixInvoicesAutomationDynamicValueClick() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
      action: string;
    }>(this.util.getRawEvents, 5, 8963, this.validate);
  }

  get mySitesErrorPage() {
    return new EventsFilter<{
      experiment_from_site_list: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8964, this.validate);
  }

  get wixInvoicesClickingOnNextMobile() {
    return new EventsFilter<{
      view_type: string;
      status: string;
      invoiceSource: string;
      platform: string;
      msid: GUID;
      invoice_id: GUID;
    }>(this.util.getRawEvents, 5, 8965, this.validate);
  }

  get wixInvoicesBannerToUpgradeToPremiumShown() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8966, this.validate);
  }

  get wixInvoicesBannerToUpgradeToPremiumClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8967, this.validate);
  }

  get wixInvoicesOpenShareLinkModal() {
    return new EventsFilter<{
      externalId: GUID;
      view_type: string;
      invoiceId: GUID;
      origin: string;
      status: string;
      appdefid: GUID;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8968, this.validate);
  }

  get wixInvoicesBannerToConnectPaymentMethods() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8969, this.validate);
  }

  get wixInvoicesBannerToConnectPaymentMethodClick() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8970, this.validate);
  }

  get gizaFirstBiteIsShown() {
    return new EventsFilter<{
      hosting_platform: string;
      view_type: string;
      platform: string;
      time_to_first_byte: number;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 8971, this.validate);
  }

  get gizaFirstInteractionInTheSessionIsAvailable() {
    return new EventsFilter<{
      hosting_platform: string;
      interactive_component: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 8972, this.validate);
  }

  get wixInvoicesClickOnDynamicValueInAutomation() {
    return new EventsFilter<{
      view_type: string;
      origin: string;
      origin_device: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 8973, this.validate);
  }

  get priorityASuggestionCarouselInteraction() {
    return new EventsFilter<{
      totalPriortySeen: number;
      view_type: string;
      type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8974, this.validate);
  }

  get priorityAEssentialShown() {
    return new EventsFilter<{
      numOffer: number;
      view_type: string;
      isCarousel: boolean;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8975, this.validate);
  }

  get clickOnCreateNewFolder() {
    return new EventsFilter<{
      source: string;
      sub_view: string;
      origin: string;
      view_level: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8978, this.validate);
  }

  get createNewSiteCreationMenuIsShown() {
    return new EventsFilter<{
      origin: string;
      items_list: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 8989, this.validate);
  }

  get clickOnAddAtTheDynamicFieldModal() {
    return new EventsFilter<{
      format: string;
      actionKey: string;
      view_type: string;
      actionAppId: GUID;
      platform: string;
      msid: GUID;
      inputType: string;
      value: string;
    }>(this.util.getRawEvents, 5, 8993, this.validate);
  }

  get getBrandedAppAlertIsShownAutomationSendAPushNotification() {
    return new EventsFilter<{
      actionId: GUID;
      view_type: string;
      rule_id: GUID;
      triggerKey: string;
      actionAppId: GUID;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 8995, this.validate);
  }

  get quotesDeleteQuoteClick() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 90, this.validate);
  }

  get formBuildrUouSubmitFormClick() {
    return new EventsFilter<{
      form_name: string;
      appVersion: string;
      visitor_id: GUID;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      template: string;
      num_of_attachments: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 900, this.validate);
  }

  get sdkLoaded9000() {
    return new EventsFilter<{
      hosting_platform: string;
      sdk_version: string;
      app_id: string;
      component_id: string;
      hosting_platform_context_id: string;
    }>(this.util.getRawEvents, 5, 9000, this.validate);
  }

  get gizaPageStartLoading9001() {
    return new EventsFilter<{
      hosting_platform: string;
      referral_info: string;
      prev_page_id: string;
      screen_width: number;
      page_id: string;
      page_name: string;
      is_first: boolean;
      window_width: number;
      screen_height: number;
      app_id: string;
      route: string;
      window_height: number;
      visits_counter: number;
      is_internal_page: boolean;
      hosting_platform_context_id: string;
      internal_route: string;
      firstFromIframe: boolean;
      prevRoute: string;
      displayMode: string;
      prevDisplayMode: string;
      prevInternalRoute: string;
      prevIsInternalPage: boolean;
    }>(this.util.getRawEvents, 5, 9001, this.validate);
  }

  get gizaPageFinishLoading9002() {
    return new EventsFilter<{
      hosting_platform: string;
      referral_info: string;
      prev_page_id: string;
      screen_width: number;
      page_id: string;
      page_name: string;
      is_first: boolean;
      window_width: number;
      screen_height: number;
      app_id: string;
      route: string;
      is_first_9002: boolean;
      window_height: number;
      visits_counter: number;
      is_internal_page: boolean;
      hosting_platform_context_id: string;
      internal_route: string;
      loading_time_from_first_feedback: number;
      loading_time: number;
      firstFromIframe: boolean;
      prevRoute: string;
      displayMode: string;
      prevDisplayMode: string;
      prevInternalRoute: string;
      prevIsInternalPage: boolean;
    }>(this.util.getRawEvents, 5, 9002, this.validate);
  }

  get formBuildrUouSubmitFormSuccess() {
    return new EventsFilter<{
      isfp: boolean;
      form_name: string;
      appVersion: string;
      visitor_id: GUID;
      submissionId: GUID;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      template: string;
      num_of_attachments: number;
      btype: string;
      msid: GUID;
      isjp: boolean;
    }>(this.util.getRawEvents, 5, 901, this.validate);
  }

  get mySitesEditTemplateButtonClick() {
    return new EventsFilter<{
      origin: string;
      platform: string;
      template_id: string;
    }>(this.util.getRawEvents, 5, 9012, this.validate);
  }

  get mySitesClickOnSeeAllTemplates() {
    return new EventsFilter<{
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9013, this.validate);
  }

  get createNewWorkspace() {
    return new EventsFilter<{
      num_workspaces: number;
      page_view: string;
      view_type: string;
      account_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9014, this.validate);
  }

  get workspaceSelectorSelectWorkspace() {
    return new EventsFilter<{
      num_workspaces: number;
      page_view: string;
      clicked_workspace_index: number;
      view_type: string;
      account_type: string;
      clicked_workspace_id: GUID;
      clicked_workspace_role: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9015, this.validate);
  }

  get workspaceActionMenuDropDownListShown() {
    return new EventsFilter<{
      num_workspaces: number;
      page_view: string;
      view_type: string;
      account_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9016, this.validate);
  }

  get workspaceActionMenuItemClick() {
    return new EventsFilter<{
      location: string;
      num_workspaces: number;
      page_view: string;
      view_type: string;
      account_type: string;
      link: Url;
      platform: string;
    }>(this.util.getRawEvents, 5, 9017, this.validate);
  }

  get workspaceSelectorClickOnLearnMoreInTooltips() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9018, this.validate);
  }

  get workspaceSelectorWorkspaceSettingClick() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      origin: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9019, this.validate);
  }

  get formBuildrUouSubmitFormError() {
    return new EventsFilter<{
      form_name: string;
      appVersion: string;
      visitor_id: GUID;
      reason: string;
      reason_body: string;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      template: string;
      num_of_attachments: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 902, this.validate);
  }

  get accountSettingsCloseYourWorkspacePageLoad() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 9021, this.validate);
  }

  get accountSettingsCloseYourWorkspaceCloseWorkspaceRequestSummited() {
    return new EventsFilter<{
      view_type: string;
      reason: string;
      platform: string;
      free_text: string;
    }>(this.util.getRawEvents, 5, 9022, this.validate);
  }

  get workspaceSettingsDeleteAccountWorkspace() {
    return new EventsFilter<{
      context: string;
      view_type: string;
      platform: string;
      workspace_id: GUID;
    }>(this.util.getRawEvents, 5, 9023, this.validate);
  }

  get workspaceSettingsChangesSaved() {
    return new EventsFilter<{
      view_type: string;
      changes: string;
      platform: string;
      workspace_id: GUID;
    }>(this.util.getRawEvents, 5, 9024, this.validate);
  }

  get wixInvoicesBannerWhenCreatingInvoiceOrder() {
    return new EventsFilter<{
      name: string;
      view_type: string;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 9025, this.validate);
  }

  get allPageLoadersAreDown9029() {
    return new EventsFilter<{
      hosting_platform: string;
      referral_info: string;
      prev_page_id: string;
      screen_width: number;
      page_id: string;
      page_name: string;
      is_first: boolean;
      window_width: number;
      screen_height: number;
      app_id: string;
      route: string;
      window_height: number;
      visits_counter: number;
      is_internal_page: boolean;
      hosting_platform_context_id: string;
      internal_route: string;
      loading_time: number;
      firstFromIframe: boolean;
      prevRoute: string;
      displayMode: string;
      prevDisplayMode: string;
      prevInternalRoute: string;
      prevIsInternalPage: boolean;
    }>(this.util.getRawEvents, 5, 9029, this.validate);
  }

  get formBuilderManageFieldsAddNewFieldCompleted() {
    return new EventsFilter<{
      plugin: string;
      builderOrigin: string;
      field_type: string;
      appVersion: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      field_group: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 903, this.validate);
  }

  get invoicesSettingsSelectPaymentsReceivedOption() {
    return new EventsFilter<{
      view_type: string;
      showTransactionDetails: boolean;
      platform: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 9032, this.validate);
  }

  get mySitesDebuggingEvent() {
    return new EventsFilter<{
      trigger_point: string;
      referral_info: string;
      experiment_status: boolean;
      platform: string;
      page_url: string;
    }>(this.util.getRawEvents, 5, 9034, this.validate);
  }

  get searchInSitesDropdown() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      search_term: string;
      num_sites: number;
      platform: string;
      msid: GUID;
      num_results: number;
    }>(this.util.getRawEvents, 5, 9039, this.validate);
  }

  get formBuildrUouSubmitFormSuccessSendingDataToFormBuilderServer() {
    return new EventsFilter<{
      form_name: string;
      visitor_id: GUID;
      form_url: string;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      template: string;
      num_of_attachments: number;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 904, this.validate);
  }

  get searchInSitesDropdownEndProcess() {
    return new EventsFilter<{
      page_view: string;
      view_type: string;
      search_term: string;
      end_type: string;
      num_sites: number;
      platform: string;
      msid: GUID;
      num_results: number;
    }>(this.util.getRawEvents, 5, 9040, this.validate);
  }

  get devModeOnEntryPoint() {
    return new EventsFilter<{
      entryPoint: string;
      view_type: string;
      status: boolean;
      platform: string;
      action: string;
    }>(this.util.getRawEvents, 5, 9041, this.validate);
  }

  get gizaClickOnCollapseExpandSidebar() {
    return new EventsFilter<{
      click_type: string;
      page_id: string;
      page_name: string;
      sidebar_state: string;
      items_list: string;
      app_id: string;
      hosting_platform_context_id: string;
      hosting: string;
      msid: GUID;
      TriggeredBy: string;
    }>(this.util.getRawEvents, 5, 9042, this.validate);
  }

  get formBuilderDesignPanel() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      panel_name: string;
      form_comp_id: string;
      vsi: GUID;
      control_name: string;
      esi: GUID;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 906, this.validate);
  }

  get formBuildrComponentLoadTime() {
    return new EventsFilter<{
      appVersion: string;
      visitor_id: GUID;
      panel_name: string;
      form_comp_id: string;
      vsi: GUID;
      loadingTime: number;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 907, this.validate);
  }

  get formBuilderDeleteForm() {
    return new EventsFilter<{
      builderOrigin: string;
      appVersion: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 908, this.validate);
  }

  get formBuilderFormCopyAttempt() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 909, this.validate);
  }

  get quotesDeleteQuotePageOk() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 91, this.validate);
  }

  get formBuilderTemplatePickerOpened() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 910, this.validate);
  }

  get dummyNameSrc5Evid9100() {
    return new EventsFilter<{}>(this.util.getRawEvents, 5, 9100, this.validate);
  }

  get formBuilderTemplatePickerClickOnTemplate() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 911, this.validate);
  }

  get formBuilderTemplatePickerChooseTemplate() {
    return new EventsFilter<{
      builderOrigin: string;
      appVersion: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      source_name: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 912, this.validate);
  }

  get formBuilderManageFieldsPanelOpened() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 913, this.validate);
  }

  get formBuilderManageFieldsDeleteField() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 914, this.validate);
  }

  get formBuilderManageFieldsAddNewFieldDropDownOpened() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 915, this.validate);
  }

  get formBuilderManageFieldsAddNewField() {
    return new EventsFilter<{
      plugin: string;
      builderOrigin: string;
      field_type: string;
      appVersion: string;
      visitor_id: GUID;
      tabName: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      field_group: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 916, this.validate);
  }

  get formBuilderEditFieldPanelOpened() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 917, this.validate);
  }

  get formBuilderEditFieldUpdateValue() {
    return new EventsFilter<{
      plugin: string;
      name: string;
      toggle_state: boolean;
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 918, this.validate);
  }

  get formBuilderEditFieldUpdateMandatoryValue() {
    return new EventsFilter<{
      plugin: string;
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      is_required: boolean;
      vsi: GUID;
      origin: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 919, this.validate);
  }

  get quotesDeleteQuotePageCancel() {
    return new EventsFilter<{
      view_type: string;
      origin_device: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 92, this.validate);
  }

  get formBuilderEditFieldConnectFieldDropDownOpened() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      num_of_fields: number;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 920, this.validate);
  }

  get appInstallationInitiate() {
    return new EventsFilter<{
      appVersion: string;
      tenantType: string;
      appdefid: string;
      tenantId: string;
      installation_id: string;
    }>(this.util.getRawEvents, 5, 9201, this.validate);
  }

  get appInstallationCompleted() {
    return new EventsFilter<{
      installationDate: DateTime;
      appInstanceId: GUID;
      newStatus: string;
      appVersion: string;
      tenantType: string;
      appdefid: string;
      isEnabled: boolean;
      tenantId: string;
      installation_id: string;
    }>(this.util.getRawEvents, 5, 9202, this.validate);
  }

  get appsBulkInstallationInitiate() {
    return new EventsFilter<{
      appInstances: string;
      tenantType: string;
      tenantId: string;
      installation_id: string;
    }>(this.util.getRawEvents, 5, 9203, this.validate);
  }

  get appsBulkInstallationsCompleted() {
    return new EventsFilter<{
      appInstances: string;
      tenantType: string;
      tenantId: string;
      installation_id: string;
    }>(this.util.getRawEvents, 5, 9204, this.validate);
  }

  get formBuilderEditFieldConnectField() {
    return new EventsFilter<{
      plugin: string;
      builderOrigin: string;
      connected_field: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 921, this.validate);
  }

  get formBuilderFormSettingsPanelOpened() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 922, this.validate);
  }

  get formBuilderFormSettingsUpdateValue() {
    return new EventsFilter<{
      name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
      action_type: string;
    }>(this.util.getRawEvents, 5, 923, this.validate);
  }

  get formBuilderFormLayoutOpenAndChange() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      layout: string;
      msid: GUID;
      action: string;
    }>(this.util.getRawEvents, 5, 924, this.validate);
  }

  get formBuilderFormSettingsChangeDuration() {
    return new EventsFilter<{
      duration: number;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 925, this.validate);
  }

  get formBuilderFormSettingsMsgLink() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      origin: string;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 926, this.validate);
  }

  get formBuilderFormSettingsLinkSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      sub_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      type: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 927, this.validate);
  }

  get formBuilderFormSettingsCreateSubmissionsTableRequest() {
    return new EventsFilter<{
      builderOrigin: string;
      appVersion: string;
      request_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 928, this.validate);
  }

  get formBuilderFormSettingsCreateSubmissionsTableSuccess() {
    return new EventsFilter<{
      builderOrigin: string;
      appVersion: string;
      request_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 929, this.validate);
  }

  get quotesMarkAsAccepted() {
    return new EventsFilter<{
      instanceId: GUID;
      totalAmountLong: number;
      createOrder: boolean;
      uuid: GUID;
      paymentType: string;
      view_type: string;
      invoiceId: GUID;
      origin: string;
      currency: string;
      platform: string;
      msid: string;
    }>(this.util.getRawEvents, 5, 93, this.validate);
  }

  get formBuilderBizMgrAddNewFormClick() {
    return new EventsFilter<{
      visitor_id: GUID;
      vsi: GUID;
      place: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 930, this.validate);
  }

  get formBuilderBizMgrViewFormSubmissionsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      place: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 931, this.validate);
  }

  get formBuilderManageFieldsDuplicateField() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      field_group: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 932, this.validate);
  }

  get formBuilderRemoveSubmitButton() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 933, this.validate);
  }

  get formBuilderPremiumPanelOpened() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      current_ascend_plan: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 934, this.validate);
  }

  get formBuilderPremiumPanelClick() {
    return new EventsFilter<{
      visitor_id: GUID;
      current_ascend_plan: string;
      vsi: GUID;
      selection: string;
      origin: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 935, this.validate);
  }

  get formBuilderUserSaveAnEditorTemplateWithForm() {
    return new EventsFilter<{
      visitor_id: GUID;
      templateId: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 936, this.validate);
  }

  get formBuilderFormCopyAttemptFailed() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      failReason: string;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 937, this.validate);
  }

  get formBuilderSubmitButtonUploadFileClick() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 938, this.validate);
  }

  get formBuilderPresetGlobalDesignFailed() {
    return new EventsFilter<{
      name: string;
      visitor_id: GUID;
      reason: string;
      form_comp_id: string;
      vsi: GUID;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 939, this.validate);
  }

  get quotesCreateInvoiceFromQuotes() {
    return new EventsFilter<{
      instanceId: GUID;
      totalAmountLong: number;
      createOrder: boolean;
      uuid: GUID;
      depositType: string;
      paymentType: string;
      view_type: string;
      invoiceId: GUID;
      origin: string;
      invoiceTitle: string;
      invoiceSource: string;
      currency: string;
      platform: string;
      msid: string;
      discountPercentage: number;
    }>(this.util.getRawEvents, 5, 94, this.validate);
  }

  get formBuilderManageFieldsClickOnFieldButtonLearnAllAboutThis() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      tabName: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      field_group: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 940, this.validate);
  }

  get biProfileDataForSiteDetailsActionsWidget() {
    return new EventsFilter<{
      installedApps: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 9400, this.validate);
  }

  get formBuilderAdiEditFormClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 941, this.validate);
  }

  get formBuilderAdiEditFormCompleted() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      esi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 942, this.validate);
  }

  get formBuilderAdiReorderFieldClick() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      esi: GUID;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 943, this.validate);
  }

  get formBuilderAdiReorderFieldComplete() {
    return new EventsFilter<{
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      esi: GUID;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 944, this.validate);
  }

  get formBuilderClickOnGfppOfConnectPanel() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      button_name: string;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      field_group: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 945, this.validate);
  }

  get formBuilderFormLayoutSpaceBetweenRows() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 946, this.validate);
  }

  get formBuilderFormLayoutSpaceBetweenColumns() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 947, this.validate);
  }

  get formBuilderFormLayoutTextAlignment() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 948, this.validate);
  }

  get formBuilderFormLayoutTitleAndPlaceholderPadding() {
    return new EventsFilter<{
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 949, this.validate);
  }

  get quotesMarkAsAcceptedSrc5Evid95() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 95, this.validate);
  }

  get formBuilderFormLayoutSpaceBetweenFieldTitleAndInput() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 950, this.validate);
  }

  get formBuilderFormLayoutFieldTitlePadding() {
    return new EventsFilter<{
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      value: string;
    }>(this.util.getRawEvents, 5, 951, this.validate);
  }

  get formBuilderGlobalLayoutShowFieldTitleToggle() {
    return new EventsFilter<{
      toggle_state: boolean;
      builderOrigin: string;
      field_type: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 952, this.validate);
  }

  get formBuilderFormSettingsInnerTabsClick() {
    return new EventsFilter<{
      source: string;
      builderOrigin: string;
      tab_name: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 953, this.validate);
  }

  get formBuilderFormSettingsSettingsTabsClick() {
    return new EventsFilter<{
      name: string;
      source: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 954, this.validate);
  }

  get formBuilderFormSettingsGoToAutomationsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      application_name: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 955, this.validate);
  }

  get formBuilderFormSettingsContactListClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      referral: string;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 956, this.validate);
  }

  get formBuilderFormSettingsSupportAboutWixFormsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 957, this.validate);
  }

  get formBuilderFormSettingsSupportWixSupportClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 958, this.validate);
  }

  get formBuilderFormSettingsSupportSendYourFeedbackClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 959, this.validate);
  }

  get quotesCreateInvoiceFromQuotesSrc5Evid96() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
      msid: string;
      quoteId: GUID;
    }>(this.util.getRawEvents, 5, 96, this.validate);
  }

  get formBuilderFormSettingsSupportAddAReviewClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 960, this.validate);
  }

  get formBuilderFormSettingsCreateAutomation() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      automation_type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 961, this.validate);
  }

  get formBuilderFormSettingsInformationIconHoverClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      information_icon: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 962, this.validate);
  }

  get formBuilderFormSettingsPublishYourSitePopupPresented() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 963, this.validate);
  }

  get formBuilderFormSettingsPublishYourSitePopupSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 964, this.validate);
  }

  get formBuilderFormSettingsSubmitMessageChooseLinkClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      link_type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 965, this.validate);
  }

  get formBuilderFormSettingsSubmitMessageRestoreSuccessMessage() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
      field_name: string;
    }>(this.util.getRawEvents, 5, 966, this.validate);
  }

  get formBuilderFormSettingsSubmitMessageRestoreSubmitButton() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 967, this.validate);
  }

  get formBuilderPaymentFormSettingGetStarted() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 968, this.validate);
  }

  get formBuilderPaymentFormSettingLearnMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 969, this.validate);
  }

  get removePhoneNumberRemoveClicked() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 97, this.validate);
  }

  get formBuilderPaymentFormSetupIsDisplayed() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 970, this.validate);
  }

  get unsubscriptionPageIsShown() {
    return new EventsFilter<{
      channel: string;
      hashed_phone: string;
      hashed_email: string;
      app_id: string;
      flow_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 9700, this.validate);
  }

  get unsubscriptionPageClickOnUnsubscribeButton() {
    return new EventsFilter<{
      channel: string;
      hashed_phone: string;
      hashed_email: string;
      app_id: GUID;
      flow_id: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 9701, this.validate);
  }

  get formBuilderPaymentFormSetupGetStartedClickOnDemoSite() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 971, this.validate);
  }

  get formBuilderPaymentFormSetupAddUpdateItem() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      itemPrice: number;
      form_comp_id: string;
      vsi: GUID;
      itemName: string;
      type: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 972, this.validate);
  }

  get formBuilderPaymentFormSetupItemPriceChangeCurrency() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 973, this.validate);
  }

  get formBuilderPaymentFormSetupConnectPaymentMethod() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 974, this.validate);
  }

  get formBuilderPaymentFormSetupContinueToSetupFromBizmg() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 975, this.validate);
  }

  get formBuilderPaymentFormSetupChangePaymentMethod() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 976, this.validate);
  }

  get formBuilderPaymentFormSaveAndRefreshPopUpDisplayed() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 977, this.validate);
  }

  get formBuilderPaymentFormSaveAndRefreshPopUpUserSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 978, this.validate);
  }

  get formBuilderPaymentFormViewPublishSitePopUpDisplayed() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      viewerName: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 979, this.validate);
  }

  get removePhoneNumberRemoveNumberClicked() {
    return new EventsFilter<{
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 98, this.validate);
  }

  get formBuilderPaymentFormViewPublishSitePopUpUserSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      viewerName: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 980, this.validate);
  }

  get formBuilderPaymentFormRemovePaymentPopUpDisplayed() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 981, this.validate);
  }

  get formBuilderPaymentFormRemovePaymentPopUpUserSelection() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 982, this.validate);
  }

  get formBuilderPaymentFormOpenChangeRemoveDisconnectPayment() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 983, this.validate);
  }

  get formBuilderPaymentFormClickOnNextInPaymentFormSetup() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      direction: string;
      form_comp_id: string;
      vsi: GUID;
      move_to_step: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 984, this.validate);
  }

  get formBuilderPaymentFormTooltipHover() {
    return new EventsFilter<{
      tooltip_name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 985, this.validate);
  }

  get formBuilderSubmissionSettingsPanelOpened() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 986, this.validate);
  }

  get formBuilderCategoryPickerInAddPanel() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      vsi: GUID;
      category: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 987, this.validate);
  }

  get formBuilderPaymentFormClickOnGoToSetup() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      category: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 988, this.validate);
  }

  get formBuilderTemplatePickerChooseTemplateStartToInstall() {
    return new EventsFilter<{
      builderOrigin: string;
      appVersion: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      source_name: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 989, this.validate);
  }

  get removePhoneNumberPhoneRemovalAsked() {
    return new EventsFilter<{
      hashed_phone: string;
      view_type: string;
      platform: string;
    }>(this.util.getRawEvents, 5, 99, this.validate);
  }

  get formBuilderFormSettingsNotificationsHelpClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 990, this.validate);
  }

  get formBuilderFormSettingsUpdateValueClick() {
    return new EventsFilter<{
      name: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      selection: string;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 991, this.validate);
  }

  get formBuilderFormSettingsContactListContactLabelsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 992, this.validate);
  }

  get formBuilderFormSettingsContactListContactLabelsUpdateValue() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 993, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsClick() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 994, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsUpdateValue() {
    return new EventsFilter<{
      field: string;
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      origin: string;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 995, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsSave() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 996, this.validate);
  }

  get formBuilderHoverOnUpgradeAscend() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      button_name: string;
      tabName: string;
      current_ascend_plan: string;
      vsi: GUID;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 997, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsCancel() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 998, this.validate);
  }

  get formBuilderFormSettingsContactListChooseSavedFieldsLearnMore() {
    return new EventsFilter<{
      builderOrigin: string;
      visitor_id: GUID;
      form_comp_id: string;
      vsi: GUID;
      template: string;
      msid: GUID;
    }>(this.util.getRawEvents, 5, 999, this.validate);
  }

  get devCenterWebhookSubscribed() {
    return new EventsFilter<{
      webhookSlug: string;
      appId: GUID;
    }>(this.util.getRawEvents, 96, 1030, this.validate);
  }

  get dcWebhookUpdated() {
    return new EventsFilter<{
      webhookSlug: string;
      action_name: string;
      appId: GUID;
    }>(this.util.getRawEvents, 96, 1031, this.validate);
  }

  get devCenterComponentTranslationAddingTranslatableComponent() {
    return new EventsFilter<{
      num_potential_keys_before: number;
      num_potential_keys_after: number;
      num_of_translated_keys_before: number;
      num_of_translated_keys_after: number;
      component_version: number;
      app_id: string;
      component_id: string;
      component_type: string;
    }>(this.util.getRawEvents, 96, 11401, this.validate);
  }

  get devCenterComponentTranslationAddLanguageToAnApp() {
    return new EventsFilter<{
      components_types: string;
      language: string;
      components_id: string;
      app_id: string;
      num_components: number;
    }>(this.util.getRawEvents, 96, 11402, this.validate);
  }

  get devCenterComponentTranslationAddTranslationToAComponent() {
    return new EventsFilter<{
      num_translated_keys_after: number;
      num_potential_keys: number;
      language: string;
      component_version: number;
      num_translations_added: number;
      app_id: string;
      component_id: string;
      num_translated_keys_before: number;
    }>(this.util.getRawEvents, 96, 11403, this.validate);
  }

  get dummyName() {
    return new EventsFilter<{}>(this.util.getRawEvents, 96, 11700, this.validate);
  }

  get dcAppVersionsVersionAdded() {
    return new EventsFilter<{
      num_permission: number;
      permission_data: string;
      components_data: string;
      version: string;
      is_private_app: boolean;
      num_dependencies: number;
      app_id: string;
      dependencies_data: string;
      num_components: number;
    }>(this.util.getRawEvents, 96, 11701, this.validate);
  }

  get dcAppVersionsStatusUpdated() {
    return new EventsFilter<{
      previous_version: string;
      version_new_status: string;
      version: string;
      version_prev_status: string;
      app_id: string;
    }>(this.util.getRawEvents, 96, 11702, this.validate);
  }

  get dummyNameSrc96Evid11900() {
    return new EventsFilter<{}>(this.util.getRawEvents, 96, 11900, this.validate);
  }

  get dummyNameSrc96Evid12200() {
    return new EventsFilter<{}>(this.util.getRawEvents, 96, 12200, this.validate);
  }
}

export const interceptor = (logDir?: string) =>
  new WixBiSchemaNodeTestkit(logDir);
export { EventsFilter, validateSingleEvent };
