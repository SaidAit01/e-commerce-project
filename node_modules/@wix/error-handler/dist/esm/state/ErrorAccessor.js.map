{"version":3,"names":["isHttpError","responseDataHasDetails","responseDataHasMessage","isSdkError","sdkErrorToMinimalHttpError","responseToMinimalHttpError","ErrorAccessor","constructor","params","_defineProperty","inputError","error","_error","Response","Error","exceptionMessage","_this$error","message","httpError","_httpError","errorHandlerState","_errorHandlerState","clientCode","_this$httpError","code","errorResponse","_this$httpError2","response","statusCode","_this$errorResponse","status","errorData","_this$errorResponse2","data","errorDetails","_errorDetails","details","errorMessage","undefined","applicationError","_this$errorDetails","validationError","_this$errorDetails2"],"sources":["../../../src/state/ErrorAccessor.ts"],"sourcesContent":["import {\n  ErrorDetails,\n  ErrorHandlerError,\n  MinimalHttpError,\n  ErrorHandlerState,\n} from '@wix/error-handler-core/types';\nimport {\n  isHttpError,\n  responseDataHasDetails,\n  responseDataHasMessage,\n} from '../util/httpErrorDecoders';\nimport {\n  isSdkError,\n  sdkErrorToMinimalHttpError,\n} from '../util/sdkErrorDecoders';\nimport { responseToMinimalHttpError } from '../util/responseErrorDecoders';\n\nexport interface ErrorAccessorParams {\n  readonly error: unknown;\n}\n\nexport class ErrorAccessor {\n  readonly inputError: unknown;\n\n  _error?: Error | null;\n  _httpError?: MinimalHttpError | null;\n  _errorDetails?: ErrorDetails | null;\n\n  constructor(params: ErrorAccessorParams) {\n    this.inputError = params.error;\n  }\n\n  get error(): (Error & ErrorHandlerError) | null {\n    const { inputError } = this;\n\n    return (this._error ??=\n      typeof Response !== 'undefined' && inputError instanceof Response\n        ? (inputError as Response & Error & ErrorHandlerError)\n        : inputError instanceof Error\n        ? (inputError as Error & ErrorHandlerError)\n        : null);\n  }\n\n  /**\n   * The message of the JS error, for example: `Network Error`\n   */\n  get exceptionMessage() {\n    return this.error?.message;\n  }\n\n  /**\n   * Error object from the http client, including the http response\n   */\n  get httpError(): MinimalHttpError | null {\n    const { inputError } = this;\n    return (this._httpError ??= isHttpError(inputError)\n      ? inputError\n      : typeof Response !== 'undefined' && inputError instanceof Response\n      ? responseToMinimalHttpError(inputError)\n      : isSdkError(inputError)\n      ? sdkErrorToMinimalHttpError(inputError)\n      : null);\n  }\n\n  get errorHandlerState(): ErrorHandlerState | null {\n    const { error } = this;\n\n    if (!error) {\n      return null;\n    }\n\n    return (error._errorHandlerState ??= {});\n  }\n\n  /**\n   * errno symbolic name** like `ENETUNREACH`, Not http status code\n   * This code is how the browser represents the error\n   */\n  get clientCode() {\n    return this.httpError?.code;\n  }\n\n  /**\n   * The http response of the error\n   */\n  get errorResponse() {\n    return this.httpError?.response;\n  }\n\n  /**\n   * The http status code of the http response, numeric value (e.g. 404)\n   */\n  get statusCode() {\n    return this.errorResponse?.status;\n  }\n\n  /**\n   * The data (JSON) of the http response\n   */\n  get errorData() {\n    return this.errorResponse?.data;\n  }\n\n  /**\n   * The details of the error, if available\n   */\n  get errorDetails() {\n    const { errorData } = this;\n    return (this._errorDetails ??= responseDataHasDetails(errorData)\n      ? errorData.details\n      : null);\n  }\n\n  get errorMessage() {\n    const { errorData } = this;\n    return responseDataHasMessage(errorData) ? errorData.message : undefined;\n  }\n\n  get applicationError() {\n    return this.errorDetails?.applicationError;\n  }\n\n  get validationError() {\n    return this.errorDetails?.validationError;\n  }\n}\n"],"mappings":"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","ignoreList":[]}