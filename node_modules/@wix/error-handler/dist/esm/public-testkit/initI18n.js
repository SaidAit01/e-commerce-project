import i18n from 'i18next';
import ICU from 'i18next-icu';
export const initI18n = _ref => {
  let {
    locale,
    asyncMessagesLoader
  } = _ref;
  const i18nInstance = i18n.createInstance({
    lng: locale || 'en',
    fallbackLng: 'en',
    keySeparator: false
  }).use(ICU);
  if (asyncMessagesLoader) {
    i18nInstance.use(customBackend({
      asyncMessagesLoader
    }));
  }
  return i18nInstance;
};
function customBackend(_ref2) {
  let {
    asyncMessagesLoader
  } = _ref2;
  return {
    type: 'backend',
    init: () => {},
    read: async (language, _namespace, callback) => {
      try {
        const translation = await asyncMessagesLoader(language);
        return callback(null, translation);
      } catch (err) {
        return callback(err, null);
      }
    }
  };
}
//# sourceMappingURL=initI18n.js.map