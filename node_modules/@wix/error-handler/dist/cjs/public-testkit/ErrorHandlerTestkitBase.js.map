{"version":3,"names":["_events","require","_resolveFromMapping2","_TranslationsState","_CommonErrorsMapState","_ErrorAccessor","_statusCodeTextToNumeric","_fallbackMessage","isInteger","value","Number","ErrorHandlerTestkitBase","constructor","params","_defineProperty2","default","EventEmitter","props","events","on","status","_resolveFromMapping","commonErrorsMap","getInitPromise","commonErrors","undefined","httpError","Object","assign","Error","name","message","response","statusCodeTextToNumeric","statusText","data","headers","config","toJSON","__CANCEL__","resolveFromMapping","errorCodesMap","errorAccessor","ErrorAccessor","error","translations","TranslationsState","createI18n","CommonErrorsMapState","errorMonitor","captureException","showErrorMock","calls","listeners","map","cb","latest","_listeners","length","call","getClientErrorMessages","t","getTranslateFn","networkError","timeoutExceeded","requestAborted","otherNetworkError","noConnection","fallbackMessage","fallbackMessageEn","exports"],"sources":["../../../src/public-testkit/ErrorHandlerTestkitBase.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport {\n  CreateI18n,\n  PlatformShowError,\n  PlatformShowErrorProps,\n  StatusCode,\n  StatusCodeNumeric,\n} from '@wix/error-handler-core/types';\nimport { TypedEmitter } from '../util/typedEmitter';\nimport { FunctionMock } from '../util/FunctionMock';\nimport { ErrorHandlerTestkitPublicAPI } from './ErrorHandlerTestkitPublicAPI';\nimport { resolveFromMapping } from '../util/resolveFromMapping';\nimport { TranslationsState } from '../state/TranslationsState';\nimport { CommonErrorsMapState } from '../state/CommonErrorsMapState';\nimport { ErrorAccessor } from '../state/ErrorAccessor';\nimport { statusCodeTextToNumeric } from '../util/statusCodeTextToNumeric';\nimport { fallbackMessage } from '../fallbackMessage';\n\nexport interface ErrorHandlerTestkitParams {\n  language: string;\n  createI18n: CreateI18n;\n}\n\nfunction isInteger(value: unknown): value is number {\n  return Number.isInteger(value);\n}\n\nexport class ErrorHandlerTestkitBase implements ErrorHandlerTestkitPublicAPI {\n  readonly events = new EventEmitter() as TypedEmitter<{\n    showError: () => PlatformShowErrorProps;\n  }>;\n\n  readonly translations;\n  readonly commonErrorsMap;\n\n  constructor(params: ErrorHandlerTestkitParams) {\n    this.translations = new TranslationsState({\n      createI18n: params.createI18n,\n    });\n\n    this.commonErrorsMap = new CommonErrorsMapState({\n      translations: this.translations,\n      errorMonitor: {\n        captureException: () => {},\n      },\n    });\n  }\n\n  showError: PlatformShowError = (props) => {\n    const { events } = this;\n    events.on('showError', () => props);\n  };\n\n  get showErrorMock(): FunctionMock<PlatformShowErrorProps> {\n    const { events } = this;\n    return {\n      get calls() {\n        return events.listeners('showError').map((cb) => cb());\n      },\n      get latest() {\n        const listeners = events.listeners('showError');\n        return listeners[listeners.length - 1]?.();\n      },\n    };\n  }\n\n  getCommonErrorMessageByStatus = async (\n    status: StatusCode | StatusCodeNumeric,\n  ): Promise<string | undefined> => {\n    const { commonErrorsMap } = this;\n    await commonErrorsMap.getInitPromise();\n\n    if (!commonErrorsMap.commonErrors) {\n      return undefined;\n    }\n\n    const httpError = Object.assign(new Error(), {\n      name: '',\n      message: '',\n      response: {\n        status: isInteger(status)\n          ? status\n          : statusCodeTextToNumeric[status] ?? 0,\n        statusText: '',\n        data: {},\n        headers: {},\n        config: {},\n      },\n      config: {},\n      toJSON: () => ({}),\n      __CANCEL__: false,\n    });\n\n    return resolveFromMapping({\n      errorCodesMap: commonErrorsMap.commonErrors.commonErrorsMap,\n      errorAccessor: new ErrorAccessor({ error: httpError }),\n    })?.message;\n  };\n\n  async getClientErrorMessages() {\n    const { translations } = this;\n    const t = await translations.getTranslateFn();\n    return {\n      networkError: t('errorHandler.common-error.networkError'),\n      timeoutExceeded: t('errorHandler.common-error.technicalIssue.generic'),\n      requestAborted: t('errorHandler.common-error.technicalIssue.generic'),\n      otherNetworkError: t(\n        'errorHandler.common-error.technicalIssue-unmappedError',\n      ),\n      noConnection: t('errorHandler.common-error.noConnection'),\n      fallbackMessage: t('errorHandler.common-error.technicalIssue'),\n      fallbackMessageEn: fallbackMessage,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}