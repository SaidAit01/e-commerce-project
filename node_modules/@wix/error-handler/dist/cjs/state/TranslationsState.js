"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.TranslationsState = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncMessagesLoader = require("./asyncMessagesLoader");
class TranslationsState {
  constructor(_params) {
    (0, _defineProperty2.default)(this, "i18n", void 0);
    (0, _defineProperty2.default)(this, "_initPromise", void 0);
    (0, _defineProperty2.default)(this, "_ready", void 0);
    (0, _defineProperty2.default)(this, "translate", (key, params) => this.i18n.t(key, params));
    (0, _defineProperty2.default)(this, "getTranslateFn", async () => {
      await this.getInitPromise();
      return this.translate;
    });
    this.i18n = _params.createI18n({
      asyncMessagesLoader: _asyncMessagesLoader.asyncMessagesLoader,
      disableAutoInit: true
    });
    this._initPromise = new Promise(async resolve => {
      var _this$i18n$on, _this$i18n2;
      let failedLoading = false;
      const onFailedLoading = (lng, _ns, err) => {
        var _this$i18n$off, _this$i18n;
        // reject only when fallback lang (en) fails to load
        if (lng !== 'en') {
          return;
        }
        (_this$i18n$off = (_this$i18n = this.i18n).off) == null || _this$i18n$off.call(_this$i18n, 'failedLoading', onFailedLoading);
        failedLoading = true;
        resolve(err);
      };
      (_this$i18n$on = (_this$i18n2 = this.i18n).on) == null || _this$i18n$on.call(_this$i18n2, 'failedLoading', onFailedLoading);
      try {
        await this.i18n.init();
        if (failedLoading) {
          return;
        }
        resolve(null);
        this._ready = true;
      } catch (e) {
        resolve(e);
      }
    });
  }
  async getInitPromise() {
    const error = await this._initPromise;
    if (error) {
      throw error;
    }
  }
}
exports.TranslationsState = TranslationsState;
//# sourceMappingURL=TranslationsState.js.map