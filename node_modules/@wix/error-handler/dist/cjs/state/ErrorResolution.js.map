{"version":3,"names":["_resolveFromMapping","require","ErrorResolution","constructor","params","_defineProperty2","default","commonErrorsMapState","errorAccessor","errorCodesMap","onlineManager","commonErrors","_resolveNetworkError","onLine","getNetworkErrorShowErrorProps","connectionErrorShowErrorProps","_resolveCommonError","error","httpError","validationError","_commonErrors$commonE","commonErrorsMap","statusCodeError","INVALID_ARGUMENT","resolvedError","resolveFromMapping","serverError","defaultErrorShowErrorProps","_resolveConsumerError","resolve","consumerResolvedError","commonResolvedError","errorToShow","exports"],"sources":["../../../src/state/ErrorResolution.ts"],"sourcesContent":["import { ErrorAccessor } from './ErrorAccessor';\nimport { resolveFromMapping } from '../util/resolveFromMapping';\nimport {\n  OnlineManager,\n  ErrorCodesMap,\n  ShowErrorProps,\n} from '@wix/error-handler-core/types';\nimport { CommonErrorsMapState } from './CommonErrorsMapState';\n\nexport interface ErrorResolutionParams {\n  readonly errorAccessor: ErrorAccessor;\n  readonly errorCodesMap: ErrorCodesMap | null | undefined;\n  readonly commonErrorsMapState: CommonErrorsMapState;\n  readonly onlineManager: OnlineManager;\n}\n\nexport class ErrorResolution {\n  readonly errorAccessor;\n  readonly errorCodesMap;\n  readonly commonErrorsMapState;\n  readonly onlineManager;\n\n  consumerResolvedError?: ShowErrorProps | null;\n  commonResolvedError?: ShowErrorProps | null;\n\n  constructor(params: ErrorResolutionParams) {\n    this.commonErrorsMapState = params.commonErrorsMapState;\n    this.errorAccessor = params.errorAccessor;\n    this.errorCodesMap = params.errorCodesMap;\n    this.onlineManager = params.onlineManager;\n  }\n\n  get commonErrors() {\n    return this.commonErrorsMapState.commonErrors;\n  }\n\n  _resolveNetworkError() {\n    const { onlineManager, commonErrors, errorAccessor } = this;\n\n    if (!commonErrors) {\n      return null;\n    }\n\n    if (onlineManager.onLine) {\n      return commonErrors.getNetworkErrorShowErrorProps(errorAccessor);\n    }\n\n    return commonErrors.connectionErrorShowErrorProps;\n  }\n\n  _resolveCommonError() {\n    const { errorAccessor, commonErrors, errorCodesMap } = this;\n\n    const { error, httpError, validationError } = errorAccessor;\n\n    if (httpError == null) {\n      return this._resolveNetworkError();\n    }\n\n    if (!commonErrors) {\n      return null;\n    }\n\n    if (validationError) {\n      return commonErrors.commonErrorsMap.statusCodeError?.INVALID_ARGUMENT?.(\n        error,\n      );\n    }\n\n    const resolvedError = resolveFromMapping({\n      errorAccessor,\n      errorCodesMap: commonErrors.commonErrorsMap,\n    });\n\n    if (!resolvedError) {\n      return (\n        errorCodesMap?.serverError?.(error) ??\n        commonErrors.defaultErrorShowErrorProps\n      );\n    }\n\n    return resolvedError;\n  }\n\n  _resolveConsumerError() {\n    const { errorCodesMap, errorAccessor } = this;\n\n    const { httpError } = errorAccessor;\n\n    if (httpError == null || errorCodesMap == null) {\n      return null;\n    }\n\n    return resolveFromMapping({\n      errorAccessor,\n      errorCodesMap,\n    });\n  }\n\n  resolve() {\n    this.consumerResolvedError = this._resolveConsumerError();\n\n    // If consumer resolved the error, we don't need to resolve the common error\n    if (this.consumerResolvedError != null) {\n      return;\n    }\n\n    this.commonResolvedError = this._resolveCommonError();\n  }\n\n  get errorToShow() {\n    return this.consumerResolvedError ?? this.commonResolvedError;\n  }\n}\n"],"mappings":"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","ignoreList":[]}