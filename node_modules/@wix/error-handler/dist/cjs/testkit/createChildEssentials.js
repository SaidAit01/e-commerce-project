"use strict";

exports.__esModule = true;
exports.createChildEssentials = void 0;
const createChildEssentials = ({
  essentialsTestkit,
  context,
  events,
  options: {
    translations
  }
}) => options => {
  return context.createChildEssentials({
    ...options,
    ...(options.errorMonitor && {
      errorMonitor: {
        ...options.errorMonitor,
        transport: essentialsTestkit.sentryTransport
      }
    }),
    ...(options.i18n && {
      i18n: {
        ...options.i18n,
        asyncMessagesLoader: async locale => {
          var _options$i18n;
          if (translations != null && translations.pause) {
            await new Promise((resolve, reject) => {
              events.once('translations-ready', resolve);
              events.once('translations-error', errorLng => {
                if (errorLng == null || errorLng === locale) {
                  reject(new Error('Translations error'));
                }
              });
            });
          }
          return (await ((_options$i18n = options.i18n) == null || _options$i18n.asyncMessagesLoader == null ? void 0 : _options$i18n.asyncMessagesLoader(locale))) ?? {};
        }
      }
    })
  });
};
exports.createChildEssentials = createChildEssentials;
//# sourceMappingURL=createChildEssentials.js.map