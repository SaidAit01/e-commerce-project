import { ErrorAccessor } from './ErrorAccessor';
import { OnlineManager, ErrorCodesMap, ShowErrorProps } from '@wix/error-handler-core/types';
import { CommonErrorsMapState } from './CommonErrorsMapState';
export interface ErrorResolutionParams {
    readonly errorAccessor: ErrorAccessor;
    readonly errorCodesMap: ErrorCodesMap | null | undefined;
    readonly commonErrorsMapState: CommonErrorsMapState;
    readonly onlineManager: OnlineManager;
}
export declare class ErrorResolution {
    readonly errorAccessor: ErrorAccessor;
    readonly errorCodesMap: ErrorCodesMap<import("@wix/error-handler-core/types").ApplicationError<string, Record<string, any>>, import("@wix/error-handler-core/types").FieldViolationBase<string>> | null | undefined;
    readonly commonErrorsMapState: CommonErrorsMapState;
    readonly onlineManager: OnlineManager;
    consumerResolvedError?: ShowErrorProps | null;
    commonResolvedError?: ShowErrorProps | null;
    constructor(params: ErrorResolutionParams);
    get commonErrors(): {
        commonErrorsMap: ErrorCodesMap<import("@wix/error-handler-core/types").ApplicationError<string, Record<string, any>>, import("@wix/error-handler-core/types").FieldViolationBase<string>>;
        connectionErrorShowErrorProps: ShowErrorProps;
        defaultErrorShowErrorProps: ShowErrorProps;
        getNetworkErrorShowErrorProps: (errorAccessor: ErrorAccessor) => ShowErrorProps;
    } | undefined;
    _resolveNetworkError(): ShowErrorProps | null;
    _resolveCommonError(): ShowErrorProps | null | undefined;
    _resolveConsumerError(): ShowErrorProps | null | undefined;
    resolve(): void;
    get errorToShow(): ShowErrorProps | null | undefined;
}
//# sourceMappingURL=ErrorResolution.d.ts.map