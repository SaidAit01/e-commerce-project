// src/ecom-v1-abandoned-checkout-abandoned-checkouts.public.ts
import { renameKeysFromRESTResponseToSDKResponse as renameKeysFromRESTResponseToSDKResponse2 } from "@wix/sdk-runtime/rename-all-nested-keys";
import { transformRESTTimestampToSDKTimestamp as transformRESTTimestampToSDKTimestamp2 } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths as transformPaths3 } from "@wix/sdk-runtime/transformations/transform-paths";
import { EventDefinition } from "@wix/sdk-types";

// src/ecom-v1-abandoned-checkout-abandoned-checkouts.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import { queryBuilder } from "@wix/sdk-runtime/query-builder";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/ecom-v1-abandoned-checkout-abandoned-checkouts.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformRESTBytesToSDKBytes } from "@wix/sdk-runtime/transformations/bytes";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/abandoned-checkout",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/abandoned-checkout",
        destPath: "/v1/abandoned-checkout"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/abandoned-checkout",
        destPath: "/v1/abandoned-checkout"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_abandoned-checkouts";
function getAbandonedCheckout(payload) {
  function __getAbandonedCheckout({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.abandoned_checkout",
      method: "GET",
      methodFqn: "wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.GetAbandonedCheckout",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({
        protoPath: "/v1/abandoned-checkout/{abandonedCheckoutId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "abandonedCheckout.createdDate" },
            { path: "abandonedCheckout.updatedDate" },
            { path: "abandonedCheckout.checkoutRecoveredDate" },
            { path: "abandonedCheckout.activities.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getAbandonedCheckout;
}
function deleteAbandonedCheckout(payload) {
  function __deleteAbandonedCheckout({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.abandoned_checkout",
      method: "DELETE",
      methodFqn: "wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.DeleteAbandonedCheckout",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({
        protoPath: "/v1/abandoned-checkout/{abandonedCheckoutId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteAbandonedCheckout;
}
function queryAbandonedCheckouts(payload) {
  function __queryAbandonedCheckouts({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.abandoned_checkout",
      method: "POST",
      methodFqn: "wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.QueryAbandonedCheckouts",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({
        protoPath: "/v1/abandoned-checkout/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.createdDate" },
            { path: "results.updatedDate" },
            { path: "results.checkoutRecoveredDate" },
            { path: "results.activities.createdDate" },
            { path: "abandonedCheckouts.createdDate" },
            { path: "abandonedCheckouts.updatedDate" },
            { path: "abandonedCheckouts.checkoutRecoveredDate" },
            { path: "abandonedCheckouts.activities.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryAbandonedCheckouts;
}
function searchAbandonedCheckouts(payload) {
  function __searchAbandonedCheckouts({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.abandoned_checkout",
      method: "POST",
      methodFqn: "wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.SearchAbandonedCheckouts",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({
        protoPath: "/v1/abandoned-checkout/search",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "abandonedCheckouts.createdDate" },
            { path: "abandonedCheckouts.updatedDate" },
            { path: "abandonedCheckouts.checkoutRecoveredDate" },
            { path: "abandonedCheckouts.activities.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __searchAbandonedCheckouts;
}
function addAbandonedCheckoutActivity(payload) {
  function __addAbandonedCheckoutActivity({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.abandoned_checkout",
      method: "POST",
      methodFqn: "wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.AddAbandonedCheckoutActivity",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({
        protoPath: "/v1/abandoned-checkouts/{abandonedCheckoutId}/add-activity",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "abandonedCheckout.createdDate" },
            { path: "abandonedCheckout.updatedDate" },
            { path: "abandonedCheckout.checkoutRecoveredDate" },
            { path: "abandonedCheckout.activities.createdDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addAbandonedCheckoutActivity;
}
function redirectToCheckout(payload) {
  function __redirectToCheckout({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.abandoned_checkout",
      method: "GET",
      methodFqn: "wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.RedirectToCheckout",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({
        protoPath: "/v1/abandoned-checkout/{abandonedCheckoutId}/redirect-to-checkout",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [{ path: "body" }]
        }
      ])
    };
    return metadata;
  }
  return __redirectToCheckout;
}

// src/ecom-v1-abandoned-checkout-abandoned-checkouts.universal.ts
import { transformPaths as transformPaths2 } from "@wix/sdk-runtime/transformations/transform-paths";
var ActivityType = /* @__PURE__ */ ((ActivityType2) => {
  ActivityType2["UNKNOWN_TYPE"] = "UNKNOWN_TYPE";
  ActivityType2["SCHEDULED"] = "SCHEDULED";
  ActivityType2["EMAIL_SENT"] = "EMAIL_SENT";
  ActivityType2["EMAIL_NOT_SENT"] = "EMAIL_NOT_SENT";
  ActivityType2["NOTIFICATION_SENT"] = "NOTIFICATION_SENT";
  ActivityType2["TASK_CREATED"] = "TASK_CREATED";
  return ActivityType2;
})(ActivityType || {});
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["ABANDONED"] = "ABANDONED";
  Status2["RECOVERED"] = "RECOVERED";
  return Status2;
})(Status || {});
var VatType = /* @__PURE__ */ ((VatType2) => {
  VatType2["UNSPECIFIED"] = "UNSPECIFIED";
  VatType2["CPF"] = "CPF";
  VatType2["CNPJ"] = "CNPJ";
  return VatType2;
})(VatType || {});
var Identity = /* @__PURE__ */ ((Identity2) => {
  Identity2["ADMIN"] = "ADMIN";
  Identity2["MEMBER"] = "MEMBER";
  Identity2["VISITOR"] = "VISITOR";
  Identity2["CONTACT"] = "CONTACT";
  return Identity2;
})(Identity || {});
var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "ASC";
  SortOrder2["DESC"] = "DESC";
  return SortOrder2;
})(SortOrder || {});
var CommonSortOrder = /* @__PURE__ */ ((CommonSortOrder2) => {
  CommonSortOrder2["ASC"] = "ASC";
  CommonSortOrder2["DESC"] = "DESC";
  return CommonSortOrder2;
})(CommonSortOrder || {});
var Mode = /* @__PURE__ */ ((Mode2) => {
  Mode2["OR"] = "OR";
  Mode2["AND"] = "AND";
  return Mode2;
})(Mode || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function getAbandonedCheckout2(abandonedCheckoutId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    abandonedCheckoutId
  });
  const reqOpts = getAbandonedCheckout(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data)?.abandonedCheckout;
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { abandonedCheckoutId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["abandonedCheckoutId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteAbandonedCheckout2(abandonedCheckoutId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    abandonedCheckoutId
  });
  const reqOpts = deleteAbandonedCheckout(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { abandonedCheckoutId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["abandonedCheckoutId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
function queryAbandonedCheckouts2() {
  const { httpClient, sideEffects } = arguments[0];
  return queryBuilder({
    func: async (payload) => {
      const reqOpts = queryAbandonedCheckouts(payload);
      sideEffects?.onSiteCall?.();
      try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return result;
      } catch (err) {
        sideEffects?.onError?.(err);
        throw err;
      }
    },
    requestTransformer: (query) => {
      const args = [query, {}];
      return renameKeysFromSDKRequestToRESTRequest({
        ...args?.[1],
        query: args?.[0]
      });
    },
    responseTransformer: ({
      data
    }) => {
      const transformedData = renameKeysFromRESTResponseToSDKResponse(
        transformPaths2(data, [])
      );
      return {
        items: transformedData?.abandonedCheckouts,
        pagingMetadata: transformedData?.metadata
      };
    },
    errorTransformer: (err) => {
      const transformedError = sdkTransformError(err, {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { query: "$[0]" },
        singleArgumentUnchanged: false
      });
      throw transformedError;
    },
    pagingMethod: "CURSOR",
    transformationPaths: {}
  });
}
async function searchAbandonedCheckouts2(search) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ search });
  const reqOpts = searchAbandonedCheckouts(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { search: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["search"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function addAbandonedCheckoutActivity2(abandonedCheckoutId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    abandonedCheckoutId,
    activityType: options?.activityType
  });
  const reqOpts = addAbandonedCheckoutActivity(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          abandonedCheckoutId: "$[0]",
          activityType: "$[1].activityType"
        },
        singleArgumentUnchanged: false
      },
      ["abandonedCheckoutId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function redirectToCheckout2(abandonedCheckoutId, metasiteId) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    abandonedCheckoutId,
    metasiteId
  });
  const reqOpts = redirectToCheckout(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          abandonedCheckoutId: "$[0]",
          metasiteId: "$[1]"
        },
        singleArgumentUnchanged: false
      },
      ["abandonedCheckoutId", "metasiteId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/ecom-v1-abandoned-checkout-abandoned-checkouts.public.ts
function getAbandonedCheckout3(httpClient) {
  return (abandonedCheckoutId) => getAbandonedCheckout2(
    abandonedCheckoutId,
    // @ts-ignore
    { httpClient }
  );
}
function deleteAbandonedCheckout3(httpClient) {
  return (abandonedCheckoutId) => deleteAbandonedCheckout2(
    abandonedCheckoutId,
    // @ts-ignore
    { httpClient }
  );
}
function queryAbandonedCheckouts3(httpClient) {
  return () => queryAbandonedCheckouts2(
    // @ts-ignore
    { httpClient }
  );
}
function searchAbandonedCheckouts3(httpClient) {
  return (search) => searchAbandonedCheckouts2(
    search,
    // @ts-ignore
    { httpClient }
  );
}
function addAbandonedCheckoutActivity3(httpClient) {
  return (abandonedCheckoutId, options) => addAbandonedCheckoutActivity2(
    abandonedCheckoutId,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function redirectToCheckout3(httpClient) {
  return (abandonedCheckoutId, metasiteId) => redirectToCheckout2(
    abandonedCheckoutId,
    metasiteId,
    // @ts-ignore
    { httpClient }
  );
}
var onAbandonedCheckoutCreated = EventDefinition(
  "wix.ecom.v1.abandoned_checkout_created",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          { path: "entity.createdDate" },
          { path: "entity.updatedDate" },
          { path: "entity.checkoutRecoveredDate" },
          { path: "entity.activities.createdDate" },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();
var onAbandonedCheckoutDeleted = EventDefinition(
  "wix.ecom.v1.abandoned_checkout_deleted",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          { path: "undefined.createdDate" },
          { path: "undefined.updatedDate" },
          { path: "undefined.checkoutRecoveredDate" },
          { path: "undefined.activities.createdDate" },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();
var onAbandonedCheckoutRecovered = EventDefinition(
  "wix.ecom.v1.abandoned_checkout_recovered",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          { path: "data.abandonedCheckout.createdDate" },
          { path: "data.abandonedCheckout.updatedDate" },
          { path: "data.abandonedCheckout.checkoutRecoveredDate" },
          { path: "data.abandonedCheckout.activities.createdDate" },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();
var onAbandonedCheckoutUpdated = EventDefinition(
  "wix.ecom.v1.abandoned_checkout_updated",
  true,
  (event) => renameKeysFromRESTResponseToSDKResponse2(
    transformPaths3(event, [
      {
        transformFn: transformRESTTimestampToSDKTimestamp2,
        paths: [
          { path: "entity.createdDate" },
          { path: "entity.updatedDate" },
          { path: "entity.checkoutRecoveredDate" },
          { path: "entity.activities.createdDate" },
          { path: "metadata.eventTime" }
        ]
      }
    ])
  )
)();

// src/ecom-v1-abandoned-checkout-abandoned-checkouts.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
import { createEventModule } from "@wix/sdk-runtime/event-definition-modules";
var getAbandonedCheckout4 = /* @__PURE__ */ createRESTModule(getAbandonedCheckout3);
var deleteAbandonedCheckout4 = /* @__PURE__ */ createRESTModule(deleteAbandonedCheckout3);
var queryAbandonedCheckouts4 = /* @__PURE__ */ createRESTModule(queryAbandonedCheckouts3);
var searchAbandonedCheckouts4 = /* @__PURE__ */ createRESTModule(searchAbandonedCheckouts3);
var addAbandonedCheckoutActivity4 = /* @__PURE__ */ createRESTModule(addAbandonedCheckoutActivity3);
var redirectToCheckout4 = /* @__PURE__ */ createRESTModule(redirectToCheckout3);
var onAbandonedCheckoutCreated2 = createEventModule(
  onAbandonedCheckoutCreated
);
var onAbandonedCheckoutDeleted2 = createEventModule(
  onAbandonedCheckoutDeleted
);
var onAbandonedCheckoutRecovered2 = createEventModule(
  onAbandonedCheckoutRecovered
);
var onAbandonedCheckoutUpdated2 = createEventModule(
  onAbandonedCheckoutUpdated
);
export {
  ActivityType,
  CommonSortOrder,
  Identity,
  Mode,
  SortOrder,
  Status,
  VatType,
  WebhookIdentityType,
  addAbandonedCheckoutActivity4 as addAbandonedCheckoutActivity,
  deleteAbandonedCheckout4 as deleteAbandonedCheckout,
  getAbandonedCheckout4 as getAbandonedCheckout,
  onAbandonedCheckoutCreated2 as onAbandonedCheckoutCreated,
  onAbandonedCheckoutDeleted2 as onAbandonedCheckoutDeleted,
  onAbandonedCheckoutRecovered2 as onAbandonedCheckoutRecovered,
  onAbandonedCheckoutUpdated2 as onAbandonedCheckoutUpdated,
  queryAbandonedCheckouts4 as queryAbandonedCheckouts,
  redirectToCheckout4 as redirectToCheckout,
  searchAbandonedCheckouts4 as searchAbandonedCheckouts
};
//# sourceMappingURL=index.mjs.map