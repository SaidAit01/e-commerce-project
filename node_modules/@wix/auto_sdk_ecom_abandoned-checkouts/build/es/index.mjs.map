{"version":3,"sources":["../../src/ecom-v1-abandoned-checkout-abandoned-checkouts.public.ts","../../src/ecom-v1-abandoned-checkout-abandoned-checkouts.universal.ts","../../src/ecom-v1-abandoned-checkout-abandoned-checkouts.http.ts","../../src/ecom-v1-abandoned-checkout-abandoned-checkouts.context.ts"],"sourcesContent":["import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  AbandonedCheckout,\n  AbandonedCheckoutCreatedEnvelope,\n  AbandonedCheckoutDeletedEnvelope,\n  AbandonedCheckoutRecoveredEnvelope,\n  AbandonedCheckoutSearch,\n  AbandonedCheckoutUpdatedEnvelope,\n  AbandonedCheckoutsQueryBuilder,\n  AddAbandonedCheckoutActivityOptions,\n  AddAbandonedCheckoutActivityResponse,\n  RawHttpResponse,\n  SearchAbandonedCheckoutsResponse,\n  addAbandonedCheckoutActivity as universalAddAbandonedCheckoutActivity,\n  deleteAbandonedCheckout as universalDeleteAbandonedCheckout,\n  getAbandonedCheckout as universalGetAbandonedCheckout,\n  queryAbandonedCheckouts as universalQueryAbandonedCheckouts,\n  redirectToCheckout as universalRedirectToCheckout,\n  searchAbandonedCheckouts as universalSearchAbandonedCheckouts,\n} from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/ecom' };\n\nexport function getAbandonedCheckout(\n  httpClient: HttpClient\n): GetAbandonedCheckoutSignature {\n  return (abandonedCheckoutId: string) =>\n    universalGetAbandonedCheckout(\n      abandonedCheckoutId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetAbandonedCheckoutSignature {\n  /**\n   * Retrieves an abandoned checkout.\n   * @param - Abandoned checkout ID.\n   * @returns The requested abandoned checkout.\n   */\n  (abandonedCheckoutId: string): Promise<\n    NonNullablePaths<\n      AbandonedCheckout,\n      | `_id`\n      | `status`\n      | `buyerInfo.visitorId`\n      | `buyerInfo.memberId`\n      | `buyerInfo.userId`\n      | `contactDetails.vatId._id`\n      | `contactDetails.vatId.type`\n      | `currency`\n      | `totalPrice.amount`\n      | `totalPrice.convertedAmount`\n      | `totalPrice.formattedAmount`\n      | `totalPrice.formattedConvertedAmount`\n      | `activities`\n      | `activities.${number}.type`\n      | `checkoutUrl`,\n      4\n    >\n  >;\n}\n\nexport function deleteAbandonedCheckout(\n  httpClient: HttpClient\n): DeleteAbandonedCheckoutSignature {\n  return (abandonedCheckoutId: string) =>\n    universalDeleteAbandonedCheckout(\n      abandonedCheckoutId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteAbandonedCheckoutSignature {\n  /**\n   * Deletes an abandoned checkout.\n   * @param - Id of the abandoned checkout to delete\n   */\n  (abandonedCheckoutId: string): Promise<void>;\n}\n\nexport function queryAbandonedCheckouts(\n  httpClient: HttpClient\n): QueryAbandonedCheckoutsSignature {\n  return () =>\n    universalQueryAbandonedCheckouts(\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryAbandonedCheckoutsSignature {\n  /**\n   * Creates a query to retrieve a list of abandoned checkouts.\n   *\n   * The `queryAbandonedCheckouts()` function builds a query to retrieve a list of abandoned checkouts and returns a `ResultsQueryBuilder` object.\n   *\n   * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n   *\n   * You can refine the query by chaining `ResultsQueryBuilder` functions onto the query. `ResultsQueryBuilder` functions enable you to sort, filter, and control the results `queryAbandonedCheckouts()` returns.\n   */\n  (): AbandonedCheckoutsQueryBuilder;\n}\n\nexport function searchAbandonedCheckouts(\n  httpClient: HttpClient\n): SearchAbandonedCheckoutsSignature {\n  return (search: AbandonedCheckoutSearch) =>\n    universalSearchAbandonedCheckouts(\n      search,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface SearchAbandonedCheckoutsSignature {\n  /**\n   * Retrieves a list of abandoned checkouts, given the provided paging, filtering, search details and sorting. Up to 100 abandoned checkouts can be returned per request.\n   * @param - Search options.\n   */\n  (search: AbandonedCheckoutSearch): Promise<\n    NonNullablePaths<\n      SearchAbandonedCheckoutsResponse,\n      | `abandonedCheckouts`\n      | `abandonedCheckouts.${number}._id`\n      | `abandonedCheckouts.${number}.status`\n      | `abandonedCheckouts.${number}.buyerInfo.visitorId`\n      | `abandonedCheckouts.${number}.buyerInfo.memberId`\n      | `abandonedCheckouts.${number}.buyerInfo.userId`\n      | `abandonedCheckouts.${number}.contactDetails.vatId._id`\n      | `abandonedCheckouts.${number}.contactDetails.vatId.type`\n      | `abandonedCheckouts.${number}.currency`\n      | `abandonedCheckouts.${number}.totalPrice.amount`\n      | `abandonedCheckouts.${number}.totalPrice.convertedAmount`\n      | `abandonedCheckouts.${number}.totalPrice.formattedAmount`\n      | `abandonedCheckouts.${number}.totalPrice.formattedConvertedAmount`\n      | `abandonedCheckouts.${number}.checkoutUrl`,\n      6\n    >\n  >;\n}\n\n/** @internal */\nexport function addAbandonedCheckoutActivity(\n  httpClient: HttpClient\n): AddAbandonedCheckoutActivitySignature {\n  return (\n    abandonedCheckoutId: string,\n    options?: AddAbandonedCheckoutActivityOptions\n  ) =>\n    universalAddAbandonedCheckoutActivity(\n      abandonedCheckoutId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface AddAbandonedCheckoutActivitySignature {\n  /**\n   * Adds a new abandoned checkout activity.\n   * @param - Id of the abandoned checkout to update\n   */\n  (\n    abandonedCheckoutId: string,\n    options?: AddAbandonedCheckoutActivityOptions\n  ): Promise<\n    NonNullablePaths<\n      AddAbandonedCheckoutActivityResponse,\n      | `abandonedCheckout._id`\n      | `abandonedCheckout.status`\n      | `abandonedCheckout.buyerInfo.visitorId`\n      | `abandonedCheckout.buyerInfo.memberId`\n      | `abandonedCheckout.buyerInfo.userId`\n      | `abandonedCheckout.contactDetails.vatId._id`\n      | `abandonedCheckout.contactDetails.vatId.type`\n      | `abandonedCheckout.currency`\n      | `abandonedCheckout.totalPrice.amount`\n      | `abandonedCheckout.totalPrice.convertedAmount`\n      | `abandonedCheckout.totalPrice.formattedAmount`\n      | `abandonedCheckout.totalPrice.formattedConvertedAmount`\n      | `abandonedCheckout.activities`\n      | `abandonedCheckout.activities.${number}.type`\n      | `abandonedCheckout.checkoutUrl`,\n      5\n    >\n  >;\n}\n\nexport function redirectToCheckout(\n  httpClient: HttpClient\n): RedirectToCheckoutSignature {\n  return (abandonedCheckoutId: string, metasiteId: string) =>\n    universalRedirectToCheckout(\n      abandonedCheckoutId,\n      metasiteId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface RedirectToCheckoutSignature {\n  /**\n   * Redirects an abandoned checkout to its checkout page.\n   * @param - ID of the abandoned checkout.\n   * @param - Metasite ID of the site associated with the abandoned checkout.\n   */\n  (abandonedCheckoutId: string, metasiteId: string): Promise<\n    NonNullablePaths<\n      RawHttpResponse,\n      `body` | `headers` | `headers.${number}.key` | `headers.${number}.value`,\n      4\n    >\n  >;\n}\n\nexport const onAbandonedCheckoutCreated = EventDefinition(\n  'wix.ecom.v1.abandoned_checkout_created',\n  true,\n  (event: AbandonedCheckoutCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'entity.checkoutRecoveredDate' },\n            { path: 'entity.activities.createdDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<AbandonedCheckoutCreatedEnvelope>();\nexport const onAbandonedCheckoutDeleted = EventDefinition(\n  'wix.ecom.v1.abandoned_checkout_deleted',\n  true,\n  (event: AbandonedCheckoutDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'undefined.createdDate' },\n            { path: 'undefined.updatedDate' },\n            { path: 'undefined.checkoutRecoveredDate' },\n            { path: 'undefined.activities.createdDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<AbandonedCheckoutDeletedEnvelope>();\nexport const onAbandonedCheckoutRecovered = EventDefinition(\n  'wix.ecom.v1.abandoned_checkout_recovered',\n  true,\n  (event: AbandonedCheckoutRecoveredEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'data.abandonedCheckout.createdDate' },\n            { path: 'data.abandonedCheckout.updatedDate' },\n            { path: 'data.abandonedCheckout.checkoutRecoveredDate' },\n            { path: 'data.abandonedCheckout.activities.createdDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<AbandonedCheckoutRecoveredEnvelope>();\nexport const onAbandonedCheckoutUpdated = EventDefinition(\n  'wix.ecom.v1.abandoned_checkout_updated',\n  true,\n  (event: AbandonedCheckoutUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'entity.checkoutRecoveredDate' },\n            { path: 'entity.activities.createdDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<AbandonedCheckoutUpdatedEnvelope>();\n\nexport {\n  AbandonedCheckout,\n  AbandonedCheckoutCreatedEnvelope,\n  AbandonedCheckoutDeletedEnvelope,\n  AbandonedCheckoutRecovered,\n  AbandonedCheckoutRecoveredEnvelope,\n  AbandonedCheckoutSearchSpec,\n  AbandonedCheckoutUpdatedEnvelope,\n  AbandonedCheckoutsQueryBuilder,\n  AbandonedCheckoutsQueryResult,\n  ActionEvent,\n  Activity,\n  ActivityType,\n  AddAbandonedCheckoutActivityOptions,\n  AddAbandonedCheckoutActivityRequest,\n  AddAbandonedCheckoutActivityResponse,\n  BaseEventMetadata,\n  BuyerInfo,\n  Cancel,\n  CartAbandonedEvent,\n  CartRecoveredEvent,\n  CommonCursorPaging,\n  CommonCursors,\n  CommonPaging,\n  CommonPagingMetadataV2,\n  CommonSortOrder,\n  CommonSorting,\n  Complete,\n  CursorPaging,\n  Cursors,\n  DeleteAbandonedCheckoutRequest,\n  DeleteAbandonedCheckoutResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  FullAddressContactDetails,\n  GetAbandonedCheckoutRequest,\n  GetAbandonedCheckoutResponse,\n  HeadersEntry,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  Identity,\n  MessageEnvelope,\n  Mode,\n  MultiCurrencyPrice,\n  Paging,\n  PagingMetadataV2,\n  QueryAbandonedCheckoutsRequest,\n  QueryAbandonedCheckoutsResponse,\n  QueryV2,\n  QueryV2PagingMethodOneOf,\n  RawHttpResponse,\n  RedirectToCheckoutRequest,\n  Reschedule,\n  RestoreInfo,\n  Search,\n  SearchAbandonedCheckoutsRequest,\n  SearchAbandonedCheckoutsResponse,\n  SearchDetails,\n  SearchPagingMethodOneOf,\n  SortOrder,\n  Sorting,\n  Status,\n  Task,\n  TaskAction,\n  TaskActionActionOneOf,\n  TaskKey,\n  Totals,\n  V1BuyerInfo,\n  V1BuyerInfoIdOneOf,\n  VatId,\n  VatType,\n  WebhookIdentityType,\n} from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport {\n  HttpClient,\n  HttpResponse,\n  Search as SearchSdkType,\n  NonNullablePaths,\n  SearchSpec,\n} from '@wix/sdk-types';\nimport * as ambassadorWixEcomV1AbandonedCheckout from './ecom-v1-abandoned-checkout-abandoned-checkouts.http.js';\n// @ts-ignore\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\nexport interface AbandonedCheckout {\n  /**\n   * Abandoned checkout ID.\n   * @format GUID\n   */\n  _id?: string;\n  /** Date and time the abandoned checkout was created. */\n  _createdDate?: Date | null;\n  /** Date and time the abandoned checkout was updated. */\n  _updatedDate?: Date | null;\n  /**\n   * The associated checkout ID.\n   * @format GUID\n   */\n  checkoutId?: string | null;\n  /**\n   * The associated cart ID.\n   * @format GUID\n   */\n  cartId?: string | null;\n  /** Status of the abandoned checkout. */\n  status?: StatusWithLiterals;\n  /**\n   * Language for communication with the buyer. Defaults to the site language.\n   * For a site that supports multiple languages, this is the language the buyer selected.\n   */\n  buyerLanguage?: string | null;\n  /** Buyer information. */\n  buyerInfo?: V1BuyerInfo;\n  /** Contact details. */\n  contactDetails?: FullAddressContactDetails;\n  /**\n   * The store's currency.\n   * @format CURRENCY\n   */\n  currency?: string;\n  /**\n   * Currency the buyer used in checkout.\n   * @format CURRENCY\n   */\n  conversionCurrency?: string | null;\n  /** Total price after discounts, gift cards, and tax. */\n  totalPrice?: MultiCurrencyPrice;\n  /**\n   * List of all automation activities performed by [Wix Automations](https://dev.wix.com/docs/rest/business-management/automations/introduction) regarding the abandoned checkout.\n   * Wix Automations updates the `activities` field for each activity in the automation flow. Only relevant if you've set up [automations in the Dashboard](https://support.wix.com/en/article/wix-automations-creating-a-new-automation). Read more about `activities` in the [introduction](https://www.wix.com/velo/reference/wix-ecom-backend/abandonedcheckout/introduction).\n   */\n  activities?: Activity[];\n  /** Date and time the abandoned checkout was recovered. */\n  checkoutRecoveredDate?: Date | null;\n  /**\n   * Checkout URL.\n   * @format WEB_URL\n   */\n  checkoutUrl?: string;\n  /** Subtotal price of all line items, before discounts and before tax. */\n  subtotalPrice?: MultiCurrencyPrice;\n}\n\nexport enum ActivityType {\n  /** Not implemented. */\n  UNKNOWN_TYPE = 'UNKNOWN_TYPE',\n  /** Scheduled. */\n  SCHEDULED = 'SCHEDULED',\n  /** Email sent. */\n  EMAIL_SENT = 'EMAIL_SENT',\n  /** Email not sent. */\n  EMAIL_NOT_SENT = 'EMAIL_NOT_SENT',\n  /** Notification sent. */\n  NOTIFICATION_SENT = 'NOTIFICATION_SENT',\n  /** Task created. */\n  TASK_CREATED = 'TASK_CREATED',\n}\n\n/** @enumType */\nexport type ActivityTypeWithLiterals =\n  | ActivityType\n  | 'UNKNOWN_TYPE'\n  | 'SCHEDULED'\n  | 'EMAIL_SENT'\n  | 'EMAIL_NOT_SENT'\n  | 'NOTIFICATION_SENT'\n  | 'TASK_CREATED';\n\n/** Status of the abandoned checkout. */\nexport enum Status {\n  /** Abandoned. */\n  ABANDONED = 'ABANDONED',\n  /** Recovered. */\n  RECOVERED = 'RECOVERED',\n}\n\n/** @enumType */\nexport type StatusWithLiterals = Status | 'ABANDONED' | 'RECOVERED';\n\n/** Buyer information. */\nexport interface V1BuyerInfo extends V1BuyerInfoIdOneOf {\n  /**\n   * Visitor ID (if the site visitor is **not** a site member).\n   * @format GUID\n   */\n  visitorId?: string;\n  /**\n   * Member ID (if the site visitor is a site member).\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * User ID (if the site visitor is a site owner or collaborator).\n   * @format GUID\n   */\n  userId?: string;\n  /**\n   * Contact ID. For more information, see the [Contacts API](https://www.wix.com/velo/reference/wix-crm-v2/contacts).\n   * @format GUID\n   * @readonly\n   */\n  contactId?: string | null;\n  /**\n   * Buyer email address.\n   * Max: `50`\n   * @maxLength 50\n   * @format EMAIL\n   */\n  email?: string | null;\n}\n\n/** @oneof */\nexport interface V1BuyerInfoIdOneOf {\n  /**\n   * Visitor ID (if the site visitor is **not** a site member).\n   * @format GUID\n   */\n  visitorId?: string;\n  /**\n   * Member ID (if the site visitor is a site member).\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * User ID (if the site visitor is a site owner or collaborator).\n   * @format GUID\n   */\n  userId?: string;\n}\n\n/** Full contact details for an address */\nexport interface FullAddressContactDetails {\n  /**\n   * First name.\n   * Max length: `100`\n   * @maxLength 100\n   */\n  firstName?: string | null;\n  /**\n   * Last name.\n   * Max length: `100`\n   * @maxLength 100\n   */\n  lastName?: string | null;\n  /**\n   * Phone number.\n   * @format PHONE\n   */\n  phone?: string | null;\n  /**\n   * Company name.\n   * Max length: `50`\n   * @maxLength 1000\n   */\n  company?: string | null;\n  /** Tax information (for Brazil only). If ID is provided, `vatId.type` must also be set, `UNSPECIFIED` is not allowed. */\n  vatId?: VatId;\n}\n\nexport interface VatId {\n  /** Customer's tax ID. */\n  _id?: string;\n  /**\n   * Tax type.\n   *\n   * Supported values:\n   * + `CPF`: for individual tax payers\n   * + `CNPJ`: for corporations\n   */\n  type?: VatTypeWithLiterals;\n}\n\n/** tax info types */\nexport enum VatType {\n  UNSPECIFIED = 'UNSPECIFIED',\n  /** CPF - for individual tax payers. */\n  CPF = 'CPF',\n  /** CNPJ - for corporations */\n  CNPJ = 'CNPJ',\n}\n\n/** @enumType */\nexport type VatTypeWithLiterals = VatType | 'UNSPECIFIED' | 'CPF' | 'CNPJ';\n\nexport interface MultiCurrencyPrice {\n  /**\n   * Amount.\n   * @decimalValue options { gte:0, lte:1000000000000000 }\n   */\n  amount?: string;\n  /**\n   * Converted amount.\n   * @readonly\n   * @decimalValue options { gte:0, lte:1000000000000000 }\n   */\n  convertedAmount?: string;\n  /**\n   * Amount formatted with currency symbol.\n   * @readonly\n   */\n  formattedAmount?: string;\n  /**\n   * Converted amount formatted with currency symbol.\n   * @readonly\n   */\n  formattedConvertedAmount?: string;\n}\n\nexport interface Activity {\n  /** Date and time the automation activity was created. */\n  _createdDate?: Date | null;\n  /**\n   * Automation activity type.\n   *\n   * Supported properties: `UNKNOWN_TYPE`, `SCHEDULED`, `EMAIL_SENT`, `EMAIL_NOT_SENT`, `NOTIFICATION_SENT`, `TASK_CREATED`\n   */\n  type?: ActivityTypeWithLiterals;\n}\n\nexport interface CartAbandonedEvent {\n  /** @format GUID */\n  cartId?: string;\n  /**\n   * Time the cart was created\n   * @readonly\n   */\n  creationTime?: Date | null;\n  /**\n   * Time the cart was abandoned\n   * @readonly\n   */\n  abandonTime?: Date | null;\n  /** Buyer information */\n  buyerInfo?: BuyerInfo;\n  /** Amount of items in cart */\n  itemsCount?: number;\n  /** Coupon ID (if relevant) */\n  couponId?: string;\n  /** Subtotal of all line items in cart, not before shipping and taxes */\n  totals?: Totals;\n  /**\n   * Checkout URL - checkout with the abandoned cart details\n   * @format WEB_URL\n   */\n  checkoutUrl?: string;\n}\n\nexport interface BuyerInfo {\n  /**\n   * Wix customer ID\n   * @format GUID\n   */\n  _id?: string;\n  /** Customer information */\n  identityType?: IdentityWithLiterals;\n  /**\n   * Customer's email address\n   * @maxLength 50\n   * @format EMAIL\n   */\n  email?: string | null;\n  /**\n   * Customer's phone number\n   * @format PHONE\n   */\n  phone?: string | null;\n  /** Customer's first name */\n  firstName?: string | null;\n  /** Customer's last name */\n  lastName?: string | null;\n}\n\nexport enum Identity {\n  /** Customer is the site owner */\n  ADMIN = 'ADMIN',\n  /** Customer is logged in */\n  MEMBER = 'MEMBER',\n  /** Customer is not logged in */\n  VISITOR = 'VISITOR',\n  /** Contact was created for the customer */\n  CONTACT = 'CONTACT',\n}\n\n/** @enumType */\nexport type IdentityWithLiterals =\n  | Identity\n  | 'ADMIN'\n  | 'MEMBER'\n  | 'VISITOR'\n  | 'CONTACT';\n\nexport interface Totals {\n  /**\n   * Subtotal of all line items in cart, without shipping and taxes\n   * @max 999999999.99\n   */\n  subtotal?: number | null;\n  /**\n   * Total cart price\n   * @max 999999999.99\n   */\n  total?: number | null;\n  /** Formatted total cart price includes currency symbol */\n  formattedTotal?: string;\n}\n\nexport interface CartRecoveredEvent {\n  /** @format GUID */\n  cartId?: string;\n  /**\n   * Time the cart was recovered\n   * @readonly\n   */\n  recoveredTime?: Date | null;\n  /**\n   * Time the cart was created\n   * @readonly\n   */\n  creationTime?: Date | null;\n  /**\n   * Time the cart was abandoned\n   * @readonly\n   */\n  abandonedTime?: Date | null;\n}\n\n/** Triggered when an abandoned checkout is recovered (the customer completes the checkout). */\nexport interface AbandonedCheckoutRecovered {\n  /** The abandoned checkout that was recovered. */\n  abandonedCheckout?: AbandonedCheckout;\n}\n\nexport interface GetAbandonedCheckoutRequest {\n  /**\n   * Abandoned checkout ID.\n   * @format GUID\n   */\n  abandonedCheckoutId: string;\n}\n\nexport interface GetAbandonedCheckoutResponse {\n  /** The requested abandoned checkout. */\n  abandonedCheckout?: AbandonedCheckout;\n}\n\nexport interface DeleteAbandonedCheckoutRequest {\n  /**\n   * Id of the abandoned checkout to delete\n   * @format GUID\n   */\n  abandonedCheckoutId: string;\n}\n\nexport interface DeleteAbandonedCheckoutResponse {}\n\nexport interface QueryAbandonedCheckoutsRequest {\n  /** Query options. */\n  query: QueryV2;\n}\n\nexport interface QueryV2 extends QueryV2PagingMethodOneOf {\n  /** Paging options to limit and offset the number of items. */\n  paging?: Paging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object.\n   *\n   * Learn more about [filtering](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#filters).\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object.\n   *\n   * Learn more about [sorting](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#sorting).\n   */\n  sort?: Sorting[];\n  /** Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned. */\n  fields?: string[];\n  /** Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned. */\n  fieldsets?: string[];\n}\n\n/** @oneof */\nexport interface QueryV2PagingMethodOneOf {\n  /** Paging options to limit and offset the number of items. */\n  paging?: Paging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface Paging {\n  /** Number of items to load. */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryAbandonedCheckoutsResponse {\n  /**\n   * __Deprecated.__ Use `abandonedCheckouts` instead.\n   * @deprecated\n   */\n  results?: AbandonedCheckout[];\n  /** List of abandoned checkouts. */\n  abandonedCheckouts?: AbandonedCheckout[];\n  /** Details on the paged set of results returned. */\n  metadata?: PagingMetadataV2;\n}\n\nexport interface PagingMetadataV2 {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Offset that was requested. */\n  offset?: number | null;\n  /** Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set. */\n  total?: number | null;\n  /** Flag that indicates the server failed to calculate the `total` field. */\n  tooManyToCount?: boolean | null;\n  /** Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used. */\n  cursors?: Cursors;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface SearchAbandonedCheckoutsRequest {\n  /** Search options. */\n  search?: Search;\n}\n\nexport interface Search extends SearchPagingMethodOneOf {\n  /** Paging options to limit and offset the number of items. */\n  paging?: CommonPaging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not filter or sort. */\n  cursorPaging?: CommonCursorPaging;\n  /**\n   * Filter object.\n   *\n   * Learn more about [filtering](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#filters).\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object.\n   *\n   * Learn more about [sorting](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#sorting).\n   * @maxSize 4\n   */\n  sort?: CommonSorting[];\n  /** Free text to match in searchable fields. */\n  search?: SearchDetails;\n}\n\n/** @oneof */\nexport interface SearchPagingMethodOneOf {\n  /** Paging options to limit and offset the number of items. */\n  paging?: CommonPaging;\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not filter or sort. */\n  cursorPaging?: CommonCursorPaging;\n}\n\nexport interface CommonSorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 40\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: CommonSortOrderWithLiterals;\n}\n\nexport enum CommonSortOrder {\n  /** Ascending order. */\n  ASC = 'ASC',\n  /** Descending order. */\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type CommonSortOrderWithLiterals = CommonSortOrder | 'ASC' | 'DESC';\n\nexport interface SearchDetails {\n  /** Search mode. Defines the search logic for combining multiple terms in the `expression`. */\n  mode?: ModeWithLiterals;\n  /**\n   * Search term or expression.\n   * @maxLength 100\n   */\n  expression?: string | null;\n  /**\n   * Fields to search in. If the array is empty, all searchable fields are searched. Use dot notation to specify a JSON path. For example, `order.address.streetName`.\n   * @maxLength 100\n   * @maxSize 20\n   */\n  fields?: string[];\n  /** Whether to enable the search function to use an algorithm to automatically find results that are close to the search expression, such as typos and declensions. */\n  fuzzy?: boolean;\n}\n\nexport enum Mode {\n  /** At least one of the search terms must be present. */\n  OR = 'OR',\n  /** All search terms must be present. */\n  AND = 'AND',\n}\n\n/** @enumType */\nexport type ModeWithLiterals = Mode | 'OR' | 'AND';\n\nexport interface CommonPaging {\n  /**\n   * Number of items to load.\n   * @max 100\n   */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface CommonCursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   */\n  cursor?: string | null;\n}\n\nexport interface SearchAbandonedCheckoutsResponse {\n  /** List of abandoned checkouts. */\n  abandonedCheckouts?: AbandonedCheckout[];\n  /** Paging metadata. Contains cursor which can be used in next query. */\n  pagingMetadata?: CommonPagingMetadataV2;\n}\n\nexport interface CommonPagingMetadataV2 {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Offset that was requested. */\n  offset?: number | null;\n  /** Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set. */\n  total?: number | null;\n  /** Flag that indicates the server failed to calculate the `total` field. */\n  tooManyToCount?: boolean | null;\n  /** Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used. */\n  cursors?: CommonCursors;\n}\n\nexport interface CommonCursors {\n  /** Cursor string pointing to the next page in the list of results. */\n  next?: string | null;\n  /** Cursor pointing to the previous page in the list of results. */\n  prev?: string | null;\n}\n\nexport interface AddAbandonedCheckoutActivityRequest {\n  /**\n   * Id of the abandoned checkout to update\n   * @format GUID\n   */\n  abandonedCheckoutId: string | null;\n  /** The type of the activity to add */\n  activityType?: ActivityTypeWithLiterals;\n}\n\nexport interface AddAbandonedCheckoutActivityResponse {\n  /** The updated abandoned checkout with the added activity */\n  abandonedCheckout?: AbandonedCheckout;\n}\n\nexport interface Task {\n  key?: TaskKey;\n  executeAt?: Date | null;\n  payload?: string | null;\n}\n\nexport interface TaskKey {\n  appId?: string;\n  instanceId?: string;\n  subjectId?: string | null;\n}\n\nexport interface TaskAction extends TaskActionActionOneOf {\n  complete?: Complete;\n  cancel?: Cancel;\n  reschedule?: Reschedule;\n}\n\n/** @oneof */\nexport interface TaskActionActionOneOf {\n  complete?: Complete;\n  cancel?: Cancel;\n  reschedule?: Reschedule;\n}\n\nexport interface Complete {}\n\nexport interface Cancel {}\n\nexport interface Reschedule {\n  executeAt?: Date | null;\n  payload?: string | null;\n}\n\nexport interface RedirectToCheckoutRequest {\n  /**\n   * ID of the abandoned checkout.\n   * @format GUID\n   */\n  abandonedCheckoutId: string;\n  /**\n   * Metasite ID of the site associated with the abandoned checkout.\n   * @format GUID\n   */\n  metasiteId: string;\n}\n\nexport interface RawHttpResponse {\n  body?: Uint8Array;\n  statusCode?: number | null;\n  headers?: HeadersEntry[];\n}\n\nexport interface HeadersEntry {\n  key?: string;\n  value?: string;\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface AbandonedCheckoutCreatedEnvelope {\n  entity: AbandonedCheckout;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when an abandoned checkout is created.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read eCommerce - all read permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM\n * @permissionScope Read Orders\n * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Manage eCommerce - all permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @webhook\n * @eventType wix.ecom.v1.abandoned_checkout_created\n * @slug created\n */\nexport declare function onAbandonedCheckoutCreated(\n  handler: (event: AbandonedCheckoutCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface AbandonedCheckoutDeletedEnvelope {\n  metadata: EventMetadata;\n}\n\n/**\n * Triggerred when an abandoned checkout is deleted.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read eCommerce - all read permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM\n * @permissionScope Read Orders\n * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Manage eCommerce - all permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @webhook\n * @eventType wix.ecom.v1.abandoned_checkout_deleted\n * @slug deleted\n */\nexport declare function onAbandonedCheckoutDeleted(\n  handler: (event: AbandonedCheckoutDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface AbandonedCheckoutRecoveredEnvelope {\n  data: AbandonedCheckoutRecovered;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when an abandoned checkout is recovered.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read eCommerce - all read permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM\n * @permissionScope Read Orders\n * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Manage eCommerce - all permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @webhook\n * @eventType wix.ecom.v1.abandoned_checkout_recovered\n * @slug recovered\n */\nexport declare function onAbandonedCheckoutRecovered(\n  handler: (event: AbandonedCheckoutRecoveredEnvelope) => void | Promise<void>\n): void;\n\nexport interface AbandonedCheckoutUpdatedEnvelope {\n  entity: AbandonedCheckout;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when an abandoned checkout is updated.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read eCommerce - all read permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM\n * @permissionScope Read Orders\n * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Manage eCommerce - all permissions\n * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @webhook\n * @eventType wix.ecom.v1.abandoned_checkout_updated\n * @slug updated\n */\nexport declare function onAbandonedCheckoutUpdated(\n  handler: (event: AbandonedCheckoutUpdatedEnvelope) => void | Promise<void>\n): void;\n\n/**\n * Retrieves an abandoned checkout.\n * @param abandonedCheckoutId - Abandoned checkout ID.\n * @public\n * @requiredField abandonedCheckoutId\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @applicableIdentity APP\n * @returns The requested abandoned checkout.\n * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.GetAbandonedCheckout\n */\nexport async function getAbandonedCheckout(\n  abandonedCheckoutId: string\n): Promise<\n  NonNullablePaths<\n    AbandonedCheckout,\n    | `_id`\n    | `status`\n    | `buyerInfo.visitorId`\n    | `buyerInfo.memberId`\n    | `buyerInfo.userId`\n    | `contactDetails.vatId._id`\n    | `contactDetails.vatId.type`\n    | `currency`\n    | `totalPrice.amount`\n    | `totalPrice.convertedAmount`\n    | `totalPrice.formattedAmount`\n    | `totalPrice.formattedConvertedAmount`\n    | `activities`\n    | `activities.${number}.type`\n    | `checkoutUrl`,\n    4\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    abandonedCheckoutId: abandonedCheckoutId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1AbandonedCheckout.getAbandonedCheckout(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.abandonedCheckout!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { abandonedCheckoutId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['abandonedCheckoutId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Deletes an abandoned checkout.\n * @param abandonedCheckoutId - Id of the abandoned checkout to delete\n * @public\n * @requiredField abandonedCheckoutId\n * @permissionId ECOM.ABANDONED_CHECKOUT_DELETE\n * @applicableIdentity APP\n * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.DeleteAbandonedCheckout\n */\nexport async function deleteAbandonedCheckout(\n  abandonedCheckoutId: string\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    abandonedCheckoutId: abandonedCheckoutId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1AbandonedCheckout.deleteAbandonedCheckout(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { abandonedCheckoutId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['abandonedCheckoutId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Creates a query to retrieve a list of abandoned checkouts.\n *\n * The `queryAbandonedCheckouts()` function builds a query to retrieve a list of abandoned checkouts and returns a `ResultsQueryBuilder` object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n *\n * You can refine the query by chaining `ResultsQueryBuilder` functions onto the query. `ResultsQueryBuilder` functions enable you to sort, filter, and control the results `queryAbandonedCheckouts()` returns.\n * @public\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @applicableIdentity APP\n * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.QueryAbandonedCheckouts\n */\nexport function queryAbandonedCheckouts(): AbandonedCheckoutsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    AbandonedCheckout,\n    'CURSOR',\n    QueryAbandonedCheckoutsRequest,\n    QueryAbandonedCheckoutsResponse\n  >({\n    func: async (payload: QueryAbandonedCheckoutsRequest) => {\n      const reqOpts =\n        ambassadorWixEcomV1AbandonedCheckout.queryAbandonedCheckouts(payload);\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryAbandonedCheckoutsRequest['query']) => {\n      const args = [query, {}] as [QueryAbandonedCheckoutsRequest['query'], {}];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryAbandonedCheckoutsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [])\n      );\n\n      return {\n        items: transformedData?.abandonedCheckouts,\n        pagingMetadata: transformedData?.metadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\ninterface QueryCursorResult {\n  cursors: CommonCursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface AbandonedCheckoutsQueryResult extends QueryCursorResult {\n  items: AbandonedCheckout[];\n  query: AbandonedCheckoutsQueryBuilder;\n  next: () => Promise<AbandonedCheckoutsQueryResult>;\n  prev: () => Promise<AbandonedCheckoutsQueryResult>;\n}\n\nexport interface AbandonedCheckoutsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  eq: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  ne: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  ge: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  gt: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  le: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   */\n  lt: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   */\n  startsWith: (\n    propertyName:\n      | '_id'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: string\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   */\n  hasSome: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any[]\n  ) => AbandonedCheckoutsQueryBuilder;\n  in: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: any\n  ) => AbandonedCheckoutsQueryBuilder;\n  exists: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email',\n    value: boolean\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments. */\n  ascending: (\n    ...propertyNames: Array<\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email'\n    >\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments. */\n  descending: (\n    ...propertyNames: Array<\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'status'\n      | 'buyerInfo.visitorId'\n      | 'buyerInfo.memberId'\n      | 'buyerInfo.userId'\n      | 'buyerInfo.contactId'\n      | 'buyerInfo.email'\n    >\n  ) => AbandonedCheckoutsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object. */\n  limit: (limit: number) => AbandonedCheckoutsQueryBuilder;\n  /** @param cursor - A pointer to specific record */\n  skipTo: (cursor: string) => AbandonedCheckoutsQueryBuilder;\n  find: () => Promise<AbandonedCheckoutsQueryResult>;\n}\n\n/**\n * Retrieves a list of abandoned checkouts, given the provided paging, filtering, search details and sorting. Up to 100 abandoned checkouts can be returned per request.\n * @param search - Search options.\n * @public\n * @requiredField search\n * @permissionId ECOM.ABANDONED_CHECKOUT_READ\n * @applicableIdentity APP\n * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.SearchAbandonedCheckouts\n */\nexport async function searchAbandonedCheckouts(\n  search: AbandonedCheckoutSearch\n): Promise<\n  NonNullablePaths<\n    SearchAbandonedCheckoutsResponse,\n    | `abandonedCheckouts`\n    | `abandonedCheckouts.${number}._id`\n    | `abandonedCheckouts.${number}.status`\n    | `abandonedCheckouts.${number}.buyerInfo.visitorId`\n    | `abandonedCheckouts.${number}.buyerInfo.memberId`\n    | `abandonedCheckouts.${number}.buyerInfo.userId`\n    | `abandonedCheckouts.${number}.contactDetails.vatId._id`\n    | `abandonedCheckouts.${number}.contactDetails.vatId.type`\n    | `abandonedCheckouts.${number}.currency`\n    | `abandonedCheckouts.${number}.totalPrice.amount`\n    | `abandonedCheckouts.${number}.totalPrice.convertedAmount`\n    | `abandonedCheckouts.${number}.totalPrice.formattedAmount`\n    | `abandonedCheckouts.${number}.totalPrice.formattedConvertedAmount`\n    | `abandonedCheckouts.${number}.checkoutUrl`,\n    6\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ search: search });\n\n  const reqOpts =\n    ambassadorWixEcomV1AbandonedCheckout.searchAbandonedCheckouts(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { search: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['search']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface AbandonedCheckoutSearchSpec extends SearchSpec {\n  searchable: [\n    'buyerInfo.email',\n    'contactDetails.firstName',\n    'contactDetails.lastName'\n  ];\n  paging: 'cursor';\n  wql: [\n    {\n      operators: ['$hasAll', '$hasSome'];\n      fields: ['activities.type'];\n      sort: 'NONE';\n    },\n    {\n      operators: '*';\n      fields: ['contactDetails.firstName', 'contactDetails.lastName'];\n      sort: 'NONE';\n    },\n    {\n      operators: '*';\n      fields: ['_createdDate', '_updatedDate'];\n      sort: 'BOTH';\n    },\n    {\n      operators: ['$eq', '$in', '$ne', '$nin'];\n      fields: [\n        '_id',\n        'buyerInfo.contactId',\n        'buyerInfo.email',\n        'buyerInfo.memberId',\n        'buyerInfo.userId',\n        'buyerInfo.visitorId',\n        'status'\n      ];\n      sort: 'NONE';\n    }\n  ];\n}\n\nexport type CommonSearchWithEntityContext = SearchSdkType<\n  AbandonedCheckout,\n  AbandonedCheckoutSearchSpec\n>;\nexport type AbandonedCheckoutSearch = {\n  /** \n  Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not filter or sort.  \n  */\n  cursorPaging?: {\n    /** \n  Maximum number of items to return in the results. \n  @max: 100 \n  */\n    limit?:\n      | NonNullable<CommonSearchWithEntityContext['cursorPaging']>['limit']\n      | null;\n    /** \n  Pointer to the next or previous page in the list of results.\n\n  Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n  Not relevant for the first request.  \n  */\n    cursor?:\n      | NonNullable<CommonSearchWithEntityContext['cursorPaging']>['cursor']\n      | null;\n  };\n  /** \n  Filter object.\n\n  Learn more about [filtering](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#filters).  \n  */\n  filter?: CommonSearchWithEntityContext['filter'] | null;\n  /** \n  Sort object.\n\n  Learn more about [sorting](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#sorting). \n  @maxSize: 4 \n  */\n  sort?: {\n    /** \n  Name of the field to sort by. \n  @maxLength: 40 \n  */\n    fieldName?: NonNullable<\n      CommonSearchWithEntityContext['sort']\n    >[number]['fieldName'];\n    /** \n  Sort order.  \n  */\n    order?: NonNullable<CommonSearchWithEntityContext['sort']>[number]['order'];\n  }[];\n  /** \n  Free text to match in searchable fields.  \n  */\n  search?: {\n    /** \n  Search mode. Defines the search logic for combining multiple terms in the `expression`.  \n  */\n    mode?: NonNullable<CommonSearchWithEntityContext['search']>['mode'];\n    /** \n  Search term or expression. \n  @maxLength: 100 \n  */\n    expression?:\n      | NonNullable<CommonSearchWithEntityContext['search']>['expression']\n      | null;\n    /** \n  Fields to search in. If the array is empty, all searchable fields are searched. Use dot notation to specify a JSON path. For example, `order.address.streetName`. \n  @maxLength: 100,\n  @maxSize: 20 \n  */\n    fields?: NonNullable<CommonSearchWithEntityContext['search']>['fields'];\n    /** \n  Whether to enable the search function to use an algorithm to automatically find results that are close to the search expression, such as typos and declensions.  \n  */\n    fuzzy?: NonNullable<CommonSearchWithEntityContext['search']>['fuzzy'];\n  };\n};\n\n/**\n * Adds a new abandoned checkout activity.\n * @param abandonedCheckoutId - Id of the abandoned checkout to update\n * @internal\n * @documentationMaturity preview\n * @requiredField abandonedCheckoutId\n * @permissionId ECOM.ABANDONED_CHECKOUT_UPDATE\n * @applicableIdentity APP\n * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.AddAbandonedCheckoutActivity\n */\nexport async function addAbandonedCheckoutActivity(\n  abandonedCheckoutId: string,\n  options?: AddAbandonedCheckoutActivityOptions\n): Promise<\n  NonNullablePaths<\n    AddAbandonedCheckoutActivityResponse,\n    | `abandonedCheckout._id`\n    | `abandonedCheckout.status`\n    | `abandonedCheckout.buyerInfo.visitorId`\n    | `abandonedCheckout.buyerInfo.memberId`\n    | `abandonedCheckout.buyerInfo.userId`\n    | `abandonedCheckout.contactDetails.vatId._id`\n    | `abandonedCheckout.contactDetails.vatId.type`\n    | `abandonedCheckout.currency`\n    | `abandonedCheckout.totalPrice.amount`\n    | `abandonedCheckout.totalPrice.convertedAmount`\n    | `abandonedCheckout.totalPrice.formattedAmount`\n    | `abandonedCheckout.totalPrice.formattedConvertedAmount`\n    | `abandonedCheckout.activities`\n    | `abandonedCheckout.activities.${number}.type`\n    | `abandonedCheckout.checkoutUrl`,\n    5\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    abandonedCheckoutId: abandonedCheckoutId,\n    activityType: options?.activityType,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1AbandonedCheckout.addAbandonedCheckoutActivity(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          abandonedCheckoutId: '$[0]',\n          activityType: '$[1].activityType',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['abandonedCheckoutId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface AddAbandonedCheckoutActivityOptions {\n  /** The type of the activity to add */\n  activityType?: ActivityTypeWithLiterals;\n}\n\n/**\n * Redirects an abandoned checkout to its checkout page.\n * @param abandonedCheckoutId - ID of the abandoned checkout.\n * @param metasiteId - Metasite ID of the site associated with the abandoned checkout.\n * @public\n * @requiredField abandonedCheckoutId\n * @requiredField metasiteId\n * @fqn wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.RedirectToCheckout\n */\nexport async function redirectToCheckout(\n  abandonedCheckoutId: string,\n  metasiteId: string\n): Promise<\n  NonNullablePaths<\n    RawHttpResponse,\n    `body` | `headers` | `headers.${number}.key` | `headers.${number}.value`,\n    4\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    abandonedCheckoutId: abandonedCheckoutId,\n    metasiteId: metasiteId,\n  });\n\n  const reqOpts =\n    ambassadorWixEcomV1AbandonedCheckout.redirectToCheckout(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          abandonedCheckoutId: '$[0]',\n          metasiteId: '$[1]',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['abandonedCheckoutId', 'metasiteId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformRESTBytesToSDKBytes } from '@wix/sdk-runtime/transformations/bytes';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/abandoned-checkout',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/abandoned-checkout',\n        destPath: '/v1/abandoned-checkout',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/ecom/v1/abandoned-checkout',\n        destPath: '/v1/abandoned-checkout',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_abandoned-checkouts';\n\n/** Retrieves an abandoned checkout. */\nexport function getAbandonedCheckout(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getAbandonedCheckout({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.abandoned_checkout',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.GetAbandonedCheckout',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({\n        protoPath: '/v1/abandoned-checkout/{abandonedCheckoutId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'abandonedCheckout.createdDate' },\n              { path: 'abandonedCheckout.updatedDate' },\n              { path: 'abandonedCheckout.checkoutRecoveredDate' },\n              { path: 'abandonedCheckout.activities.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getAbandonedCheckout;\n}\n\n/** Deletes an abandoned checkout. */\nexport function deleteAbandonedCheckout(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteAbandonedCheckout({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.abandoned_checkout',\n      method: 'DELETE' as any,\n      methodFqn:\n        'wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.DeleteAbandonedCheckout',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({\n        protoPath: '/v1/abandoned-checkout/{abandonedCheckoutId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteAbandonedCheckout;\n}\n\n/**\n * Creates a query to retrieve a list of abandoned checkouts.\n *\n * The `queryAbandonedCheckouts()` function builds a query to retrieve a list of abandoned checkouts and returns a `ResultsQueryBuilder` object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n *\n * You can refine the query by chaining `ResultsQueryBuilder` functions onto the query. `ResultsQueryBuilder` functions enable you to sort, filter, and control the results `queryAbandonedCheckouts()` returns.\n */\nexport function queryAbandonedCheckouts(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryAbandonedCheckouts({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.abandoned_checkout',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.QueryAbandonedCheckouts',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({\n        protoPath: '/v1/abandoned-checkout/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.createdDate' },\n              { path: 'results.updatedDate' },\n              { path: 'results.checkoutRecoveredDate' },\n              { path: 'results.activities.createdDate' },\n              { path: 'abandonedCheckouts.createdDate' },\n              { path: 'abandonedCheckouts.updatedDate' },\n              { path: 'abandonedCheckouts.checkoutRecoveredDate' },\n              { path: 'abandonedCheckouts.activities.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryAbandonedCheckouts;\n}\n\n/** Retrieves a list of abandoned checkouts, given the provided paging, filtering, search details and sorting. Up to 100 abandoned checkouts can be returned per request. */\nexport function searchAbandonedCheckouts(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __searchAbandonedCheckouts({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.abandoned_checkout',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.SearchAbandonedCheckouts',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({\n        protoPath: '/v1/abandoned-checkout/search',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'abandonedCheckouts.createdDate' },\n              { path: 'abandonedCheckouts.updatedDate' },\n              { path: 'abandonedCheckouts.checkoutRecoveredDate' },\n              { path: 'abandonedCheckouts.activities.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __searchAbandonedCheckouts;\n}\n\n/** Adds a new abandoned checkout activity. */\nexport function addAbandonedCheckoutActivity(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __addAbandonedCheckoutActivity({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.abandoned_checkout',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.AddAbandonedCheckoutActivity',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({\n        protoPath: '/v1/abandoned-checkouts/{abandonedCheckoutId}/add-activity',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'abandonedCheckout.createdDate' },\n              { path: 'abandonedCheckout.updatedDate' },\n              { path: 'abandonedCheckout.checkoutRecoveredDate' },\n              { path: 'abandonedCheckout.activities.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __addAbandonedCheckoutActivity;\n}\n\n/** Redirects an abandoned checkout to its checkout page. */\nexport function redirectToCheckout(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __redirectToCheckout({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.abandoned_checkout',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecom.abandoned_checkout.api.v1.AbandonedCheckoutService.RedirectToCheckout',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcomAbandonedCheckoutApiV1AbandonedCheckoutServiceUrl({\n        protoPath:\n          '/v1/abandoned-checkout/{abandonedCheckoutId}/redirect-to-checkout',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTBytesToSDKBytes,\n            paths: [{ path: 'body' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __redirectToCheckout;\n}\n","import {\n  getAbandonedCheckout as publicGetAbandonedCheckout,\n  deleteAbandonedCheckout as publicDeleteAbandonedCheckout,\n  queryAbandonedCheckouts as publicQueryAbandonedCheckouts,\n  searchAbandonedCheckouts as publicSearchAbandonedCheckouts,\n  addAbandonedCheckoutActivity as publicAddAbandonedCheckoutActivity,\n  redirectToCheckout as publicRedirectToCheckout,\n} from './ecom-v1-abandoned-checkout-abandoned-checkouts.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onAbandonedCheckoutCreated as publicOnAbandonedCheckoutCreated } from './ecom-v1-abandoned-checkout-abandoned-checkouts.public.js';\nimport { onAbandonedCheckoutDeleted as publicOnAbandonedCheckoutDeleted } from './ecom-v1-abandoned-checkout-abandoned-checkouts.public.js';\nimport { onAbandonedCheckoutRecovered as publicOnAbandonedCheckoutRecovered } from './ecom-v1-abandoned-checkout-abandoned-checkouts.public.js';\nimport { onAbandonedCheckoutUpdated as publicOnAbandonedCheckoutUpdated } from './ecom-v1-abandoned-checkout-abandoned-checkouts.public.js';\n\nexport const getAbandonedCheckout: MaybeContext<\n  BuildRESTFunction<typeof publicGetAbandonedCheckout> &\n    typeof publicGetAbandonedCheckout\n> = /*#__PURE__*/ createRESTModule(publicGetAbandonedCheckout);\nexport const deleteAbandonedCheckout: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteAbandonedCheckout> &\n    typeof publicDeleteAbandonedCheckout\n> = /*#__PURE__*/ createRESTModule(publicDeleteAbandonedCheckout);\nexport const queryAbandonedCheckouts: MaybeContext<\n  BuildRESTFunction<typeof publicQueryAbandonedCheckouts> &\n    typeof publicQueryAbandonedCheckouts\n> = /*#__PURE__*/ createRESTModule(publicQueryAbandonedCheckouts);\nexport const searchAbandonedCheckouts: MaybeContext<\n  BuildRESTFunction<typeof publicSearchAbandonedCheckouts> &\n    typeof publicSearchAbandonedCheckouts\n> = /*#__PURE__*/ createRESTModule(publicSearchAbandonedCheckouts);\n/** @internal */\nexport const addAbandonedCheckoutActivity: MaybeContext<\n  BuildRESTFunction<typeof publicAddAbandonedCheckoutActivity> &\n    typeof publicAddAbandonedCheckoutActivity\n> = /*#__PURE__*/ createRESTModule(publicAddAbandonedCheckoutActivity);\nexport const redirectToCheckout: MaybeContext<\n  BuildRESTFunction<typeof publicRedirectToCheckout> &\n    typeof publicRedirectToCheckout\n> = /*#__PURE__*/ createRESTModule(publicRedirectToCheckout);\n/**\n * Triggered when an abandoned checkout is created.\n */\nexport const onAbandonedCheckoutCreated: BuildEventDefinition<\n  typeof publicOnAbandonedCheckoutCreated\n> &\n  typeof publicOnAbandonedCheckoutCreated = createEventModule(\n  publicOnAbandonedCheckoutCreated\n);\n/**\n * Triggerred when an abandoned checkout is deleted.\n */\nexport const onAbandonedCheckoutDeleted: BuildEventDefinition<\n  typeof publicOnAbandonedCheckoutDeleted\n> &\n  typeof publicOnAbandonedCheckoutDeleted = createEventModule(\n  publicOnAbandonedCheckoutDeleted\n);\n/**\n * Triggered when an abandoned checkout is recovered.\n */\nexport const onAbandonedCheckoutRecovered: BuildEventDefinition<\n  typeof publicOnAbandonedCheckoutRecovered\n> &\n  typeof publicOnAbandonedCheckoutRecovered = createEventModule(\n  publicOnAbandonedCheckoutRecovered\n);\n/**\n * Triggered when an abandoned checkout is updated.\n */\nexport const onAbandonedCheckoutUpdated: BuildEventDefinition<\n  typeof publicOnAbandonedCheckoutUpdated\n> &\n  typeof publicOnAbandonedCheckoutUpdated = createEventModule(\n  publicOnAbandonedCheckoutUpdated\n);\n\nexport {\n  ActivityType,\n  Status,\n  VatType,\n  Identity,\n  SortOrder,\n  CommonSortOrder,\n  Mode,\n  WebhookIdentityType,\n} from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';\nexport {\n  AbandonedCheckout,\n  V1BuyerInfo,\n  V1BuyerInfoIdOneOf,\n  FullAddressContactDetails,\n  VatId,\n  MultiCurrencyPrice,\n  Activity,\n  CartAbandonedEvent,\n  BuyerInfo,\n  Totals,\n  CartRecoveredEvent,\n  AbandonedCheckoutRecovered,\n  GetAbandonedCheckoutRequest,\n  GetAbandonedCheckoutResponse,\n  DeleteAbandonedCheckoutRequest,\n  DeleteAbandonedCheckoutResponse,\n  QueryAbandonedCheckoutsRequest,\n  QueryV2,\n  QueryV2PagingMethodOneOf,\n  Sorting,\n  Paging,\n  CursorPaging,\n  QueryAbandonedCheckoutsResponse,\n  PagingMetadataV2,\n  Cursors,\n  SearchAbandonedCheckoutsRequest,\n  Search,\n  SearchPagingMethodOneOf,\n  CommonSorting,\n  SearchDetails,\n  CommonPaging,\n  CommonCursorPaging,\n  SearchAbandonedCheckoutsResponse,\n  CommonPagingMetadataV2,\n  CommonCursors,\n  AddAbandonedCheckoutActivityRequest,\n  AddAbandonedCheckoutActivityResponse,\n  Task,\n  TaskKey,\n  TaskAction,\n  TaskActionActionOneOf,\n  Complete,\n  Cancel,\n  Reschedule,\n  RedirectToCheckoutRequest,\n  RawHttpResponse,\n  HeadersEntry,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  AbandonedCheckoutCreatedEnvelope,\n  AbandonedCheckoutDeletedEnvelope,\n  AbandonedCheckoutRecoveredEnvelope,\n  AbandonedCheckoutUpdatedEnvelope,\n  AbandonedCheckoutsQueryResult,\n  AbandonedCheckoutsQueryBuilder,\n  AbandonedCheckoutSearchSpec,\n  AddAbandonedCheckoutActivityOptions,\n} from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';\nexport {\n  ActivityTypeWithLiterals,\n  StatusWithLiterals,\n  VatTypeWithLiterals,\n  IdentityWithLiterals,\n  SortOrderWithLiterals,\n  CommonSortOrderWithLiterals,\n  ModeWithLiterals,\n  WebhookIdentityTypeWithLiterals,\n  CommonSearchWithEntityContext,\n  AbandonedCheckoutSearch,\n} from './ecom-v1-abandoned-checkout-abandoned-checkouts.universal.js';\n"],"mappings":"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","names":["renameKeysFromRESTResponseToSDKResponse","transformRESTTimestampToSDKTimestamp","transformPaths","payload","transformPaths","ActivityType","Status","VatType","Identity","SortOrder","CommonSortOrder","Mode","WebhookIdentityType","getAbandonedCheckout","deleteAbandonedCheckout","queryAbandonedCheckouts","searchAbandonedCheckouts","addAbandonedCheckoutActivity","redirectToCheckout","getAbandonedCheckout","deleteAbandonedCheckout","queryAbandonedCheckouts","searchAbandonedCheckouts","addAbandonedCheckoutActivity","redirectToCheckout","renameKeysFromRESTResponseToSDKResponse","transformPaths","transformRESTTimestampToSDKTimestamp","getAbandonedCheckout","deleteAbandonedCheckout","queryAbandonedCheckouts","searchAbandonedCheckouts","addAbandonedCheckoutActivity","redirectToCheckout","onAbandonedCheckoutCreated","onAbandonedCheckoutDeleted","onAbandonedCheckoutRecovered","onAbandonedCheckoutUpdated"]}