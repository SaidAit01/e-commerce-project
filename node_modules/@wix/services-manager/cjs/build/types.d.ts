import { GetService, ServiceBinding, ServiceDefinition, ServiceFactory, ServiceFactoryConfig } from '@wix/services-definitions';
export type * from '@wix/services-definitions';
export type ServicesRegistrar = {
    registeredServices: ServiceBinding<any, any>[];
    addService<T extends ServiceDefinition<any, any> = any, Impl extends ServiceFactory<T, any> = any>(definition: T, impl: Impl, config?: ServiceFactoryConfig<Impl>): ServicesRegistrar;
};
export type ServicesManager = {
    getService: GetService;
    hasService<T extends ServiceDefinition<any, any>>(definition: T): boolean;
    addService<T extends ServiceDefinition<any, any>, Impl extends ServiceFactory<T, any>>(definition: T, impl: Impl, config: ServiceFactoryConfig<Impl>): void;
    addService<T extends ServiceDefinition<any, any>, Impl extends ServiceFactory<T, any>>(definition: T, impl: Impl): void;
    addServices(servicesBindings: ServicesRegistrar): void;
};
