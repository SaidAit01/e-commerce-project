"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  createTaxRegion: () => createTaxRegion2,
  deleteTaxRegion: () => deleteTaxRegion2,
  getTaxRegion: () => getTaxRegion2,
  queryTaxRegions: () => queryTaxRegions2,
  updateTaxRegion: () => updateTaxRegion2
});
module.exports = __toCommonJS(meta_exports);

// src/billing-v1-tax-region-tax-regions.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixBillingV1TaxRegionsServiceUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/billing/v1/tax-regions",
        destPath: "/v1/tax-regions"
      },
      {
        srcPath: "/billing/v1/bulk/tax-regions",
        destPath: "/v1/bulk/tax-regions"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/billing/v1/tax-regions",
        destPath: "/v1/tax-regions"
      },
      {
        srcPath: "/billing/v1/bulk/tax-regions",
        destPath: "/v1/bulk/tax-regions"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tax-regions";
function createTaxRegion(payload) {
  function __createTaxRegion({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "taxRegion.createdDate" },
          { path: "taxRegion.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "POST",
      methodFqn: "wix.billing.v1.TaxRegionsService.CreateTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegion.createdDate" },
            { path: "taxRegion.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createTaxRegion;
}
function getTaxRegion(payload) {
  function __getTaxRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "GET",
      methodFqn: "wix.billing.v1.TaxRegionsService.GetTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/{taxRegionId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegion.createdDate" },
            { path: "taxRegion.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getTaxRegion;
}
function updateTaxRegion(payload) {
  function __updateTaxRegion({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "taxRegion.createdDate" },
          { path: "taxRegion.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "PATCH",
      methodFqn: "wix.billing.v1.TaxRegionsService.UpdateTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/{taxRegion.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegion.createdDate" },
            { path: "taxRegion.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateTaxRegion;
}
function deleteTaxRegion(payload) {
  function __deleteTaxRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "DELETE",
      methodFqn: "wix.billing.v1.TaxRegionsService.DeleteTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/{taxRegionId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteTaxRegion;
}
function queryTaxRegions(payload) {
  function __queryTaxRegions({ host }) {
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "POST",
      methodFqn: "wix.billing.v1.TaxRegionsService.QueryTaxRegions",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegions.createdDate" },
            { path: "taxRegions.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryTaxRegions;
}

// src/billing-v1-tax-region-tax-regions.meta.ts
function createTaxRegion2() {
  const payload = {};
  const getRequestOptions = createTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tax-regions",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTaxRegion2() {
  const payload = { taxRegionId: ":taxRegionId" };
  const getRequestOptions = getTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/tax-regions/{taxRegionId}",
    pathParams: { taxRegionId: "taxRegionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateTaxRegion2() {
  const payload = { taxRegion: { id: ":taxRegionId" } };
  const getRequestOptions = updateTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/tax-regions/{taxRegion.id}",
    pathParams: { taxRegionId: "taxRegionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteTaxRegion2() {
  const payload = { taxRegionId: ":taxRegionId" };
  const getRequestOptions = deleteTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/tax-regions/{taxRegionId}",
    pathParams: { taxRegionId: "taxRegionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryTaxRegions2() {
  const payload = {};
  const getRequestOptions = queryTaxRegions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tax-regions/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createTaxRegion,
  deleteTaxRegion,
  getTaxRegion,
  queryTaxRegions,
  updateTaxRegion
});
//# sourceMappingURL=meta.js.map