// src/billing-v1-tax-region-tax-regions.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixBillingV1TaxRegionsServiceUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/billing/v1/tax-regions",
        destPath: "/v1/tax-regions"
      },
      {
        srcPath: "/billing/v1/bulk/tax-regions",
        destPath: "/v1/bulk/tax-regions"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/billing/v1/tax-regions",
        destPath: "/v1/tax-regions"
      },
      {
        srcPath: "/billing/v1/bulk/tax-regions",
        destPath: "/v1/bulk/tax-regions"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tax-regions";
function createTaxRegion(payload) {
  function __createTaxRegion({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "taxRegion.createdDate" },
          { path: "taxRegion.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "POST",
      methodFqn: "wix.billing.v1.TaxRegionsService.CreateTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegion.createdDate" },
            { path: "taxRegion.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createTaxRegion;
}
function getTaxRegion(payload) {
  function __getTaxRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "GET",
      methodFqn: "wix.billing.v1.TaxRegionsService.GetTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/{taxRegionId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegion.createdDate" },
            { path: "taxRegion.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getTaxRegion;
}
function updateTaxRegion(payload) {
  function __updateTaxRegion({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "taxRegion.createdDate" },
          { path: "taxRegion.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "PATCH",
      methodFqn: "wix.billing.v1.TaxRegionsService.UpdateTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/{taxRegion.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegion.createdDate" },
            { path: "taxRegion.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateTaxRegion;
}
function deleteTaxRegion(payload) {
  function __deleteTaxRegion({ host }) {
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "DELETE",
      methodFqn: "wix.billing.v1.TaxRegionsService.DeleteTaxRegion",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/{taxRegionId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteTaxRegion;
}
function queryTaxRegions(payload) {
  function __queryTaxRegions({ host }) {
    const metadata = {
      entityFqdn: "wix.billing.v1.tax_region",
      method: "POST",
      methodFqn: "wix.billing.v1.TaxRegionsService.QueryTaxRegions",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxRegionsServiceUrl({
        protoPath: "/v1/tax-regions/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "taxRegions.createdDate" },
            { path: "taxRegions.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryTaxRegions;
}

// src/billing-v1-tax-region-tax-regions.meta.ts
function createTaxRegion2() {
  const payload = {};
  const getRequestOptions = createTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tax-regions",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTaxRegion2() {
  const payload = { taxRegionId: ":taxRegionId" };
  const getRequestOptions = getTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/tax-regions/{taxRegionId}",
    pathParams: { taxRegionId: "taxRegionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateTaxRegion2() {
  const payload = { taxRegion: { id: ":taxRegionId" } };
  const getRequestOptions = updateTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/tax-regions/{taxRegion.id}",
    pathParams: { taxRegionId: "taxRegionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteTaxRegion2() {
  const payload = { taxRegionId: ":taxRegionId" };
  const getRequestOptions = deleteTaxRegion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/tax-regions/{taxRegionId}",
    pathParams: { taxRegionId: "taxRegionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryTaxRegions2() {
  const payload = {};
  const getRequestOptions = queryTaxRegions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tax-regions/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  createTaxRegion2 as createTaxRegion,
  deleteTaxRegion2 as deleteTaxRegion,
  getTaxRegion2 as getTaxRegion,
  queryTaxRegions2 as queryTaxRegions,
  updateTaxRegion2 as updateTaxRegion
};
//# sourceMappingURL=meta.mjs.map