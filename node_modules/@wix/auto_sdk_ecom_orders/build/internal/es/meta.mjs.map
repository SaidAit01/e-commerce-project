{"version":3,"sources":["../../../src/ecom-v1-order-orders.http.ts","../../../src/ecom-v1-order-orders.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixEcomOrdersV1OrdersUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    _: [\n      {\n        srcPath: '/_api/ecom-orders',\n        destPath: '',\n      },\n      {\n        srcPath: '/_api/orders',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/ecom-orders',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/bulk/orders',\n        destPath: '/v1/bulk/orders',\n      },\n      {\n        srcPath: '/ecom/v1/orders',\n        destPath: '/v1/orders',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nfunction resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/payments-collector',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/ecom/v1/payments-collector',\n        destPath: '/v1/payments-collector',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/ecom/v1/payments-collector',\n        destPath: '/v1/payments-collector',\n      },\n      {\n        srcPath: '/_api/v1/payments-collector',\n        destPath: '/v1/payments-collector',\n      },\n      {\n        srcPath: '/v1/payments-collector',\n        destPath: '/v1/payments-collector',\n      },\n      {\n        srcPath: '/_api/payments-collector',\n        destPath: '/v1/payments-collector',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_orders';\n\n/**\n * Prepares payment collection for given ecom order. This is the first of 2-step process of payment collection.\n * Here we ensure that payment collection is possible for given order and store and prepare payment gateway order for future charge.\n * 2nd step is an actual charge of prepared payment gateway order. This could be done either\n * via Wix-Cashier's API (https://bo.wix.com/wix-docs/rest/wix-cashier/pay/charge/charge-for-order)\n * or using Cashier Payments Widget (https://github.com/wix-private/cashier-client/tree/master/packages/cashier-payments-widget)\n */\nexport function preparePaymentCollection(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __preparePaymentCollection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.PreparePaymentCollection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath:\n          '/v1/payments-collector/orders/{ecomOrderId}/prepare-payment-collection',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __preparePaymentCollection;\n}\n\n/**\n * Provides payment collectability status for given order. If payment collection is possible\n * response will contain collectable amount for given ecom order. If not - response will contain\n * reason why payment collection is not possible.\n */\nexport function getPaymentCollectabilityStatus(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getPaymentCollectabilityStatus({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.GetPaymentCollectabilityStatus',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath:\n          '/v1/payments-collector/orders/{ecomOrderId}/payment-collectability-status',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getPaymentCollectabilityStatus;\n}\n\n/**\n * Records and approves new manual payment with provided custom amount on given order.\n * Existing pending payments are ignored.\n * Custom amount is expected to be less or equal remaining amount to be paid on order (affected by approved payments, refunds and gift card payments)\n */\nexport function recordManuallyCollectedPayment(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __recordManuallyCollectedPayment({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.RecordManuallyCollectedPayment',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath: '/v1/payments-collector/orders/{orderId}/manual-payment',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __recordManuallyCollectedPayment;\n}\n\n/**\n * Marks the order as paid. `order.paymentStatus` field *eventually* changes to `PAID`.\n * In case the order already has an offline payment transaction associated with it\n * (usually when manual payment method is chosen at checkout) - This transaction will become approved.\n * In case the order has no payment transactions associated with it\n * (usually when the item is set to be paid offline after checkout or when an order is created from the backoffice) - A payment transaction\n * will be created and approved.\n */\nexport function paymentCollectionMarkOrderAsPaid(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __paymentCollectionMarkOrderAsPaid({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.MarkOrderAsPaid',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath: '/v1/payments-collector/orders/{ecomOrderId}/mark-as-paid',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __paymentCollectionMarkOrderAsPaid;\n}\n\n/** Marks multiple orders as paid. `order.paymentStatus` field *eventually* changes to `PAID`. */\nexport function paymentCollectionBulkMarkOrdersAsPaid(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __paymentCollectionBulkMarkOrdersAsPaid({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.BulkMarkOrdersAsPaid',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath: '/v1/bulk/payments-collector/mark-as-paid',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n              { path: 'results.item.purchasedDate' },\n              { path: 'results.item.lineItems.image.urlExpirationDate' },\n              { path: 'results.item.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'results.item.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'results.item.shippingInfo.logistics.deliverByDate' },\n              {\n                path: 'results.item.shippingInfo.logistics.deliveryTimeSlot.from',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.deliveryTimeSlot.to',\n              },\n              { path: 'results.item.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'results.item.lineItems.image.focalPoint.x' },\n              { path: 'results.item.lineItems.image.focalPoint.y' },\n              { path: 'results.item.lineItems.physicalProperties.weight' },\n              { path: 'results.item.billingInfo.address.geocode.latitude' },\n              { path: 'results.item.billingInfo.address.geocode.longitude' },\n              {\n                path: 'results.item.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'results.item.recipientInfo.address.geocode.latitude' },\n              { path: 'results.item.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __paymentCollectionBulkMarkOrdersAsPaid;\n}\n\n/** Checks whether this order can be refunded. */\nexport function getRefundabilityStatus(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getRefundabilityStatus({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.GetRefundabilityStatus',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath: '/v1/payments-collector/orders/{ecomOrderId}/refundability',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getRefundabilityStatus;\n}\n\n/**\n * Call this endpoint to create an order in the payment gateway system. The amount of the order would be either:\n * 1. An explicit amount provided in the request, or;\n * 2. If an explicit amount is not provided - the remaining amount to complete the payment of that eCom order.\n * As a result, an ID of the created payment gateway order would be returned.\n * You can then use Wix Payments APIs to approve that order or collect payment, which will eventually change the eCom order state (e.g mark it as paid).\n */\nexport function paymentCollectionCreatePaymentGatewayOrder(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __paymentCollectionCreatePaymentGatewayOrder({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.CreatePaymentGatewayOrder',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath:\n          '/v1/payments-collector/orders/{ecomOrderId}/create-payment-gateway-order',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __paymentCollectionCreatePaymentGatewayOrder;\n}\n\nexport function chargeMemberships(payload: object): RequestOptionsFactory<any> {\n  function __chargeMemberships({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'membershipCharges.serviceProperties.scheduledDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.ChargeMemberships',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath:\n          '/v1/payments-collector/orders/{ecomOrderId}/charge-membership',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __chargeMemberships;\n}\n\n/**\n * Calls corresponding payment providers and creates refund transactions for requested payments.\n * Updates order transactions based on refund results.\n * For requested payments with `TriggerRefundRequest.payments.external_refund = true` will not call payment providers and\n * will only update order transactions.\n */\nexport function triggerRefund(payload: object): RequestOptionsFactory<any> {\n  function __triggerRefund({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.TriggerRefund',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath: '/v1/payments-collector/orders/{ecomOrderId}/trigger-refund',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderTransactions.payments.createdDate' },\n              { path: 'orderTransactions.payments.updatedDate' },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate',\n              },\n              { path: 'orderTransactions.refunds.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __triggerRefund;\n}\n\n/**\n * Void authorized payments\n * Transaction statuses for related payments will be updated in async way\n */\nexport function voidAuthorizedPayments(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __voidAuthorizedPayments({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.VoidAuthorizedPayments',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath:\n          '/v1/payments-collector/orders/{ecomOrderId}/void-authorized-payments',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderTransactions.payments.createdDate' },\n              { path: 'orderTransactions.payments.updatedDate' },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate',\n              },\n              { path: 'orderTransactions.refunds.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __voidAuthorizedPayments;\n}\n\n/**\n * Capture authorized payments\n * Transaction statuses for related payments will be updated in async way\n */\nexport function captureAuthorizedPayments(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __captureAuthorizedPayments({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.ecom.orders.payments_collector.v1.PaymentsCollector.CaptureAuthorizedPayments',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersPaymentsCollectorV1PaymentsCollectorUrl({\n        protoPath:\n          '/v1/payments-collector/orders/{ecomOrderId}/capture-authorized-payments',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orderTransactions.payments.createdDate' },\n              { path: 'orderTransactions.payments.updatedDate' },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.authorizedDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.captures.createdDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.void.voidedDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.authorizationDetails.scheduledAction.executionDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.chargebacks.createdDate',\n              },\n              {\n                path: 'orderTransactions.payments.regularPaymentDetails.chargebacks.updatedDate',\n              },\n              { path: 'orderTransactions.refunds.createdDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __captureAuthorizedPayments;\n}\n\n/**\n * Retrieves an order.\n *\n *\n * The `getOrder()` function returns a Promise that resolves when the specified order is retrieved.\n *\n * To retrieve an order's payment and refund details, including amounts, payment methods, and payment statuses, pass the order ID to [`listTransactionsForSingleOrder( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/listtransactionsforsingleorder).\n */\nexport function getOrder(payload: object): RequestOptionsFactory<any> {\n  function __getOrder({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'GET' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.GetOrder',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getOrder;\n}\n\n/**\n * Retrieves a list of orders, given the provided paging, filtering, and sorting.\n *\n *\n * Search Orders runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n * - `filter: {\"status\": {\"$ne\": \"INITIALIZED\"}}` - other order statuses can be queried, but orders with `status: \"INITIALIZED\"` are never returned\n *\n * For field support for filters and sorting, see [Orders: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-e-commerce/orders/supported-filters-and-sorting).\n *\n * To learn about working with _Search_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language), and\n * [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function searchOrders(payload: object): RequestOptionsFactory<any> {\n  function __searchOrders({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.SearchOrders',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/search',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'orders.createdDate' },\n              { path: 'orders.updatedDate' },\n              { path: 'orders.purchasedDate' },\n              { path: 'orders.lineItems.image.urlExpirationDate' },\n              { path: 'orders.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'orders.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'orders.shippingInfo.logistics.deliverByDate' },\n              { path: 'orders.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'orders.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'orders.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'orders.lineItems.image.focalPoint.x' },\n              { path: 'orders.lineItems.image.focalPoint.y' },\n              { path: 'orders.lineItems.physicalProperties.weight' },\n              { path: 'orders.billingInfo.address.geocode.latitude' },\n              { path: 'orders.billingInfo.address.geocode.longitude' },\n              {\n                path: 'orders.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'orders.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'orders.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'orders.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'orders.recipientInfo.address.geocode.latitude' },\n              { path: 'orders.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __searchOrders;\n}\n\n/**\n * Creates an order.\n *\n *\n * The `createOrder()` function returns a Promise that resolves when the order is created.\n *\n * > **Notes:**\n * > + If an item is digital - `lineItems[i].itemType.preset: DIGITAL` - then `lineItems[i].digitalFile` must be provided.\n * > + If `lineItems[i].id` is passed, it must be either a valid GUID, or empty.\n */\nexport function createOrder(payload: object): RequestOptionsFactory<any> {\n  function __createOrder({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'order.createdDate' },\n          { path: 'order.updatedDate' },\n          { path: 'order.purchasedDate' },\n          { path: 'order.lineItems.image.urlExpirationDate' },\n          { path: 'order.lineItems.digitalFile.expirationDate' },\n          {\n            path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n          },\n          { path: 'order.shippingInfo.logistics.deliverByDate' },\n          { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n          { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n          { path: 'order.activities.createdDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'order.lineItems.image.focalPoint.x' },\n          { path: 'order.lineItems.image.focalPoint.y' },\n          { path: 'order.lineItems.physicalProperties.weight' },\n          { path: 'order.billingInfo.address.geocode.latitude' },\n          { path: 'order.billingInfo.address.geocode.longitude' },\n          {\n            path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n          },\n          {\n            path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n          },\n          {\n            path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n          },\n          {\n            path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n          },\n          { path: 'order.recipientInfo.address.geocode.latitude' },\n          { path: 'order.recipientInfo.address.geocode.longitude' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.CreateOrder',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createOrder;\n}\n\n/**\n * Updates an order.\n *\n *\n * The `updateOrder()` function returns a Promise that resolves when the specified order's information is updated.\n *\n * Currently, the following fields can be updated:\n * + `order.buyerInfo.email`\n * + `order.buyerLanguage`\n * + `order.weightUnit`\n * + `order.billingInfo.address`\n * + `order.billingInfo.contactDetails`\n * + `order.archived`\n * + `order.attributionSource`\n * + `order.seenByAHuman`\n * + `order.recipientInfo.address`\n * + `order.recipientInfo.contactDetails`\n * + `order.shippingInfo.logistics.shippingDestination.address`\n * + `order.shippingInfo.logistics.shippingDestination.contactDetails`\n *\n * To update a field's value, include the new value in the `order` object in the method parameters.\n * To remove a field's value, pass `null`.\n *\n * > **Note:** Removing `buyerInfo` or `contactDetails` fields results in an error.\n *\n * To update an order's payment status, use [`updatePaymentStatus( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/updatepaymentstatus).\n */\nexport function updateOrder(payload: object): RequestOptionsFactory<any> {\n  function __updateOrder({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'order.createdDate' },\n          { path: 'order.updatedDate' },\n          { path: 'order.purchasedDate' },\n          { path: 'order.lineItems.image.urlExpirationDate' },\n          { path: 'order.lineItems.digitalFile.expirationDate' },\n          {\n            path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n          },\n          { path: 'order.shippingInfo.logistics.deliverByDate' },\n          { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n          { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n          { path: 'order.activities.createdDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'order.lineItems.image.focalPoint.x' },\n          { path: 'order.lineItems.image.focalPoint.y' },\n          { path: 'order.lineItems.physicalProperties.weight' },\n          { path: 'order.billingInfo.address.geocode.latitude' },\n          { path: 'order.billingInfo.address.geocode.longitude' },\n          {\n            path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n          },\n          {\n            path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n          },\n          {\n            path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n          },\n          {\n            path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n          },\n          { path: 'order.recipientInfo.address.geocode.latitude' },\n          { path: 'order.recipientInfo.address.geocode.longitude' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'PATCH' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.UpdateOrder',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{order.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateOrder;\n}\n\n/**\n * Updates up to 100 orders.\n *\n *\n * The `bulkUpdateOrders()` function returns a Promise that resolves when the specified orders' information is updated.\n *\n * Currently, the following fields can be updated:\n * + `order.buyerInfo.email`\n * + `order.buyerLanguage`\n * + `order.weightUnit`\n * + `order.billingInfo.address`\n * + `order.billingInfo.contactDetails`\n * + `order.archived`\n * + `order.attributionSource`\n * + `order.seenByAHuman`\n * + `order.recipientInfo.address`\n * + `order.recipientInfo.contactDetails`\n * + `order.shippingInfo.logistics.shippingDestination.address`\n * + `order.shippingInfo.logistics.shippingDestination.contactDetails`\n *\n * To update a field's value, include the new value in the `orders.order` object in the method parameters.\n * To remove a field's value, pass `null`.\n *\n * > **Note:** Removing `buyerInfo` or `contactDetails` fields results in an error.\n *\n * To update an order's payment status, use [`updatePaymentStatus( )`](https://www.wix.com/velo/reference/wix-ecom-backend/ordertransactions/updatepaymentstatus).\n */\nexport function bulkUpdateOrders(payload: object): RequestOptionsFactory<any> {\n  function __bulkUpdateOrders({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'orders.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'orders.order.createdDate' },\n          { path: 'orders.order.updatedDate' },\n          { path: 'orders.order.purchasedDate' },\n          { path: 'orders.order.lineItems.image.urlExpirationDate' },\n          { path: 'orders.order.lineItems.digitalFile.expirationDate' },\n          {\n            path: 'orders.order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n          },\n          { path: 'orders.order.shippingInfo.logistics.deliverByDate' },\n          { path: 'orders.order.shippingInfo.logistics.deliveryTimeSlot.from' },\n          { path: 'orders.order.shippingInfo.logistics.deliveryTimeSlot.to' },\n          { path: 'orders.order.activities.createdDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'orders.order.lineItems.image.focalPoint.x' },\n          { path: 'orders.order.lineItems.image.focalPoint.y' },\n          { path: 'orders.order.lineItems.physicalProperties.weight' },\n          { path: 'orders.order.billingInfo.address.geocode.latitude' },\n          { path: 'orders.order.billingInfo.address.geocode.longitude' },\n          {\n            path: 'orders.order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n          },\n          {\n            path: 'orders.order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n          },\n          {\n            path: 'orders.order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n          },\n          {\n            path: 'orders.order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n          },\n          { path: 'orders.order.recipientInfo.address.geocode.latitude' },\n          { path: 'orders.order.recipientInfo.address.geocode.longitude' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.BulkUpdateOrders',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/bulk/orders/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n              { path: 'results.item.purchasedDate' },\n              { path: 'results.item.lineItems.image.urlExpirationDate' },\n              { path: 'results.item.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'results.item.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'results.item.shippingInfo.logistics.deliverByDate' },\n              {\n                path: 'results.item.shippingInfo.logistics.deliveryTimeSlot.from',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.deliveryTimeSlot.to',\n              },\n              { path: 'results.item.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'results.item.lineItems.image.focalPoint.x' },\n              { path: 'results.item.lineItems.image.focalPoint.y' },\n              { path: 'results.item.lineItems.physicalProperties.weight' },\n              { path: 'results.item.billingInfo.address.geocode.latitude' },\n              { path: 'results.item.billingInfo.address.geocode.longitude' },\n              {\n                path: 'results.item.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'results.item.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'results.item.recipientInfo.address.geocode.latitude' },\n              { path: 'results.item.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateOrders;\n}\n\nexport function commitDeltas(payload: object): RequestOptionsFactory<any> {\n  function __commitDeltas({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'changes.changedShippingInfo.logistics.deliverByDate' },\n          {\n            path: 'changes.changedShippingInfo.logistics.deliveryTimeSlot.from',\n          },\n          { path: 'changes.changedShippingInfo.logistics.deliveryTimeSlot.to' },\n          { path: 'changes.lineItems.lineItem.image.urlExpirationDate' },\n          { path: 'changes.lineItems.lineItem.digitalFile.expirationDate' },\n          {\n            path: 'changes.lineItems.lineItem.subscriptionInfo.subscriptionSettings.startDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'changes.changedShippingInfo.logistics.shippingDestination.address.geocode.latitude',\n          },\n          {\n            path: 'changes.changedShippingInfo.logistics.shippingDestination.address.geocode.longitude',\n          },\n          {\n            path: 'changes.changedShippingInfo.logistics.pickupDetails.address.geocode.latitude',\n          },\n          {\n            path: 'changes.changedShippingInfo.logistics.pickupDetails.address.geocode.longitude',\n          },\n          { path: 'changes.changedBillingInfo.address.geocode.latitude' },\n          { path: 'changes.changedBillingInfo.address.geocode.longitude' },\n          { path: 'changes.changedRecipientInfo.address.geocode.latitude' },\n          { path: 'changes.changedRecipientInfo.address.geocode.longitude' },\n          { path: 'changes.lineItems.lineItem.physicalProperties.weight' },\n          { path: 'changes.lineItems.lineItem.image.focalPoint.x' },\n          { path: 'changes.lineItems.lineItem.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.CommitDeltas',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}/commit-deltas',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __commitDeltas;\n}\n\n/** @deprecated Will be removed on 2024-02-15. */\nexport function updateOrderLineItem(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateOrderLineItem({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'lineItem.image.urlExpirationDate' },\n          { path: 'lineItem.digitalFile.expirationDate' },\n          { path: 'lineItem.subscriptionInfo.subscriptionSettings.startDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'lineItem.image.focalPoint.x' },\n          { path: 'lineItem.image.focalPoint.y' },\n          { path: 'lineItem.physicalProperties.weight' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'PATCH' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.UpdateOrderLineItem',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}/line-item/{lineItem.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateOrderLineItem;\n}\n\n/**\n * Adds a merchant comment to an order.\n * > **Note:** Activities with type CustomActivity not supported\n * @deprecated It has been replaced with com.wix.ecom.orders.v1.OrdersService.AddActivities(), and will be removed on 2024-11-01.\n */\nexport function addActivity(payload: object): RequestOptionsFactory<any> {\n  function __addActivity({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.AddActivity',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}/activities',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __addActivity;\n}\n\n/** Updates an order's activity. */\nexport function updateActivity(payload: object): RequestOptionsFactory<any> {\n  function __updateActivity({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'PATCH' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.UpdateActivity',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}/activities/{activityId}',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateActivity;\n}\n\n/**\n * Delete's an order's activity.\n *\n * Only custom activities and merchant comments can be deleted.\n */\nexport function deleteActivity(payload: object): RequestOptionsFactory<any> {\n  function __deleteActivity({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.DeleteActivity',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}/activities/{activityId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __deleteActivity;\n}\n\n/**\n * Cancels an order.\n *\n *\n * The `cancelOrder()` function returns a Promise that resolves when the specified order is canceled and the `order.status` field changes to `CANCELED`.\n */\nexport function cancelOrder(payload: object): RequestOptionsFactory<any> {\n  function __cancelOrder({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.CancelOrder',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{id}/cancel',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __cancelOrder;\n}\n\n/**\n * Updates order status.\n *\n * >CANCELED and REJECTED are final statuses. Update from either of those will fail.\n * >Updates into INITIALIZED are not supported.\n *\n * Approving order:\n * APPROVED status can be set while order has one of [INITIALIZED, PENDING] statuses.\n *\n * Approving an order which was created with CreateOrderRequest.settings.order_approval_strategy = PAYMENT_METHOD_SAVED\n * will cause an error.\n *\n * Setting PENDING status:\n * Only orders in INITIALIZED status can be updated into PENDING.\n */\nexport function updateOrderStatus(payload: object): RequestOptionsFactory<any> {\n  function __updateOrderStatus({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.UpdateOrderStatus',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/{orderId}/update-status',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'order.createdDate' },\n              { path: 'order.updatedDate' },\n              { path: 'order.purchasedDate' },\n              { path: 'order.lineItems.image.urlExpirationDate' },\n              { path: 'order.lineItems.digitalFile.expirationDate' },\n              {\n                path: 'order.lineItems.subscriptionInfo.subscriptionSettings.startDate',\n              },\n              { path: 'order.shippingInfo.logistics.deliverByDate' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.from' },\n              { path: 'order.shippingInfo.logistics.deliveryTimeSlot.to' },\n              { path: 'order.activities.createdDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'order.lineItems.image.focalPoint.x' },\n              { path: 'order.lineItems.image.focalPoint.y' },\n              { path: 'order.lineItems.physicalProperties.weight' },\n              { path: 'order.billingInfo.address.geocode.latitude' },\n              { path: 'order.billingInfo.address.geocode.longitude' },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.shippingDestination.address.geocode.longitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.latitude',\n              },\n              {\n                path: 'order.shippingInfo.logistics.pickupDetails.address.geocode.longitude',\n              },\n              { path: 'order.recipientInfo.address.geocode.latitude' },\n              { path: 'order.recipientInfo.address.geocode.longitude' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateOrderStatus;\n}\n\nexport function aggregateOrders(payload: object): RequestOptionsFactory<any> {\n  function __aggregateOrders({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.AggregateOrders',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/orders/aggregate',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __aggregateOrders;\n}\n\n/**\n * Synchronously update tags on multiple orders, by list of order IDs.\n *\n * > **Note:** If the same tag is passed to both the `assignTags` and `unassignTags` fields, it will be assigned.\n */\nexport function bulkUpdateOrderTags(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateOrderTags({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.ecom.v1.order',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.ecom.orders.v1.Orders.BulkUpdateOrderTags',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixEcomOrdersV1OrdersUrl({\n        protoPath: '/v1/bulk/orders/update-tags',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateOrderTags;\n}\n","import * as ambassadorWixEcomV1Order from './ecom-v1-order-orders.http.js';\nimport * as ambassadorWixEcomV1OrderTypes from './ecom-v1-order-orders.types.js';\nimport * as ambassadorWixEcomV1OrderUniversalTypes from './ecom-v1-order-orders.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function preparePaymentCollection(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.PreparePaymentCollectionRequest,\n  ambassadorWixEcomV1OrderTypes.PreparePaymentCollectionRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.PreparePaymentCollectionResponse,\n  ambassadorWixEcomV1OrderTypes.PreparePaymentCollectionResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.preparePaymentCollection(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/prepare-payment-collection',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getPaymentCollectabilityStatus(): __PublicMethodMetaInfo<\n  'GET',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.GetPaymentCollectabilityStatusRequest,\n  ambassadorWixEcomV1OrderTypes.GetPaymentCollectabilityStatusRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.GetPaymentCollectabilityStatusResponse,\n  ambassadorWixEcomV1OrderTypes.GetPaymentCollectabilityStatusResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.getPaymentCollectabilityStatus(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/payment-collectability-status',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function recordManuallyCollectedPayment(): __PublicMethodMetaInfo<\n  'POST',\n  { orderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.RecordManuallyCollectedPaymentRequest,\n  ambassadorWixEcomV1OrderTypes.RecordManuallyCollectedPaymentRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.RecordManuallyCollectedPaymentResponse,\n  ambassadorWixEcomV1OrderTypes.RecordManuallyCollectedPaymentResponse\n> {\n  const payload = { orderId: ':orderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.recordManuallyCollectedPayment(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{orderId}/manual-payment',\n    pathParams: { orderId: 'orderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function paymentCollectionMarkOrderAsPaid(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.MarkOrderAsPaidRequest,\n  ambassadorWixEcomV1OrderTypes.MarkOrderAsPaidRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.MarkOrderAsPaidResponse,\n  ambassadorWixEcomV1OrderTypes.MarkOrderAsPaidResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.paymentCollectionMarkOrderAsPaid(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/mark-as-paid',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function paymentCollectionBulkMarkOrdersAsPaid(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixEcomV1OrderUniversalTypes.BulkMarkOrdersAsPaidRequest,\n  ambassadorWixEcomV1OrderTypes.BulkMarkOrdersAsPaidRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.BulkMarkOrdersAsPaidResponse,\n  ambassadorWixEcomV1OrderTypes.BulkMarkOrdersAsPaidResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.paymentCollectionBulkMarkOrdersAsPaid(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/bulk/payments-collector/mark-as-paid',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getRefundabilityStatus(): __PublicMethodMetaInfo<\n  'GET',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.GetRefundabilityStatusRequest,\n  ambassadorWixEcomV1OrderTypes.GetRefundabilityStatusRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.GetRefundabilityStatusResponse,\n  ambassadorWixEcomV1OrderTypes.GetRefundabilityStatusResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.getRefundabilityStatus(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/refundability',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function paymentCollectionCreatePaymentGatewayOrder(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.CreatePaymentGatewayOrderRequest,\n  ambassadorWixEcomV1OrderTypes.CreatePaymentGatewayOrderRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.CreatePaymentGatewayOrderResponse,\n  ambassadorWixEcomV1OrderTypes.CreatePaymentGatewayOrderResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.paymentCollectionCreatePaymentGatewayOrder(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/create-payment-gateway-order',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function chargeMemberships(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.ChargeMembershipsRequest,\n  ambassadorWixEcomV1OrderTypes.ChargeMembershipsRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.ChargeMembershipsResponse,\n  ambassadorWixEcomV1OrderTypes.ChargeMembershipsResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.chargeMemberships(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/charge-membership',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function triggerRefund(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.TriggerRefundRequest,\n  ambassadorWixEcomV1OrderTypes.TriggerRefundRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.TriggerRefundResponse,\n  ambassadorWixEcomV1OrderTypes.TriggerRefundResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.triggerRefund(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/trigger-refund',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function voidAuthorizedPayments(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.VoidAuthorizedPaymentsRequest,\n  ambassadorWixEcomV1OrderTypes.VoidAuthorizedPaymentsRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.VoidAuthorizedPaymentsResponse,\n  ambassadorWixEcomV1OrderTypes.VoidAuthorizedPaymentsResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.voidAuthorizedPayments(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/void-authorized-payments',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function captureAuthorizedPayments(): __PublicMethodMetaInfo<\n  'POST',\n  { ecomOrderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.CaptureAuthorizedPaymentsRequest,\n  ambassadorWixEcomV1OrderTypes.CaptureAuthorizedPaymentsRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.CaptureAuthorizedPaymentsResponse,\n  ambassadorWixEcomV1OrderTypes.CaptureAuthorizedPaymentsResponse\n> {\n  const payload = { ecomOrderId: ':ecomOrderId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.captureAuthorizedPayments(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/payments-collector/orders/{ecomOrderId}/capture-authorized-payments',\n    pathParams: { ecomOrderId: 'ecomOrderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getOrder(): __PublicMethodMetaInfo<\n  'GET',\n  { id: string },\n  ambassadorWixEcomV1OrderUniversalTypes.GetOrderRequest,\n  ambassadorWixEcomV1OrderTypes.GetOrderRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.GetOrderResponse,\n  ambassadorWixEcomV1OrderTypes.GetOrderResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.getOrder(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/orders/{id}',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function searchOrders(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixEcomV1OrderUniversalTypes.SearchOrdersRequest,\n  ambassadorWixEcomV1OrderTypes.SearchOrdersRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.SearchOrdersResponse,\n  ambassadorWixEcomV1OrderTypes.SearchOrdersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.searchOrders(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders/search',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function createOrder(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixEcomV1OrderUniversalTypes.CreateOrderRequest,\n  ambassadorWixEcomV1OrderTypes.CreateOrderRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.CreateOrderResponse,\n  ambassadorWixEcomV1OrderTypes.CreateOrderResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.createOrder(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateOrder(): __PublicMethodMetaInfo<\n  'PATCH',\n  { orderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateOrderRequest,\n  ambassadorWixEcomV1OrderTypes.UpdateOrderRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateOrderResponse,\n  ambassadorWixEcomV1OrderTypes.UpdateOrderResponse\n> {\n  const payload = { order: { id: ':orderId' } } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.updateOrder(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v1/orders/{order.id}',\n    pathParams: { orderId: 'orderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkUpdateOrders(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixEcomV1OrderUniversalTypes.BulkUpdateOrdersRequest,\n  ambassadorWixEcomV1OrderTypes.BulkUpdateOrdersRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.BulkUpdateOrdersResponse,\n  ambassadorWixEcomV1OrderTypes.BulkUpdateOrdersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.bulkUpdateOrders(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/bulk/orders/update',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function commitDeltas(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixEcomV1OrderUniversalTypes.CommitDeltasRequest,\n  ambassadorWixEcomV1OrderTypes.CommitDeltasRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.CommitDeltasResponse,\n  ambassadorWixEcomV1OrderTypes.CommitDeltasResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.commitDeltas(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders/{id}/commit-deltas',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateOrderLineItem(): __PublicMethodMetaInfo<\n  'PATCH',\n  { id: string; lineItemId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateOrderLineItemRequest,\n  ambassadorWixEcomV1OrderTypes.UpdateOrderLineItemRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateOrderLineItemResponse,\n  ambassadorWixEcomV1OrderTypes.UpdateOrderLineItemResponse\n> {\n  const payload = { id: ':id', lineItem: { id: ':lineItemId' } } as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.updateOrderLineItem(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v1/orders/{id}/line-item/{lineItem.id}',\n    pathParams: { id: 'id', lineItemId: 'lineItemId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function addActivity(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixEcomV1OrderUniversalTypes.AddActivityRequest,\n  ambassadorWixEcomV1OrderTypes.AddActivityRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.AddActivityResponse,\n  ambassadorWixEcomV1OrderTypes.AddActivityResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.addActivity(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders/{id}/activities',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateActivity(): __PublicMethodMetaInfo<\n  'PATCH',\n  { id: string; activityId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateActivityRequest,\n  ambassadorWixEcomV1OrderTypes.UpdateActivityRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateActivityResponse,\n  ambassadorWixEcomV1OrderTypes.UpdateActivityResponse\n> {\n  const payload = { id: ':id', activityId: ':activityId' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.updateActivity(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v1/orders/{id}/activities/{activityId}',\n    pathParams: { id: 'id', activityId: 'activityId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteActivity(): __PublicMethodMetaInfo<\n  'DELETE',\n  { id: string; activityId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.DeleteActivityRequest,\n  ambassadorWixEcomV1OrderTypes.DeleteActivityRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.DeleteActivityResponse,\n  ambassadorWixEcomV1OrderTypes.DeleteActivityResponse\n> {\n  const payload = { id: ':id', activityId: ':activityId' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.deleteActivity(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/orders/{id}/activities/{activityId}',\n    pathParams: { id: 'id', activityId: 'activityId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function cancelOrder(): __PublicMethodMetaInfo<\n  'POST',\n  { id: string },\n  ambassadorWixEcomV1OrderUniversalTypes.CancelOrderRequest,\n  ambassadorWixEcomV1OrderTypes.CancelOrderRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.CancelOrderResponse,\n  ambassadorWixEcomV1OrderTypes.CancelOrderResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.cancelOrder(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders/{id}/cancel',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateOrderStatus(): __PublicMethodMetaInfo<\n  'POST',\n  { orderId: string },\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateOrderStatusRequest,\n  ambassadorWixEcomV1OrderTypes.UpdateOrderStatusRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.UpdateOrderStatusResponse,\n  ambassadorWixEcomV1OrderTypes.UpdateOrderStatusResponse\n> {\n  const payload = { orderId: ':orderId' } as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.updateOrderStatus(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders/{orderId}/update-status',\n    pathParams: { orderId: 'orderId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function aggregateOrders(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixEcomV1OrderUniversalTypes.AggregateOrdersRequest,\n  ambassadorWixEcomV1OrderTypes.AggregateOrdersRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.AggregateOrdersResponse,\n  ambassadorWixEcomV1OrderTypes.AggregateOrdersResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixEcomV1Order.aggregateOrders(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/orders/aggregate',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkUpdateOrderTags(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixEcomV1OrderUniversalTypes.BulkUpdateOrderTagsRequest,\n  ambassadorWixEcomV1OrderTypes.BulkUpdateOrderTagsRequest,\n  ambassadorWixEcomV1OrderUniversalTypes.BulkUpdateOrderTagsResponse,\n  ambassadorWixEcomV1OrderTypes.BulkUpdateOrderTagsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixEcomV1Order.bulkUpdateOrderTags(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/bulk/orders/update-tags',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","preparePaymentCollection","getPaymentCollectabilityStatus","recordManuallyCollectedPayment","paymentCollectionMarkOrderAsPaid","paymentCollectionBulkMarkOrdersAsPaid","getRefundabilityStatus","paymentCollectionCreatePaymentGatewayOrder","chargeMemberships","triggerRefund","voidAuthorizedPayments","captureAuthorizedPayments","getOrder","searchOrders","createOrder","updateOrder","bulkUpdateOrders","commitDeltas","updateOrderLineItem","addActivity","updateActivity","deleteActivity","cancelOrder","updateOrderStatus","aggregateOrders","bulkUpdateOrderTags"]}