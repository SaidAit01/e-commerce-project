{"version":3,"sources":["../../../src/billing-v1-tax-group-tax-groups.http.ts","../../../src/billing-v1-tax-group-tax-groups.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixBillingV1TaxGroupsUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/billing/v1/tax-groups',\n        destPath: '/v1/tax-groups',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/billing/v1/tax-groups',\n        destPath: '/v1/tax-groups',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_ecom_tax-groups';\n\n/**\n * Creates a tax group.\n *\n * Call Stores Update Product to add the `taxGroupId` to specific products to categorize as a group based on distinct tax treatment.\n * Wix uses tax groups to calculate tax.\n *\n * In addition to tax groups you create, default tax groups are already included in all Wix catalogs.\n * Call List Default Tax Groups to retrieve them. You can also use the Tax Groups Integration service plugin (REST only)\n * to create new default tax groups that can be applied directly to an entire catalog of products.\n */\nexport function createTaxGroup(payload: object): RequestOptionsFactory<any> {\n  function __createTaxGroup({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'taxGroup.createdDate' },\n          { path: 'taxGroup.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'POST' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.CreateTaxGroup',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'taxGroup.createdDate' },\n              { path: 'taxGroup.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createTaxGroup;\n}\n\n/** Retrieves a tax group. */\nexport function getTaxGroup(payload: object): RequestOptionsFactory<any> {\n  function __getTaxGroup({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'GET' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.GetTaxGroup',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups/{taxGroupId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'taxGroup.createdDate' },\n              { path: 'taxGroup.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getTaxGroup;\n}\n\n/**\n * Updates a tax group.\n *\n * Each time the tax group is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the tax group.\n * This ensures you're working with the latest tax group and prevents\n * unintended overwrites.\n */\nexport function updateTaxGroup(payload: object): RequestOptionsFactory<any> {\n  function __updateTaxGroup({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'taxGroup.createdDate' },\n          { path: 'taxGroup.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'PATCH' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.UpdateTaxGroup',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups/{taxGroup.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'taxGroup.createdDate' },\n              { path: 'taxGroup.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateTaxGroup;\n}\n\n/**\n * Deletes a tax group.\n *\n * If a tax group is deleted but the `taxGroupId` is still assigned to a product (see Stores Products API) then the default tax group is used to calculate tax.\n */\nexport function deleteTaxGroup(payload: object): RequestOptionsFactory<any> {\n  function __deleteTaxGroup({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.DeleteTaxGroup',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups/{taxGroupId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteTaxGroup;\n}\n\n/**\n * Creates a query to retrieve a list of tax groups.\n *\n * The `queryTaxGroups()` function builds a query to retrieve a list of tax groups and returns a `TaxGroupsQueryBuilder` object.\n *\n * The returned object contains the query definition, which is typically used to run the query using the `find()` function.\n *\n * You can refine the query by chaining `TaxGroupsQueryBuilder` functions onto the query. `TaxGroupsQueryBuilder` functions enable you to sort, filter, and control the results that `queryTaxGroups()` returns.\n *\n * `queryTaxGroups()` runs with the following `TaxGroupsQueryBuilder` default that you can override:\n * + `ascending(\"_id\")`\n *\n * The functions that are chained to `queryTaxGroups()` are applied in the order they are called. For example, if you apply `ascending(\"name\")` and then `ascending(\"_createdDate\")`, the results are sorted first by the `\"name\"`, and then, if there are multiple results with the same `\"name\"`, the items are sorted by `\"_createdDate\"`.\n *\n * The following `TaxGroupsQueryBuilder` functions are supported for the `queryTaxGroups()` function. For a full description of the tax group object, see the object returned for the `items` property in `TaxGroupsQueryResult`.\n */\nexport function queryTaxGroups(payload: object): RequestOptionsFactory<any> {\n  function __queryTaxGroups({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'POST' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.QueryTaxGroups',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'taxGroups.createdDate' },\n              { path: 'taxGroups.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryTaxGroups;\n}\n\n/**\n * Retrieves a list of default tax groups.\n *\n * The default tax groups for a site are inherited by the apps installed on the site.\n * For example, the Wix Stores app includes a `\"Products\"` tax group by default.\n *\n * Add additional default tax groups with the Tax Groups Integration service plugin (REST only).\n */\nexport function listDefaultTaxGroups(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listDefaultTaxGroups({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'GET' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.ListDefaultTaxGroups',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups/default-tax-groups',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'taxGroups.createdDate' },\n              { path: 'taxGroups.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listDefaultTaxGroups;\n}\n\n/** Retrieves default tax groups for specific apps. */\nexport function listDefaultTaxGroupsByAppIds(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listDefaultTaxGroupsByAppIds({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.billing.v1.tax_group',\n      method: 'POST' as any,\n      methodFqn: 'wix.billing.v1.TaxGroups.ListDefaultTaxGroupsByAppIds',\n      packageName: PACKAGE_NAME,\n      url: resolveWixBillingV1TaxGroupsUrl({\n        protoPath: '/v1/tax-groups/list-default-tax-groups-by-app-ids',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.taxGroup.createdDate' },\n              { path: 'results.taxGroup.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listDefaultTaxGroupsByAppIds;\n}\n","import * as ambassadorWixBillingV1TaxGroup from './billing-v1-tax-group-tax-groups.http.js';\nimport * as ambassadorWixBillingV1TaxGroupTypes from './billing-v1-tax-group-tax-groups.types.js';\nimport * as ambassadorWixBillingV1TaxGroupUniversalTypes from './billing-v1-tax-group-tax-groups.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function createTaxGroup(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixBillingV1TaxGroupUniversalTypes.CreateTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupTypes.CreateTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.CreateTaxGroupResponse,\n  ambassadorWixBillingV1TaxGroupTypes.CreateTaxGroupResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixBillingV1TaxGroup.createTaxGroup(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/tax-groups',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getTaxGroup(): __PublicMethodMetaInfo<\n  'GET',\n  { taxGroupId: string },\n  ambassadorWixBillingV1TaxGroupUniversalTypes.GetTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupTypes.GetTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.GetTaxGroupResponse,\n  ambassadorWixBillingV1TaxGroupTypes.GetTaxGroupResponse\n> {\n  const payload = { taxGroupId: ':taxGroupId' } as any;\n\n  const getRequestOptions = ambassadorWixBillingV1TaxGroup.getTaxGroup(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/tax-groups/{taxGroupId}',\n    pathParams: { taxGroupId: 'taxGroupId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateTaxGroup(): __PublicMethodMetaInfo<\n  'PATCH',\n  { taxGroupId: string },\n  ambassadorWixBillingV1TaxGroupUniversalTypes.UpdateTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupTypes.UpdateTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.UpdateTaxGroupResponse,\n  ambassadorWixBillingV1TaxGroupTypes.UpdateTaxGroupResponse\n> {\n  const payload = { taxGroup: { id: ':taxGroupId' } } as any;\n\n  const getRequestOptions =\n    ambassadorWixBillingV1TaxGroup.updateTaxGroup(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v1/tax-groups/{taxGroup.id}',\n    pathParams: { taxGroupId: 'taxGroupId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteTaxGroup(): __PublicMethodMetaInfo<\n  'DELETE',\n  { taxGroupId: string },\n  ambassadorWixBillingV1TaxGroupUniversalTypes.DeleteTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupTypes.DeleteTaxGroupRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.DeleteTaxGroupResponse,\n  ambassadorWixBillingV1TaxGroupTypes.DeleteTaxGroupResponse\n> {\n  const payload = { taxGroupId: ':taxGroupId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixBillingV1TaxGroup.deleteTaxGroup(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v1/tax-groups/{taxGroupId}',\n    pathParams: { taxGroupId: 'taxGroupId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function queryTaxGroups(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixBillingV1TaxGroupUniversalTypes.QueryTaxGroupsRequest,\n  ambassadorWixBillingV1TaxGroupTypes.QueryTaxGroupsRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.QueryTaxGroupsResponse,\n  ambassadorWixBillingV1TaxGroupTypes.QueryTaxGroupsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixBillingV1TaxGroup.queryTaxGroups(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/tax-groups/query',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function listDefaultTaxGroups(): __PublicMethodMetaInfo<\n  'GET',\n  {},\n  ambassadorWixBillingV1TaxGroupUniversalTypes.ListDefaultTaxGroupsRequest,\n  ambassadorWixBillingV1TaxGroupTypes.ListDefaultTaxGroupsRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.ListDefaultTaxGroupsResponse,\n  ambassadorWixBillingV1TaxGroupTypes.ListDefaultTaxGroupsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixBillingV1TaxGroup.listDefaultTaxGroups(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/tax-groups/default-tax-groups',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function listDefaultTaxGroupsByAppIds(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixBillingV1TaxGroupUniversalTypes.ListDefaultTaxGroupsByAppIdsRequest,\n  ambassadorWixBillingV1TaxGroupTypes.ListDefaultTaxGroupsByAppIdsRequest,\n  ambassadorWixBillingV1TaxGroupUniversalTypes.ListDefaultTaxGroupsByAppIdsResponse,\n  ambassadorWixBillingV1TaxGroupTypes.ListDefaultTaxGroupsByAppIdsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixBillingV1TaxGroup.listDefaultTaxGroupsByAppIds(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/tax-groups/list-default-tax-groups-by-app-ids',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","createTaxGroup","getTaxGroup","updateTaxGroup","deleteTaxGroup","queryTaxGroups","listDefaultTaxGroups","listDefaultTaxGroupsByAppIds"]}