// src/tips-v1-tip-tips.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixTipsTipV1TipsServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/tips-service",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/tips-service",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/tips",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tips";
function previewTip(payload) {
  function __previewTip({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "POST",
      methodFqn: "wix.tips.tip.v1.TipsService.PreviewTip",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/preview",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tip.distributions.createdDate" },
            { path: "tip.distributions.transaction.date" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __previewTip;
}
function getTipByOrderId(payload) {
  function __getTipByOrderId({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "GET",
      methodFqn: "wix.tips.tip.v1.TipsService.GetTipByOrderId",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/order/{orderId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tip.distributions.createdDate" },
            { path: "tip.distributions.transaction.date" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getTipByOrderId;
}
function getTipByDraftOrderId(payload) {
  function __getTipByDraftOrderId({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "GET",
      methodFqn: "wix.tips.tip.v1.TipsService.GetTipByDraftOrderId",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/draft-order/{draftOrderId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tip.distributions.createdDate" },
            { path: "tip.distributions.transaction.date" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getTipByDraftOrderId;
}
function getTipChoice(payload) {
  function __getTipChoice({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "GET",
      methodFqn: "wix.tips.tip.v1.TipsService.GetTipChoice",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/choice/{purchaseFlowId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __getTipChoice;
}
function updateTipChoice(payload) {
  function __updateTipChoice({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "PATCH",
      methodFqn: "wix.tips.tip.v1.TipsService.UpdateTipChoice",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/choice",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __updateTipChoice;
}
function setTipOnOrder(payload) {
  function __setTipOnOrder({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "tip.distributions.createdDate" },
          { path: "tip.distributions.transaction.date" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "POST",
      methodFqn: "wix.tips.tip.v1.TipsService.SetTipOnOrder",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/set",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tip.distributions.createdDate" },
            { path: "tip.distributions.transaction.date" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __setTipOnOrder;
}
function removeTipFromOrder(payload) {
  function __removeTipFromOrder({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "POST",
      methodFqn: "wix.tips.tip.v1.TipsService.RemoveTipFromOrder",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/remove",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __removeTipFromOrder;
}
function addTipDistributionsToOrder(payload) {
  function __addTipDistributionsToOrder({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "tipDistributions.createdDate" },
          { path: "tipDistributions.transaction.date" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "POST",
      methodFqn: "wix.tips.tip.v1.TipsService.AddTipDistributionsToOrder",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/tip-distributions/add",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tipDistributions.createdDate" },
            { path: "tipDistributions.transaction.date" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addTipDistributionsToOrder;
}
function queryTipDistributions(payload) {
  function __queryTipDistributions({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "POST",
      methodFqn: "wix.tips.tip.v1.TipsService.QueryTipDistributions",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/tip-distributions/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tipDistributions.createdDate" },
            { path: "tipDistributions.transaction.date" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryTipDistributions;
}
function sumTipDistributionAmounts(payload) {
  function __sumTipDistributionAmounts({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.v1.tip",
      method: "POST",
      methodFqn: "wix.tips.tip.v1.TipsService.SumTipDistributionAmounts",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsTipV1TipsServiceUrl({
        protoPath: "/v1/tips/tip-distributions/sum-amounts",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __sumTipDistributionAmounts;
}

// src/tips-v1-tip-tips.meta.ts
function previewTip2() {
  const payload = {};
  const getRequestOptions = previewTip(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tips/preview",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTipByOrderId2() {
  const payload = { orderId: ":orderId" };
  const getRequestOptions = getTipByOrderId(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/tips/order/{orderId}",
    pathParams: { orderId: "orderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTipByDraftOrderId2() {
  const payload = { draftOrderId: ":draftOrderId" };
  const getRequestOptions = getTipByDraftOrderId(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/tips/draft-order/{draftOrderId}",
    pathParams: { draftOrderId: "draftOrderId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getTipChoice2() {
  const payload = { purchaseFlowId: ":purchaseFlowId" };
  const getRequestOptions = getTipChoice(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/tips/choice/{purchaseFlowId}",
    pathParams: { purchaseFlowId: "purchaseFlowId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateTipChoice2() {
  const payload = {};
  const getRequestOptions = updateTipChoice(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/tips/choice",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function setTipOnOrder2() {
  const payload = {};
  const getRequestOptions = setTipOnOrder(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tips/set",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeTipFromOrder2() {
  const payload = {};
  const getRequestOptions = removeTipFromOrder(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tips/remove",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addTipDistributionsToOrder2() {
  const payload = {};
  const getRequestOptions = addTipDistributionsToOrder(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tips/tip-distributions/add",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryTipDistributions2() {
  const payload = {};
  const getRequestOptions = queryTipDistributions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tips/tip-distributions/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function sumTipDistributionAmounts2() {
  const payload = {};
  const getRequestOptions = sumTipDistributionAmounts(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tips/tip-distributions/sum-amounts",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  addTipDistributionsToOrder2 as addTipDistributionsToOrder,
  getTipByDraftOrderId2 as getTipByDraftOrderId,
  getTipByOrderId2 as getTipByOrderId,
  getTipChoice2 as getTipChoice,
  previewTip2 as previewTip,
  queryTipDistributions2 as queryTipDistributions,
  removeTipFromOrder2 as removeTipFromOrder,
  setTipOnOrder2 as setTipOnOrder,
  sumTipDistributionAmounts2 as sumTipDistributionAmounts,
  updateTipChoice2 as updateTipChoice
};
//# sourceMappingURL=meta.mjs.map