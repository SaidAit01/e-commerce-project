// src/ecom-custom-trigger-v1-custom-trigger-discounts-custom-trigger.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/ecom-custom-trigger-v1-custom-trigger-discounts-custom-trigger.http.ts
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixEcomCustomTriggerV1CustomTriggersServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/custom-triggers-service",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/discount-custom-triggers",
        destPath: "/v1/discount-custom-triggers"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/discount-custom-triggers",
        destPath: "/v1/discount-custom-triggers"
      },
      {
        srcPath: "/v1/discount-custom-triggers",
        destPath: "/v1/discount-custom-triggers"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_discounts-custom-trigger";
function listTriggers(payload) {
  function __listTriggers({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.custom_trigger.v1.custom_trigger",
      method: "POST",
      methodFqn: "com.wix.ecom.custom_trigger.v1.CustomTriggersService.ListTriggers",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomCustomTriggerV1CustomTriggersServiceUrl({
        protoPath: "/v1/discount-custom-triggers/list",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __listTriggers;
}

// src/ecom-custom-trigger-v1-custom-trigger-discounts-custom-trigger.universal.ts
async function listTriggers2() {
  const { httpClient, sideEffects } = arguments[0];
  const payload = renameKeysFromSDKRequestToRESTRequest({});
  const reqOpts = listTriggers(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {},
        singleArgumentUnchanged: false
      },
      []
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
export {
  listTriggers2 as listTriggers
};
//# sourceMappingURL=index.typings.mjs.map