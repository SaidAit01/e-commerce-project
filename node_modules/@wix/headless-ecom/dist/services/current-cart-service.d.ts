import { type ServiceFactoryConfig } from "@wix/services-definitions";
import { type Signal, type ReadOnlySignal } from "@wix/services-definitions/core-services/signals";
import * as currentCart from "@wix/auto_sdk_ecom_current-cart";
export type LineItem = NonNullable<currentCart.AddToCurrentCartRequest["lineItems"]>[number];
export interface CurrentCartServiceAPI {
    cart: Signal<currentCart.Cart | null>;
    isOpen: Signal<boolean>;
    isLoading: Signal<boolean>;
    isTotalsLoading: Signal<boolean>;
    isCouponLoading: Signal<boolean>;
    error: Signal<string | null>;
    cartCount: ReadOnlySignal<number>;
    buyerNotes: Signal<string>;
    cartTotals: Signal<any | null>;
    addToCart: (lineItems: currentCart.AddToCurrentCartRequest["lineItems"]) => Promise<void>;
    removeLineItem: (lineItemId: string) => Promise<void>;
    updateLineItemQuantity: (lineItemId: string, quantity: number) => Promise<void>;
    increaseLineItemQuantity: (lineItemId: string) => Promise<void>;
    decreaseLineItemQuantity: (lineItemId: string) => Promise<void>;
    openCart: () => void;
    closeCart: () => void;
    clearCart: () => Promise<void>;
    setBuyerNotes: (notes: string) => Promise<void>;
    proceedToCheckout: () => Promise<void>;
    applyCoupon: (couponCode: string) => Promise<void>;
    removeCoupon: () => Promise<void>;
    reloadCart: () => Promise<void>;
    onAddedToCart: (callback: (lineItems: currentCart.AddToCurrentCartRequest["lineItems"]) => void) => void;
}
export declare const CurrentCartServiceDefinition: string & {
    __api: CurrentCartServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & CurrentCartServiceAPI;
export declare const CurrentCartService: import("@wix/services-definitions").ServiceFactory<string & {
    __api: CurrentCartServiceAPI;
    __config: {};
    isServiceDefinition?: boolean;
} & CurrentCartServiceAPI, {
    initialCart?: currentCart.Cart | null;
}>;
export declare function loadCurrentCartServiceConfig(): Promise<ServiceFactoryConfig<typeof CurrentCartService>>;
