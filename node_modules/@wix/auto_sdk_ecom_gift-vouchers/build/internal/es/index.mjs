// src/ecom-v1-gift-card-gift-vouchers.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/ecom-v1-gift-card-gift-vouchers.http.ts
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixEcomGiftCardsSpiHostV1GiftCardsSpiHostServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/gift-cards-spi-host",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/gift-cards",
        destPath: "/v1/gift-cards"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/gift-cards",
        destPath: "/v1/gift-cards"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_gift-vouchers";
function getGiftCard(payload) {
  function __getGiftCard({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.gift_card",
      method: "POST",
      methodFqn: "wix.ecom.gift_cards_spi_host.v1.GiftCardsSpiHostService.GetGiftCard",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomGiftCardsSpiHostV1GiftCardsSpiHostServiceUrl({
        protoPath: "/v1/gift-cards/{code}",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __getGiftCard;
}
function redeemGiftCard(payload) {
  function __redeemGiftCard({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.gift_card",
      method: "POST",
      methodFqn: "wix.ecom.gift_cards_spi_host.v1.GiftCardsSpiHostService.RedeemGiftCard",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomGiftCardsSpiHostV1GiftCardsSpiHostServiceUrl({
        protoPath: "/v1/gift-cards/redeem",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __redeemGiftCard;
}
function voidTransaction(payload) {
  function __voidTransaction({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v1.gift_card",
      method: "POST",
      methodFqn: "wix.ecom.gift_cards_spi_host.v1.GiftCardsSpiHostService.VoidTransaction",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomGiftCardsSpiHostV1GiftCardsSpiHostServiceUrl({
        protoPath: "/v1/gift-cards/void",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __voidTransaction;
}

// src/ecom-v1-gift-card-gift-vouchers.universal.ts
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["UNKNOWN_STATUS"] = "UNKNOWN_STATUS";
  Status2["VALID"] = "VALID";
  Status2["EXPIRED"] = "EXPIRED";
  Status2["DISABLED"] = "DISABLED";
  return Status2;
})(Status || {});
async function getGiftCard2(code, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    code,
    context: options?.context,
    appId: options?.appId,
    pin: options?.pin
  });
  const reqOpts = getGiftCard(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          code: "$[0]",
          context: "$[1].context",
          appId: "$[1].appId",
          pin: "$[1].pin"
        },
        singleArgumentUnchanged: false
      },
      ["code", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function redeemGiftCard2(code, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    code,
    amount: options?.amount,
    orderId: options?.orderId,
    appId: options?.appId,
    context: options?.context,
    pin: options?.pin
  });
  const reqOpts = redeemGiftCard(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          code: "$[0]",
          amount: "$[1].amount",
          orderId: "$[1].orderId",
          appId: "$[1].appId",
          context: "$[1].context",
          pin: "$[1].pin"
        },
        singleArgumentUnchanged: false
      },
      ["code", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function voidTransaction2(transactionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    transactionId,
    appId: options?.appId,
    context: options?.context
  });
  const reqOpts = voidTransaction(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          transactionId: "$[0]",
          appId: "$[1].appId",
          context: "$[1].context"
        },
        singleArgumentUnchanged: false
      },
      ["transactionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/ecom-v1-gift-card-gift-vouchers.public.ts
function getGiftCard3(httpClient) {
  return (code, options) => getGiftCard2(
    code,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function redeemGiftCard3(httpClient) {
  return (code, options) => redeemGiftCard2(
    code,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function voidTransaction3(httpClient) {
  return (transactionId, options) => voidTransaction2(
    transactionId,
    options,
    // @ts-ignore
    { httpClient }
  );
}

// src/ecom-v1-gift-card-gift-vouchers.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
var getGiftCard4 = /* @__PURE__ */ createRESTModule(getGiftCard3);
var redeemGiftCard4 = /* @__PURE__ */ createRESTModule(redeemGiftCard3);
var voidTransaction4 = /* @__PURE__ */ createRESTModule(voidTransaction3);
export {
  Status,
  getGiftCard4 as getGiftCard,
  redeemGiftCard4 as redeemGiftCard,
  voidTransaction4 as voidTransaction
};
//# sourceMappingURL=index.mjs.map