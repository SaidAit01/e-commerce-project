// src/ecom-v2-cart-cart-v-2.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTBytesToSDKBytes } from "@wix/sdk-runtime/transformations/bytes";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixEcomCartV2CartServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/cart-v2",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "apps._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v2/carts",
        destPath: "/v2/carts"
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/cart-v2",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_cart-v-2";
function createCart(payload) {
  function __createCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cart.createdDate" },
          { path: "cart.updatedDate" },
          {
            path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "cart.lineItems.attributes.image.urlExpirationDate" },
          {
            path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "cart.lineItems.attributes.serviceProperties.scheduledDate" },
          {
            path: "catalogItems.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "customItems.attributes.image.urlExpirationDate" },
          {
            path: "customItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "customItems.attributes.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cart.lineItems.attributes.physicalProperties.weight" },
          { path: "cart.deliveryInfo.address.geocode.latitude" },
          { path: "cart.deliveryInfo.address.geocode.longitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.longitude" },
          {
            path: "catalogItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "customItems.attributes.physicalProperties.weight" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.CreateCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createCart;
}
function getCart(payload) {
  function __getCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "GET",
      methodFqn: "wix.ecom.cart.v2.CartService.GetCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getCart;
}
function updateCart(payload) {
  function __updateCart({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "cart.createdDate" },
          { path: "cart.updatedDate" },
          {
            path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "cart.lineItems.attributes.image.urlExpirationDate" },
          {
            path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "cart.lineItems.attributes.serviceProperties.scheduledDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "cart.lineItems.attributes.physicalProperties.weight" },
          { path: "cart.deliveryInfo.address.geocode.latitude" },
          { path: "cart.deliveryInfo.address.geocode.longitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
          { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "PATCH",
      methodFqn: "wix.ecom.cart.v2.CartService.UpdateCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cart.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateCart;
}
function deleteCart(payload) {
  function __deleteCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "DELETE",
      methodFqn: "wix.ecom.cart.v2.CartService.DeleteCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteCart;
}
function refreshCart(payload) {
  function __refreshCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.RefreshCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/refresh",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __refreshCart;
}
function calculateCart(payload) {
  function __calculateCart({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.CalculateCart",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/calculate",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __calculateCart;
}
function getCheckoutUrl(payload) {
  function __getCheckoutUrl({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.GetCheckoutURL",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/get-checkout-url",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __getCheckoutUrl;
}
function completeCheckout(payload) {
  function __completeCheckout({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.CompleteCheckout",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/complete-checkout",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __completeCheckout;
}
function addLineItems(payload) {
  function __addLineItems({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "catalogItems.catalogOverrideFields.physicalProperties.weight"
          },
          { path: "customItems.attributes.physicalProperties.weight" }
        ]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          {
            path: "catalogItems.catalogOverrideFields.image.urlExpirationDate"
          },
          { path: "customItems.attributes.image.urlExpirationDate" },
          {
            path: "customItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
          },
          { path: "customItems.attributes.serviceProperties.scheduledDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.AddLineItems",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/add-line-items",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addLineItems;
}
function removeLineItems(payload) {
  function __removeLineItems({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.RemoveLineItems",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/remove-line-items",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeLineItems;
}
function addDiscount(payload) {
  function __addDiscount({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.AddDiscount",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/add-discount",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addDiscount;
}
function removeDiscount(payload) {
  function __removeDiscount({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.RemoveDiscount",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/remove-discount",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeDiscount;
}
function addGiftCard(payload) {
  function __addGiftCard({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.AddGiftCard",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/add-gift-card",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __addGiftCard;
}
function removeGiftCard(payload) {
  function __removeGiftCard({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.RemoveGiftCard",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/remove-gift-card",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __removeGiftCard;
}
function updateLineItems(payload) {
  function __updateLineItems({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.UpdateLineItems",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/update-line-items",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateLineItems;
}
function markCartAsCompleted(payload) {
  function __markCartAsCompleted({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.MarkCartAsCompleted",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/{cartId}/mark-cart-as-completed",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "cart.createdDate" },
            { path: "cart.updatedDate" },
            {
              path: "cart.lineItems.source.catalogOverrideFields.image.urlExpirationDate"
            },
            { path: "cart.lineItems.attributes.image.urlExpirationDate" },
            {
              path: "cart.lineItems.attributes.subscriptionInfo.subscriptionSettings.startDate"
            },
            {
              path: "cart.lineItems.attributes.serviceProperties.scheduledDate"
            }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "cart.lineItems.source.catalogOverrideFields.physicalProperties.weight"
            },
            { path: "cart.lineItems.attributes.physicalProperties.weight" },
            { path: "cart.deliveryInfo.address.geocode.latitude" },
            { path: "cart.deliveryInfo.address.geocode.longitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.latitude" },
            { path: "cart.paymentInfo.billingAddress.geocode.longitude" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __markCartAsCompleted;
}
function handleAsyncCheckoutCompletion(payload) {
  function __handleAsyncCheckoutCompletion({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.v2.cart",
      method: "POST",
      methodFqn: "wix.ecom.cart.v2.CartService.HandleAsyncCheckoutCompletion",
      packageName: PACKAGE_NAME,
      url: resolveWixEcomCartV2CartServiceUrl({
        protoPath: "/v2/carts/handle-async-checkout-completion",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [{ path: "body" }]
        }
      ])
    };
    return metadata;
  }
  return __handleAsyncCheckoutCompletion;
}

// src/ecom-v2-cart-cart-v-2.meta.ts
function createCart2() {
  const payload = {};
  const getRequestOptions = createCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCart2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = getCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/carts/{cartId}",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateCart2() {
  const payload = { cart: { id: ":cartId" } };
  const getRequestOptions = updateCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v2/carts/{cart.id}",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteCart2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = deleteCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v2/carts/{cartId}",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function refreshCart2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = refreshCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/refresh",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function calculateCart2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = calculateCart(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/calculate",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCheckoutUrl2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = getCheckoutUrl(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/get-checkout-url",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function completeCheckout2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = completeCheckout(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/complete-checkout",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addLineItems2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = addLineItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/add-line-items",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeLineItems2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = removeLineItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/remove-line-items",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addDiscount2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = addDiscount(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/add-discount",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeDiscount2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = removeDiscount(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/remove-discount",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addGiftCard2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = addGiftCard(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/add-gift-card",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeGiftCard2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = removeGiftCard(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/remove-gift-card",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateLineItems2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = updateLineItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/update-line-items",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function markCartAsCompleted2() {
  const payload = { cartId: ":cartId" };
  const getRequestOptions = markCartAsCompleted(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/{cartId}/mark-cart-as-completed",
    pathParams: { cartId: "cartId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function handleAsyncCheckoutCompletion2() {
  const payload = {};
  const getRequestOptions = handleAsyncCheckoutCompletion(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/carts/handle-async-checkout-completion",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  addDiscount2 as addDiscount,
  addGiftCard2 as addGiftCard,
  addLineItems2 as addLineItems,
  calculateCart2 as calculateCart,
  completeCheckout2 as completeCheckout,
  createCart2 as createCart,
  deleteCart2 as deleteCart,
  getCart2 as getCart,
  getCheckoutUrl2 as getCheckoutUrl,
  handleAsyncCheckoutCompletion2 as handleAsyncCheckoutCompletion,
  markCartAsCompleted2 as markCartAsCompleted,
  refreshCart2 as refreshCart,
  removeDiscount2 as removeDiscount,
  removeGiftCard2 as removeGiftCard,
  removeLineItems2 as removeLineItems,
  updateCart2 as updateCart,
  updateLineItems2 as updateLineItems
};
//# sourceMappingURL=meta.mjs.map