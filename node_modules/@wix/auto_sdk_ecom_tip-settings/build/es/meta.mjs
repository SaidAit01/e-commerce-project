// src/tips-settings-v1-tip-settings-tip-settings.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixTipsSettingsV1TipSettingsServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/tip-settings",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/tip-settings",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/tip-settings",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/tip-settings",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tip-settings";
function queryTipSettings(payload) {
  function __queryTipSettings({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.settings.v1.tip_settings",
      method: "POST",
      methodFqn: "wix.tips.settings.v1.TipSettingsService.QueryTipSettings",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsSettingsV1TipSettingsServiceUrl({
        protoPath: "/v1/tip-settings/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tipSettings.createdDate" },
            { path: "tipSettings.updatedDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [{ path: "tipSettings.presets.value" }]
        }
      ])
    };
    return metadata;
  }
  return __queryTipSettings;
}
function updateTipSettings(payload) {
  function __updateTipSettings({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "tipSettings.createdDate" },
          { path: "tipSettings.updatedDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [{ path: "tipSettings.presets.value" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.tips.settings.v1.tip_settings",
      method: "PATCH",
      methodFqn: "wix.tips.settings.v1.TipSettingsService.UpdateTipSettings",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsSettingsV1TipSettingsServiceUrl({
        protoPath: "/v1/tip-settings",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tipSettings.createdDate" },
            { path: "tipSettings.updatedDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [{ path: "tipSettings.presets.value" }]
        }
      ])
    };
    return metadata;
  }
  return __updateTipSettings;
}
function createTipSettings(payload) {
  function __createTipSettings({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "tipSettings.createdDate" },
          { path: "tipSettings.updatedDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [{ path: "tipSettings.presets.value" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.tips.settings.v1.tip_settings",
      method: "POST",
      methodFqn: "wix.tips.settings.v1.TipSettingsService.CreateTipSettings",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsSettingsV1TipSettingsServiceUrl({
        protoPath: "/v1/tip-settings",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tipSettings.createdDate" },
            { path: "tipSettings.updatedDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [{ path: "tipSettings.presets.value" }]
        }
      ])
    };
    return metadata;
  }
  return __createTipSettings;
}
function createDefaultTipSettings(payload) {
  function __createDefaultTipSettings({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "tipSettings.createdDate" },
          { path: "tipSettings.updatedDate" }
        ]
      },
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [{ path: "tipSettings.presets.value" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.tips.settings.v1.tip_settings",
      method: "POST",
      methodFqn: "wix.tips.settings.v1.TipSettingsService.CreateDefaultTipSettings",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsSettingsV1TipSettingsServiceUrl({
        protoPath: "/v1/tip-settings/create-default",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "tipSettings.createdDate" },
            { path: "tipSettings.updatedDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [{ path: "tipSettings.presets.value" }]
        }
      ])
    };
    return metadata;
  }
  return __createDefaultTipSettings;
}
function deleteTipSettings(payload) {
  function __deleteTipSettings({ host }) {
    const metadata = {
      entityFqdn: "wix.tips.settings.v1.tip_settings",
      method: "DELETE",
      methodFqn: "wix.tips.settings.v1.TipSettingsService.DeleteTipSettings",
      packageName: PACKAGE_NAME,
      url: resolveWixTipsSettingsV1TipSettingsServiceUrl({
        protoPath: "/v1/tip-settings/{tipSettingsId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteTipSettings;
}

// src/tips-settings-v1-tip-settings-tip-settings.meta.ts
function queryTipSettings2() {
  const payload = {};
  const getRequestOptions = queryTipSettings(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tip-settings/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateTipSettings2() {
  const payload = {};
  const getRequestOptions = updateTipSettings(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v1/tip-settings",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function createTipSettings2() {
  const payload = {};
  const getRequestOptions = createTipSettings(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tip-settings",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function createDefaultTipSettings2() {
  const payload = {};
  const getRequestOptions = createDefaultTipSettings(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/tip-settings/create-default",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteTipSettings2() {
  const payload = { tipSettingsId: ":tipSettingsId" };
  const getRequestOptions = deleteTipSettings(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/tip-settings/{tipSettingsId}",
    pathParams: { tipSettingsId: "tipSettingsId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  createDefaultTipSettings2 as createDefaultTipSettings,
  createTipSettings2 as createTipSettings,
  deleteTipSettings2 as deleteTipSettings,
  queryTipSettings2 as queryTipSettings,
  updateTipSettings2 as updateTipSettings
};
//# sourceMappingURL=meta.mjs.map