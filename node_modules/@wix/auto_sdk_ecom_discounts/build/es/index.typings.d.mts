import { w as GetEligibleDiscountsEnvelope, a as GetEligibleDiscountsResponse } from './service-plugins-error-classes-Bdl6ILGx.mjs';
export { B as BaseDiscounts, C as CatalogReference, m as Context, v as CouponDoesNotExistWixError, t as CouponHasExpiredWixError, r as CouponIsDisabledWixError, u as CouponIsNotActiveYetWixError, q as CouponLimitPerCustomerExceededWixError, k as CouponOptions, s as CouponUsageExceededWixError, D as Discount, c as DiscountDiscountScopesOneOf, b as DiscountDiscountTypeOneOf, d as DiscountName, e as DiscountRate, f as DiscountRateRateOneOf, j as DiscountSource, l as DiscountsSPIConfig, G as GetEligibleDiscountsRequest, n as IdentificationData, o as IdentificationDataIdOneOf, I as IdentityType, L as LineItem, i as LineItemRate, h as LineItemsDiscounts, T as TargetType, g as Type } from './service-plugins-error-classes-Bdl6ILGx.mjs';
import '@wix/sdk-types';

/**
 * Wix calls this method when certain actions are performed on the cart or checkout.
 * For example, when an item is added to the cart or the amount of an item is updated in the checkout.
 * @throws CouponLimitPerCustomerExceededWixError
 * @throws CouponIsDisabledWixError
 * @throws CouponUsageExceededWixError
 * @throws CouponHasExpiredWixError
 * @throws CouponIsNotActiveYetWixError
 * @throws CouponDoesNotExistWixError
 */
declare function getEligibleDiscounts(payload: GetEligibleDiscountsEnvelope): GetEligibleDiscountsResponse | Promise<GetEligibleDiscountsResponse>;

export { GetEligibleDiscountsEnvelope, GetEligibleDiscountsResponse, getEligibleDiscounts };
