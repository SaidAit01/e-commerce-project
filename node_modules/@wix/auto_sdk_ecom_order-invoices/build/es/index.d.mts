import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { ListInvoicesForMultipleOrdersResponse } from './index.typings.mjs';
export { ActionEvent, AddInvoiceToOrderRequest, AddInvoiceToOrderResponse, ApplicationError, BulkActionMetadata, BulkGenerateInvoicesRequest, BulkGenerateInvoicesResponse, BulkInvoiceResult, DomainEvent, DomainEventBodyOneOf, Empty, EntityCreatedEvent, EntityDeletedEvent, EntityUpdatedEvent, GenerateInvoiceApplicationErrors, GenerateInvoiceRequest, GenerateInvoiceResponse, GenerateInvoiceWithNumberRequest, GenerateInvoiceWithNumberResponse, GetOrderInvoiceRequest, GetOrderInvoiceResponse, IdentificationData, IdentificationDataIdOneOf, Invoice, InvoiceForOrder, InvoicesForOrder, ItemMetadata, ListInvoicesForMultipleOrdersRequest, ListInvoicesForSingleOrderRequest, ListInvoicesForSingleOrderResponse, MessageEnvelope, RestoreInfo, WebhookIdentityType, WebhookIdentityTypeWithLiterals } from './index.typings.mjs';

declare function listInvoicesForMultipleOrders$1(httpClient: HttpClient): ListInvoicesForMultipleOrdersSignature;
interface ListInvoicesForMultipleOrdersSignature {
    /**
     * Retrieves the IDs of invoices associated with all specified orders.
     *
     *
     * The `listInvoicesForSingleOrder()` function returns a Promise that resolves when the specified order's transaction records are retrieved.
     * @param - Order IDs for which to retrieve invoices.
     */
    (orderIds: string[]): Promise<NonNullablePaths<ListInvoicesForMultipleOrdersResponse, `invoicesForOrder` | `invoicesForOrder.${number}.orderId`, 4>>;
}

declare const listInvoicesForMultipleOrders: MaybeContext<BuildRESTFunction<typeof listInvoicesForMultipleOrders$1> & typeof listInvoicesForMultipleOrders$1>;

export { ListInvoicesForMultipleOrdersResponse, listInvoicesForMultipleOrders };
