// src/ecom-orders-v1-invoice-order-invoices.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/ecom-orders-v1-invoice-order-invoices.http.ts
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixEcomOrdersInvoicesV1InvoicesUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/ecom/v1/ep-invoices",
        destPath: "/v1/invoices"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/ecom/v1/ep-invoices",
        destPath: "/v1/invoices"
      }
    ],
    _: [
      {
        srcPath: "/v1/invoices",
        destPath: "/v1/invoices"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_order-invoices";
function listInvoicesForMultipleOrders(payload) {
  function __listInvoicesForMultipleOrders({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.orders.v1.invoice",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.invoices.v1.Invoices.ListInvoicesForMultipleOrders",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersInvoicesV1InvoicesUrl({
        protoPath: "/v1/invoices/list-by-ids",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __listInvoicesForMultipleOrders;
}
function generateInvoice(payload) {
  function __generateInvoice({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.orders.v1.invoice",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.invoices.v1.Invoices.GenerateInvoice",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersInvoicesV1InvoicesUrl({
        protoPath: "/v1/invoices/orders/{orderId}",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __generateInvoice;
}
function bulkGenerateInvoices(payload) {
  function __bulkGenerateInvoices({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.orders.v1.invoice",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.invoices.v1.Invoices.BulkGenerateInvoices",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersInvoicesV1InvoicesUrl({
        protoPath: "/v1/bulk/invoices/generate",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkGenerateInvoices;
}
function addInvoiceToOrder(payload) {
  function __addInvoiceToOrder({ host }) {
    const metadata = {
      entityFqdn: "wix.ecom.orders.v1.invoice",
      method: "POST",
      methodFqn: "com.wix.ecom.orders.invoices.v1.Invoices.AddInvoiceToOrder",
      packageName: PACKAGE_NAME,
      url: resolveComWixEcomOrdersInvoicesV1InvoicesUrl({
        protoPath: "/v1/invoices/orders/{orderId}/add-invoice",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __addInvoiceToOrder;
}

// src/ecom-orders-v1-invoice-order-invoices.universal.ts
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function listInvoicesForMultipleOrders2(orderIds) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ orderIds });
  const reqOpts = listInvoicesForMultipleOrders(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { orderIds: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["orderIds"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function generateInvoice2(orderId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ orderId });
  const reqOpts = generateInvoice(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { orderId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["orderId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function bulkGenerateInvoices2(orderIds) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = renameKeysFromSDKRequestToRESTRequest({ orderIds });
  const reqOpts = bulkGenerateInvoices(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { orderIds: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["orderIds"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function addInvoiceToOrder2(orderId, invoiceInfo) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = renameKeysFromSDKRequestToRESTRequest({
    orderId,
    invoiceInfo
  });
  const reqOpts = addInvoiceToOrder(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { orderId: "$[0]", invoiceInfo: "$[1]" },
        singleArgumentUnchanged: false
      },
      ["orderId", "invoiceInfo"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/ecom-orders-v1-invoice-order-invoices.public.ts
function listInvoicesForMultipleOrders3(httpClient) {
  return (orderIds) => listInvoicesForMultipleOrders2(
    orderIds,
    // @ts-ignore
    { httpClient }
  );
}
function generateInvoice3(httpClient) {
  return (orderId) => generateInvoice2(
    orderId,
    // @ts-ignore
    { httpClient }
  );
}
function bulkGenerateInvoices3(httpClient) {
  return (orderIds) => bulkGenerateInvoices2(
    orderIds,
    // @ts-ignore
    { httpClient }
  );
}
function addInvoiceToOrder3(httpClient) {
  return (orderId, invoiceInfo) => addInvoiceToOrder2(
    orderId,
    invoiceInfo,
    // @ts-ignore
    { httpClient }
  );
}

// src/ecom-orders-v1-invoice-order-invoices.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
var listInvoicesForMultipleOrders4 = /* @__PURE__ */ createRESTModule(listInvoicesForMultipleOrders3);
var generateInvoice4 = /* @__PURE__ */ createRESTModule(generateInvoice3);
var bulkGenerateInvoices4 = /* @__PURE__ */ createRESTModule(bulkGenerateInvoices3);
var addInvoiceToOrder4 = /* @__PURE__ */ createRESTModule(addInvoiceToOrder3);
export {
  WebhookIdentityType,
  addInvoiceToOrder4 as addInvoiceToOrder,
  bulkGenerateInvoices4 as bulkGenerateInvoices,
  generateInvoice4 as generateInvoice,
  listInvoicesForMultipleOrders4 as listInvoicesForMultipleOrders
};
//# sourceMappingURL=index.mjs.map