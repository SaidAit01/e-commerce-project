// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.universal.ts
import { transformError as sdkTransformError } from "@wix/sdk-runtime/transform-error";
import {
  renameKeysFromSDKRequestToRESTRequest,
  renameKeysFromRESTResponseToSDKResponse
} from "@wix/sdk-runtime/rename-all-nested-keys";

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixBillingV1TaxCalculationUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/billing/v1/calculate-tax",
        destPath: "/v1/calculate-tax"
      },
      {
        srcPath: "/billing/v1/list-tax-calculators",
        destPath: "/v1/list-tax-calculators"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/billing/v1/calculate-tax",
        destPath: "/v1/calculate-tax"
      },
      {
        srcPath: "/billing/v1/list-tax-calculators",
        destPath: "/v1/list-tax-calculators"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tax-calculation";
function calculateTax(payload) {
  function __calculateTax({ host }) {
    const metadata = {
      entityFqdn: "wix.gateways.billing.v1.tax_calculation_gateway",
      method: "POST",
      methodFqn: "wix.billing.v1.TaxCalculation.CalculateTax",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxCalculationUrl({
        protoPath: "/v1/calculate-tax",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __calculateTax;
}
function listTaxCalculators(payload) {
  function __listTaxCalculators({ host }) {
    const metadata = {
      entityFqdn: "wix.gateways.billing.v1.tax_calculation_gateway",
      method: "GET",
      methodFqn: "wix.billing.v1.TaxCalculation.ListTaxCalculators",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxCalculationUrl({
        protoPath: "/v1/list-tax-calculators",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __listTaxCalculators;
}

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.universal.ts
import { transformSDKAddressToRESTAddress } from "@wix/sdk-runtime/transformations/address";
import { transformRESTAddressToSDKAddress } from "@wix/sdk-runtime/transformations/address";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
var JurisdictionType = /* @__PURE__ */ ((JurisdictionType2) => {
  JurisdictionType2["UNDEFINED"] = "UNDEFINED";
  JurisdictionType2["COUNTRY"] = "COUNTRY";
  JurisdictionType2["STATE"] = "STATE";
  JurisdictionType2["COUNTY"] = "COUNTY";
  JurisdictionType2["CITY"] = "CITY";
  JurisdictionType2["SPECIAL"] = "SPECIAL";
  return JurisdictionType2;
})(JurisdictionType || {});
async function calculateTax2(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = transformPaths(
    renameKeysFromSDKRequestToRESTRequest({
      externalId: options?.externalId,
      currency: options?.currency,
      addresses: options?.addresses,
      lineItems: options?.lineItems
    }),
    [
      {
        transformFn: transformSDKAddressToRESTAddress,
        paths: [{ path: "addresses", isRepeated: true }]
      }
    ]
  );
  const reqOpts = calculateTax(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(
      transformPaths(result.data, [
        {
          transformFn: transformRESTAddressToSDKAddress,
          paths: [{ path: "addresses", isRepeated: true }]
        }
      ])
    );
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          externalId: "$[0].externalId",
          currency: "$[0].currency",
          addresses: "$[0].addresses",
          lineItems: "$[0].lineItems"
        },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listTaxCalculators2() {
  const { httpClient, sideEffects } = arguments[0];
  const payload = renameKeysFromSDKRequestToRESTRequest({});
  const reqOpts = listTaxCalculators(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return renameKeysFromRESTResponseToSDKResponse(result.data);
  } catch (err) {
    const transformedError = sdkTransformError(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {},
        singleArgumentUnchanged: false
      },
      []
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.public.ts
function calculateTax3(httpClient) {
  return (options) => calculateTax2(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function listTaxCalculators3(httpClient) {
  return () => listTaxCalculators2(
    // @ts-ignore
    { httpClient }
  );
}

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.context.ts
import { createRESTModule } from "@wix/sdk-runtime/rest-modules";
var calculateTax4 = /* @__PURE__ */ createRESTModule(calculateTax3);
var listTaxCalculators4 = /* @__PURE__ */ createRESTModule(listTaxCalculators3);
export {
  JurisdictionType,
  calculateTax4 as calculateTax,
  listTaxCalculators4 as listTaxCalculators
};
//# sourceMappingURL=index.mjs.map