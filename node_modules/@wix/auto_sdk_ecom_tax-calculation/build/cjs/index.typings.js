"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.typings.ts
var index_typings_exports = {};
__export(index_typings_exports, {
  JurisdictionType: () => JurisdictionType,
  calculateTax: () => calculateTax2,
  listTaxCalculators: () => listTaxCalculators2
});
module.exports = __toCommonJS(index_typings_exports);

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixBillingV1TaxCalculationUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/billing/v1/calculate-tax",
        destPath: "/v1/calculate-tax"
      },
      {
        srcPath: "/billing/v1/list-tax-calculators",
        destPath: "/v1/list-tax-calculators"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/billing/v1/calculate-tax",
        destPath: "/v1/calculate-tax"
      },
      {
        srcPath: "/billing/v1/list-tax-calculators",
        destPath: "/v1/list-tax-calculators"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_ecom_tax-calculation";
function calculateTax(payload) {
  function __calculateTax({ host }) {
    const metadata = {
      entityFqdn: "wix.gateways.billing.v1.tax_calculation_gateway",
      method: "POST",
      methodFqn: "wix.billing.v1.TaxCalculation.CalculateTax",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxCalculationUrl({
        protoPath: "/v1/calculate-tax",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __calculateTax;
}
function listTaxCalculators(payload) {
  function __listTaxCalculators({ host }) {
    const metadata = {
      entityFqdn: "wix.gateways.billing.v1.tax_calculation_gateway",
      method: "GET",
      methodFqn: "wix.billing.v1.TaxCalculation.ListTaxCalculators",
      packageName: PACKAGE_NAME,
      url: resolveWixBillingV1TaxCalculationUrl({
        protoPath: "/v1/list-tax-calculators",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __listTaxCalculators;
}

// src/gateways-billing-v1-tax-calculation-gateway-tax-calculation.universal.ts
var import_address = require("@wix/sdk-runtime/transformations/address");
var import_address2 = require("@wix/sdk-runtime/transformations/address");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var JurisdictionType = /* @__PURE__ */ ((JurisdictionType2) => {
  JurisdictionType2["UNDEFINED"] = "UNDEFINED";
  JurisdictionType2["COUNTRY"] = "COUNTRY";
  JurisdictionType2["STATE"] = "STATE";
  JurisdictionType2["COUNTY"] = "COUNTY";
  JurisdictionType2["CITY"] = "CITY";
  JurisdictionType2["SPECIAL"] = "SPECIAL";
  return JurisdictionType2;
})(JurisdictionType || {});
async function calculateTax2(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_transform_paths.transformPaths)(
    (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
      externalId: options?.externalId,
      currency: options?.currency,
      addresses: options?.addresses,
      lineItems: options?.lineItems
    }),
    [
      {
        transformFn: import_address.transformSDKAddressToRESTAddress,
        paths: [{ path: "addresses", isRepeated: true }]
      }
    ]
  );
  const reqOpts = calculateTax(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths.transformPaths)(result.data, [
        {
          transformFn: import_address2.transformRESTAddressToSDKAddress,
          paths: [{ path: "addresses", isRepeated: true }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          externalId: "$[0].externalId",
          currency: "$[0].currency",
          addresses: "$[0].addresses",
          lineItems: "$[0].lineItems"
        },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listTaxCalculators2() {
  const { httpClient, sideEffects } = arguments[0];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({});
  const reqOpts = listTaxCalculators(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {},
        singleArgumentUnchanged: false
      },
      []
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  JurisdictionType,
  calculateTax,
  listTaxCalculators
});
//# sourceMappingURL=index.typings.js.map